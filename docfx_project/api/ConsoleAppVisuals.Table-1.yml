### YamlMime:ManagedReference
items:
- uid: ConsoleAppVisuals.Table`1
  commentId: T:ConsoleAppVisuals.Table`1
  id: Table`1
  parent: ConsoleAppVisuals
  children:
  - ConsoleAppVisuals.Table`1.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{`0}})
  - ConsoleAppVisuals.Table`1.AddLine(System.Collections.Generic.List{`0})
  - ConsoleAppVisuals.Table`1.Count
  - ConsoleAppVisuals.Table`1.GetLine(System.Int32)
  - ConsoleAppVisuals.Table`1.RemoveLine(System.Int32)
  - ConsoleAppVisuals.Table`1.ScrollingTableSelector(System.Boolean,System.Boolean,System.String,System.Nullable{System.Int32})
  - ConsoleAppVisuals.Table`1.UpdateLine(System.Int32,System.Collections.Generic.List{`0})
  langs:
  - csharp
  - vb
  name: Table<T>
  nameWithType: Table<T>
  fullName: ConsoleAppVisuals.Table<T>
  type: Class
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public class Table<T>
    typeParameters:
    - id: T
    content.vb: Public Class Table(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: Table(Of T)
  fullName.vb: ConsoleAppVisuals.Table(Of T)
  name.vb: Table(Of T)
- uid: ConsoleAppVisuals.Table`1.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{`0}})
  commentId: M:ConsoleAppVisuals.Table`1.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{`0}})
  id: '#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{`0}})'
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: Table(List<string>?, List<List<T>>?)
  nameWithType: Table<T>.Table(List<string>?, List<List<T>>?)
  fullName: ConsoleAppVisuals.Table<T>.Table(System.Collections.Generic.List<string>?, System.Collections.Generic.List<System.Collections.Generic.List<T>>?)
  type: Constructor
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public Table(List<string>? headers = null, List<List<T>>? lines = null)
    parameters:
    - id: headers
      type: System.Collections.Generic.List{System.String}
    - id: lines
      type: System.Collections.Generic.List{System.Collections.Generic.List{{T}}}
    content.vb: Public Sub New(headers As List(Of String) = Nothing, lines As List(Of List(Of T)) = Nothing)
  overload: ConsoleAppVisuals.Table`1.#ctor*
  nameWithType.vb: Table(Of T).New(List(Of String), List(Of List(Of T)))
  fullName.vb: ConsoleAppVisuals.Table(Of T).New(System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of System.Collections.Generic.List(Of T)))
  name.vb: New(List(Of String), List(Of List(Of T)))
- uid: ConsoleAppVisuals.Table`1.GetLine(System.Int32)
  commentId: M:ConsoleAppVisuals.Table`1.GetLine(System.Int32)
  id: GetLine(System.Int32)
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: GetLine(int)
  nameWithType: Table<T>.GetLine(int)
  fullName: ConsoleAppVisuals.Table<T>.GetLine(int)
  type: Method
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public List<T> GetLine(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function GetLine(index As Integer) As List(Of T)
  overload: ConsoleAppVisuals.Table`1.GetLine*
  nameWithType.vb: Table(Of T).GetLine(Integer)
  fullName.vb: ConsoleAppVisuals.Table(Of T).GetLine(Integer)
  name.vb: GetLine(Integer)
- uid: ConsoleAppVisuals.Table`1.AddLine(System.Collections.Generic.List{`0})
  commentId: M:ConsoleAppVisuals.Table`1.AddLine(System.Collections.Generic.List{`0})
  id: AddLine(System.Collections.Generic.List{`0})
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: AddLine(List<T>)
  nameWithType: Table<T>.AddLine(List<T>)
  fullName: ConsoleAppVisuals.Table<T>.AddLine(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public void AddLine(List<T> line)
    parameters:
    - id: line
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Sub AddLine(line As List(Of T))
  overload: ConsoleAppVisuals.Table`1.AddLine*
  nameWithType.vb: Table(Of T).AddLine(List(Of T))
  fullName.vb: ConsoleAppVisuals.Table(Of T).AddLine(System.Collections.Generic.List(Of T))
  name.vb: AddLine(List(Of T))
- uid: ConsoleAppVisuals.Table`1.RemoveLine(System.Int32)
  commentId: M:ConsoleAppVisuals.Table`1.RemoveLine(System.Int32)
  id: RemoveLine(System.Int32)
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: RemoveLine(int)
  nameWithType: Table<T>.RemoveLine(int)
  fullName: ConsoleAppVisuals.Table<T>.RemoveLine(int)
  type: Method
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public void RemoveLine(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveLine(index As Integer)
  overload: ConsoleAppVisuals.Table`1.RemoveLine*
  nameWithType.vb: Table(Of T).RemoveLine(Integer)
  fullName.vb: ConsoleAppVisuals.Table(Of T).RemoveLine(Integer)
  name.vb: RemoveLine(Integer)
- uid: ConsoleAppVisuals.Table`1.UpdateLine(System.Int32,System.Collections.Generic.List{`0})
  commentId: M:ConsoleAppVisuals.Table`1.UpdateLine(System.Int32,System.Collections.Generic.List{`0})
  id: UpdateLine(System.Int32,System.Collections.Generic.List{`0})
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: UpdateLine(int, List<T>)
  nameWithType: Table<T>.UpdateLine(int, List<T>)
  fullName: ConsoleAppVisuals.Table<T>.UpdateLine(int, System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public void UpdateLine(int index, List<T> line)
    parameters:
    - id: index
      type: System.Int32
    - id: line
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Sub UpdateLine(index As Integer, line As List(Of T))
  overload: ConsoleAppVisuals.Table`1.UpdateLine*
  nameWithType.vb: Table(Of T).UpdateLine(Integer, List(Of T))
  fullName.vb: ConsoleAppVisuals.Table(Of T).UpdateLine(Integer, System.Collections.Generic.List(Of T))
  name.vb: UpdateLine(Integer, List(Of T))
- uid: ConsoleAppVisuals.Table`1.ScrollingTableSelector(System.Boolean,System.Boolean,System.String,System.Nullable{System.Int32})
  commentId: M:ConsoleAppVisuals.Table`1.ScrollingTableSelector(System.Boolean,System.Boolean,System.String,System.Nullable{System.Int32})
  id: ScrollingTableSelector(System.Boolean,System.Boolean,System.String,System.Nullable{System.Int32})
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: ScrollingTableSelector(bool, bool, string?, int?)
  nameWithType: Table<T>.ScrollingTableSelector(bool, bool, string?, int?)
  fullName: ConsoleAppVisuals.Table<T>.ScrollingTableSelector(bool, bool, string?, int?)
  type: Method
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public (Output, int) ScrollingTableSelector(bool excludeHeader = true, bool excludeFooter = true, string? footerText = null, int? line = null)
    parameters:
    - id: excludeHeader
      type: System.Boolean
    - id: excludeFooter
      type: System.Boolean
    - id: footerText
      type: System.String
    - id: line
      type: System.Nullable{System.Int32}
    return:
      type: System.ValueTuple{ConsoleAppVisuals.Output,System.Int32}
    content.vb: Public Function ScrollingTableSelector(excludeHeader As Boolean = True, excludeFooter As Boolean = True, footerText As String = Nothing, line As Integer? = Nothing) As (Output, Integer)
  overload: ConsoleAppVisuals.Table`1.ScrollingTableSelector*
  nameWithType.vb: Table(Of T).ScrollingTableSelector(Boolean, Boolean, String, Integer?)
  fullName.vb: ConsoleAppVisuals.Table(Of T).ScrollingTableSelector(Boolean, Boolean, String, Integer?)
  name.vb: ScrollingTableSelector(Boolean, Boolean, String, Integer?)
- uid: ConsoleAppVisuals.Table`1.Count
  commentId: P:ConsoleAppVisuals.Table`1.Count
  id: Count
  parent: ConsoleAppVisuals.Table`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Table<T>.Count
  fullName: ConsoleAppVisuals.Table<T>.Count
  type: Property
  assemblies:
  - ConsoleAppVisuals
  namespace: ConsoleAppVisuals
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: ConsoleAppVisuals.Table`1.Count*
  nameWithType.vb: Table(Of T).Count
  fullName.vb: ConsoleAppVisuals.Table(Of T).Count
references:
- uid: ConsoleAppVisuals
  commentId: N:ConsoleAppVisuals
  isExternal: true
  href: ConsoleAppVisuals.html
  name: ConsoleAppVisuals
  nameWithType: ConsoleAppVisuals
  fullName: ConsoleAppVisuals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ConsoleAppVisuals.Table`1.#ctor*
  commentId: Overload:ConsoleAppVisuals.Table`1.#ctor
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1__ctor_System_Collections_Generic_List_System_String__System_Collections_Generic_List_System_Collections_Generic_List__0___
  name: Table
  nameWithType: Table<T>.Table
  fullName: ConsoleAppVisuals.Table<T>.Table
  nameWithType.vb: Table(Of T).New
  fullName.vb: ConsoleAppVisuals.Table(Of T).New
  name.vb: New
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List{System.Collections.Generic.List{{T}}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<List<T>>
  nameWithType: List<List<T>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<T>>
  nameWithType.vb: List(Of List(Of T))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of T))
  name.vb: List(Of List(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ConsoleAppVisuals.Table`1.GetLine*
  commentId: Overload:ConsoleAppVisuals.Table`1.GetLine
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_GetLine_System_Int32_
  name: GetLine
  nameWithType: Table<T>.GetLine
  fullName: ConsoleAppVisuals.Table<T>.GetLine
  nameWithType.vb: Table(Of T).GetLine
  fullName.vb: ConsoleAppVisuals.Table(Of T).GetLine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ConsoleAppVisuals.Table`1.AddLine*
  commentId: Overload:ConsoleAppVisuals.Table`1.AddLine
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_AddLine_System_Collections_Generic_List__0__
  name: AddLine
  nameWithType: Table<T>.AddLine
  fullName: ConsoleAppVisuals.Table<T>.AddLine
  nameWithType.vb: Table(Of T).AddLine
  fullName.vb: ConsoleAppVisuals.Table(Of T).AddLine
- uid: ConsoleAppVisuals.Table`1.RemoveLine*
  commentId: Overload:ConsoleAppVisuals.Table`1.RemoveLine
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_RemoveLine_System_Int32_
  name: RemoveLine
  nameWithType: Table<T>.RemoveLine
  fullName: ConsoleAppVisuals.Table<T>.RemoveLine
  nameWithType.vb: Table(Of T).RemoveLine
  fullName.vb: ConsoleAppVisuals.Table(Of T).RemoveLine
- uid: ConsoleAppVisuals.Table`1.UpdateLine*
  commentId: Overload:ConsoleAppVisuals.Table`1.UpdateLine
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_UpdateLine_System_Int32_System_Collections_Generic_List__0__
  name: UpdateLine
  nameWithType: Table<T>.UpdateLine
  fullName: ConsoleAppVisuals.Table<T>.UpdateLine
  nameWithType.vb: Table(Of T).UpdateLine
  fullName.vb: ConsoleAppVisuals.Table(Of T).UpdateLine
- uid: ConsoleAppVisuals.Table`1.ScrollingTableSelector*
  commentId: Overload:ConsoleAppVisuals.Table`1.ScrollingTableSelector
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_ScrollingTableSelector_System_Boolean_System_Boolean_System_String_System_Nullable_System_Int32__
  name: ScrollingTableSelector
  nameWithType: Table<T>.ScrollingTableSelector
  fullName: ConsoleAppVisuals.Table<T>.ScrollingTableSelector
  nameWithType.vb: Table(Of T).ScrollingTableSelector
  fullName.vb: ConsoleAppVisuals.Table(Of T).ScrollingTableSelector
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.ValueTuple{ConsoleAppVisuals.Output,System.Int32}
  commentId: T:System.ValueTuple{ConsoleAppVisuals.Output,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: ConsoleAppVisuals.Output.html
  name: (Output, int)
  nameWithType: (Output, int)
  fullName: (ConsoleAppVisuals.Output, int)
  nameWithType.vb: (Output, Integer)
  fullName.vb: (ConsoleAppVisuals.Output, Integer)
  name.vb: (Output, Integer)
  spec.csharp:
  - name: (
  - uid: ConsoleAppVisuals.Output
    name: Output
    isExternal: true
    href: ConsoleAppVisuals.Output.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - name: (
  - uid: ConsoleAppVisuals.Output
    name: Output
    isExternal: true
    href: ConsoleAppVisuals.Output.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ConsoleAppVisuals.Table`1.Count*
  commentId: Overload:ConsoleAppVisuals.Table`1.Count
  isExternal: true
  href: ConsoleAppVisuals.Table-1.html#ConsoleAppVisuals_Table_1_Count
  name: Count
  nameWithType: Table<T>.Count
  fullName: ConsoleAppVisuals.Table<T>.Count
  nameWithType.vb: Table(Of T).Count
  fullName.vb: ConsoleAppVisuals.Table(Of T).Count
