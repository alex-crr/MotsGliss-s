{
  "api/ConsoleAppVisuals.Core.html": {
    "href": "api/ConsoleAppVisuals.Core.html",
    "title": "Class Core | Mots Glissés",
    "keywords": "Class Core Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public static class Core Inheritance object Core Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties ContentHeight public static int ContentHeight { get; } Property Value int FooterHeight public static int FooterHeight { get; } Property Value int GetColorPanel public static (ConsoleColor, ConsoleColor) GetColorPanel { get; } Property Value (ConsoleColor, ConsoleColor) HeaderHeight public static int HeaderHeight { get; } Property Value int IsScreenUpdated public static bool IsScreenUpdated { get; } Property Value bool TitleHeight public static int? TitleHeight { get; } Property Value int? Methods ApplyNegative(bool) public static void ApplyNegative(bool negative = false) Parameters negative bool ChangeBackground(ConsoleColor) public static void ChangeBackground(ConsoleColor color) Parameters color ConsoleColor ChangeForeground(ConsoleColor) public static void ChangeForeground(ConsoleColor color) Parameters color ConsoleColor ClearContent() public static void ClearContent() ClearLine(int?) public static void ClearLine(int? line) Parameters line int? ClearMultipleLines(int?, int?) public static void ClearMultipleLines(int? line, int? length) Parameters line int? length int? ClearWindow() public static void ClearWindow() ExitProgram(string) public static void ExitProgram(string message = \"[ Exiting the program... ]\") Parameters message string LoadingBar(string, int?) public static void LoadingBar(string message = \"[ Loading... ]\", int? line = null) Parameters message string line int? ProcessLoadingBar(string, ref float, int?) public static void ProcessLoadingBar(string message, ref float processPercentage, int? line = null) Parameters message string processPercentage float line int? ScrollingMenuSelector(string, int?, int?, params string[]) public static (Output, int) ScrollingMenuSelector(string question, int? defaultIndex = null, int? line = null, params string[] choices) Parameters question string defaultIndex int? line int? choices string[] Returns (Output, int) ScrollingNumberSelector(string, float, float, float, float, int?) public static (Output, float) ScrollingNumberSelector(string question, float min, float max, float start = 0, float step = 100, int? line = null) Parameters question string min float max float start float step float line int? Returns (Output, float) SetDefaultBanner((string, string, string)?, (string, string, string)?) public static void SetDefaultBanner((string, string, string)? header = null, (string, string, string)? footer = null) Parameters header (string, string, string)? footer (string, string, string)? SetSelector(char, char) public static void SetSelector(char onward, char backward) Parameters onward char backward char SetStyler(string) public static void SetStyler(string path) Parameters path string SetTitle(string, int) public static void SetTitle(string str, int margin = 1) Parameters str string margin int UpdateScreen() public static void UpdateScreen() WriteBanner(bool, bool, (string, string, string)?) public static void WriteBanner(bool header = true, bool continuous = true, (string, string, string)? banner = null) Parameters header bool continuous bool banner (string, string, string)? WriteContinuousString(string, int?, bool, int, int, int?, Placement, bool) public static void WriteContinuousString(string str, int? line, bool negative = false, int printTime = 2000, int additionalTime = 1000, int? length = null, Placement position = Placement.Center, bool writeLine = false) Parameters str string line int? negative bool printTime int additionalTime int length int? position Placement writeLine bool WriteFullScreen(string?, bool, (string, string, string)?, (string, string, string)?) public static void WriteFullScreen(string? title = null, bool continuous = false, (string, string, string)? header = null, (string, string, string)? footer = null) Parameters title string continuous bool header (string, string, string)? footer (string, string, string)? WriteParagraph(bool, int?, params string[]) public static void WriteParagraph(bool negative = false, int? line = null, params string[] text) Parameters negative bool line int? text string[] WritePositionedString(string, Placement, bool, int?, bool) public static void WritePositionedString(string str, Placement position = Placement.Center, bool negative = false, int? line = null, bool writeLine = false) Parameters str string position Placement negative bool line int? writeLine bool WritePositionedStyledText(string[]?, int?, int?, int?, Placement, bool) public static void WritePositionedStyledText(string[]? text = null, int? line = null, int? width = null, int? margin = null, Placement position = Placement.Center, bool negative = false) Parameters text string[] line int? width int? margin int? position Placement negative bool WritePrompt(string, string?, int?, bool) public static (Output, string) WritePrompt(string message, string? defaultValue = null, int? line = null, bool continuous = true) Parameters message string defaultValue string line int? continuous bool Returns (Output, string) WriteTitle() public static void WriteTitle()"
  },
  "api/ConsoleAppVisuals.Extensions.html": {
    "href": "api/ConsoleAppVisuals.Extensions.html",
    "title": "Class Extensions | Mots Glissés",
    "keywords": "Class Extensions Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public static class Extensions Inheritance object Extensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods BannerToString((string, string, string)) public static string BannerToString(this (string, string, string) banner) Parameters banner (string, string, string) Returns string InsertString(string, string, Placement, bool) public static string InsertString(this string inserted, string toInsert, Placement position = Placement.Center, bool truncate = true) Parameters inserted string toInsert string position Placement truncate bool Returns string ResizeString(string, int, Placement, bool) public static string ResizeString(this string str, int size, Placement position = Placement.Center, bool truncate = true) Parameters str string size int position Placement truncate bool Returns string"
  },
  "api/ConsoleAppVisuals.FontYamlFile.html": {
    "href": "api/ConsoleAppVisuals.FontYamlFile.html",
    "title": "Class FontYamlFile | Mots Glissés",
    "keywords": "Class FontYamlFile Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public class FontYamlFile Inheritance object FontYamlFile Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FontYamlFile() public FontYamlFile() Properties Chars public required Dictionary<string, int> Chars { get; set; } Property Value Dictionary<string, int> Name public required string Name { get; set; } Property Value string"
  },
  "api/ConsoleAppVisuals.Output.html": {
    "href": "api/ConsoleAppVisuals.Output.html",
    "title": "Enum Output | Mots Glissés",
    "keywords": "Enum Output Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public enum Output Fields Delete = 1 Exit = 2 Select = 0"
  },
  "api/ConsoleAppVisuals.Placement.html": {
    "href": "api/ConsoleAppVisuals.Placement.html",
    "title": "Enum Placement | Mots Glissés",
    "keywords": "Enum Placement Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public enum Placement Fields Center = 1 Left = 0 Right = 2"
  },
  "api/ConsoleAppVisuals.Position.html": {
    "href": "api/ConsoleAppVisuals.Position.html",
    "title": "Struct Position | Mots Glissés",
    "keywords": "Struct Position Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public struct Position : IEquatable<Position> Implements IEquatable<Position> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Position(Position) public Position(Position pos) Parameters pos Position Position(int, int) public Position(int x, int y) Parameters x int y int Fields X public int X Field Value int Y public int Y Field Value int Methods Equals(object?) public override readonly bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override readonly int GetHashCode() Returns int ToString() public override readonly string ToString() Returns string Operators operator ==(Position, Position) public static bool operator ==(Position left, Position right) Parameters left Position right Position Returns bool operator !=(Position, Position) public static bool operator !=(Position left, Position right) Parameters left Position right Position Returns bool"
  },
  "api/ConsoleAppVisuals.Table-1.html": {
    "href": "api/ConsoleAppVisuals.Table-1.html",
    "title": "Class Table<T> | Mots Glissés",
    "keywords": "Class Table<T> Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public class Table<T> Type Parameters T Inheritance object Table<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Table(List<string>?, List<List<T>>?) public Table(List<string>? headers = null, List<List<T>>? lines = null) Parameters headers List<string> lines List<List<T>> Properties Count public int Count { get; } Property Value int Methods AddLine(List<T>) public void AddLine(List<T> line) Parameters line List<T> GetLine(int) public List<T> GetLine(int index) Parameters index int Returns List<T> RemoveLine(int) public void RemoveLine(int index) Parameters index int ScrollingTableSelector(bool, bool, string?, int?) public (Output, int) ScrollingTableSelector(bool excludeHeader = true, bool excludeFooter = true, string? footerText = null, int? line = null) Parameters excludeHeader bool excludeFooter bool footerText string line int? Returns (Output, int) UpdateLine(int, List<T>) public void UpdateLine(int index, List<T> line) Parameters index int line List<T>"
  },
  "api/ConsoleAppVisuals.TextStyler.html": {
    "href": "api/ConsoleAppVisuals.TextStyler.html",
    "title": "Class TextStyler | Mots Glissés",
    "keywords": "Class TextStyler Namespace ConsoleAppVisuals Assembly ConsoleAppVisuals.dll public class TextStyler Inheritance object TextStyler Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TextStyler(string?) public TextStyler(string? fontPath = null) Parameters fontPath string Fields dictionary public Dictionary<char, string> dictionary Field Value Dictionary<char, string> Methods StyleTextToString(string) public string StyleTextToString(string text) Parameters text string Returns string StyleTextToStringArray(string) public string[] StyleTextToStringArray(string text) Parameters text string Returns string[] ToString() public override string ToString() Returns string"
  },
  "api/ConsoleAppVisuals.html": {
    "href": "api/ConsoleAppVisuals.html",
    "title": "Namespace ConsoleAppVisuals | Mots Glissés",
    "keywords": "Namespace ConsoleAppVisuals Classes Core Extensions FontYamlFile Table<T> TextStyler Structs Position Enums Output Placement"
  },
  "api/MotsGlissés.Dictionnaire.html": {
    "href": "api/MotsGlissés.Dictionnaire.html",
    "title": "Class Dictionnaire | Mots Glissés",
    "keywords": "Class Dictionnaire Namespace MotsGlissés Assembly MotsGlissés.dll Classe représentant un dictionnaire. Elle ne contient que le chemin vers le fichier représentant le dictionnaire. public class Dictionnaire Inheritance object Dictionnaire Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Dictionnaire(string) Constructeur de la classe Dictionnaire public Dictionnaire(string chemin) Parameters chemin string Chemin vers le fichier représentant le dictionnaire Methods RechDichoRecursif(string) Recherche un mot dans le dictionnaire, via un stream, en accédant itérativement à la ligne correspondante au premier caractère du mot Nécessite que le dictionnaire soit trié, et que le format du fichier soit correct et en accord avec le sujet public bool RechDichoRecursif(string input) Parameters input string Mot recherché Returns bool bool: Vrai si la mot a été trouvé, faux si le mot n'est pas trouvé, ou est nul, de taille nulle, ou ne contient pas que des lettres Tri_Fusion() Effectue un Tri Fusion sur chacune des lignes du dictionnaire Possible de le faire grâce à des streams Implémentation de Fusion dans Extras.cs public void Tri_Fusion() toString() Représente le dictionnaire sous forme de chaîne de caractères Affiche la langue du dictionnaire (français par défaut ), puis le nombre de mots par lettre Implémenté avec un stream Assume que le dictionnaire soit conforme au format donné dans le sujet public string toString() Returns string string: la chaîne de caractère"
  },
  "api/MotsGlissés.Extras.Position.html": {
    "href": "api/MotsGlissés.Extras.Position.html",
    "title": "Struct Extras.Position | Mots Glissés",
    "keywords": "Struct Extras.Position Namespace MotsGlissés Assembly MotsGlissés.dll Represents a position in a two-dimensional space. public struct Extras.Position Inherited Members ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Position(int, int) Constructeur de la structure Position public Position(int x, int y) Parameters x int La position en x y int La position en y Properties X Propriété en lecture seule pour lire la position X, qui se réfère à la largeur de la console. public int X { get; } Property Value int Y Propriété en lecture seule pour lire la position Y, qui se réfère à la hauteur de la console. public int Y { get; } Property Value int Methods Equals(object?) Override de la méthode Equals pour tester l'égalité de deux positions public override bool Equals(object? obj) Parameters obj object Objet à tester Returns bool bool: vrai si les positions sont égales en x et y, faux dans le cas contraire, ou si elle est nulle. Operators operator ==(Position, Position) Override de l'opérateur == pour tester l'égalité de deux positions public static bool operator ==(Extras.Position left, Extras.Position right) Parameters left Extras.Position Première position right Extras.Position Seconde position Returns bool bool: vrai si les deux positions sont égales operator !=(Position, Position) Override de l'opérateur != pour tester l'inégalité de deux positions public static bool operator !=(Extras.Position left, Extras.Position right) Parameters left Extras.Position Première position right Extras.Position Seconde position Returns bool bool: vrai si l'inégalité est vérifiée, faux snn"
  },
  "api/MotsGlissés.Extras.html": {
    "href": "api/MotsGlissés.Extras.html",
    "title": "Class Extras | Mots Glissés",
    "keywords": "Class Extras Namespace MotsGlissés Assembly MotsGlissés.dll Cete classe contient des méthodes utiles pour le projet. Elles ne sont pas directement liées au jeu, mais rendent sont développement plus facile. Elles sont statiques pour pouvoir être appelées sans instancier la classe, et appelables depuis n'importe où. public class Extras Inheritance object Extras Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Extras() public Extras() Methods Fusion(string[]) Implémentation récursive du tri fusion sur un tableau de string. Le polymorphisme est simple à ajouter, mais n'est pas nécessaire pour le projet. public static string[] Fusion(string[] tab) Parameters tab string[] Tableau à trier Returns string[] string[]: le tableau qui a été trié ReadLine(TimeSpan) Equivalent de ReadLine mais avec un timeout public static string? ReadLine(TimeSpan timeout) Parameters timeout TimeSpan La durée maximale d'attente pour une entrée. Returns string La chaîne de caractères saisie par l'utilisateur, ou null si aucune saisie n'a été effectuée dans le délai imparti. Split(string[]) Méthode permettant de couper en deux un tableau de chaînes de caractères. Le polymorphisme est simple à ajouter, mais n'est pas nécessaire pour le projet. public static (string[], string[]) Split(string[] tab) Parameters tab string[] Le plateau à couper Returns (string[], string[]) (string[], string[]): un tuple des tableaux coupés, dans l'ordre de coupe"
  },
  "api/MotsGlissés.Jeu.html": {
    "href": "api/MotsGlissés.Jeu.html",
    "title": "Class Jeu | Mots Glissés",
    "keywords": "Class Jeu Namespace MotsGlissés Assembly MotsGlissés.dll Classe représentant une partie de Mot Glissé public class Jeu Inheritance object Jeu Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Jeu(Dictionnaire, Plateau, List<Joueur>, TimeSpan, TimeSpan) Constructeur de la classe Jeu public Jeu(Dictionnaire dico, Plateau plateau, List<Joueur> joueur, TimeSpan tempsJoueur, TimeSpan tempsJeu) Parameters dico Dictionnaire Dictionnaire utilisé pour valider plateau Plateau joueur List<Joueur> tempsJoueur TimeSpan tempsJeu TimeSpan Methods play() Méthode public void play()"
  },
  "api/MotsGlissés.Joueur.html": {
    "href": "api/MotsGlissés.Joueur.html",
    "title": "Class Joueur | Mots Glissés",
    "keywords": "Class Joueur Namespace MotsGlissés Assembly MotsGlissés.dll Classe représentant un joueur public class Joueur Inheritance object Joueur Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Joueur(string) Cosntructeur simple de la classe Joueur Tout est mis à 0 public Joueur(string nom) Parameters nom string Nom du joueur Joueur(string, int, List<string>) Constructeur de la classe Joueur public Joueur(string nom, int score, List<string> listeMotTrouver) Parameters nom string Nom du joueur score int Score initial du joueur listeMotTrouver List<string> Liste initiale des mots trouvés Properties Nom Propriété Nom en lecture seule public string Nom { get; } Property Value string Score Propriété Score en lecture seule public int Score { get; } Property Value int Methods Add_Mot(string) Ajoute un mot à la liste des mots trouvés par le joueur, seulement si ce mot n'a pas déjà été trouvé public void Add_Mot(string mot) Parameters mot string Mot qu'il faut ajouter à la liste des mots trouvés Add_Score(int) Ajoute un score au score du joueur Le score est calculé depuis plateau, à partir du poids des lettres et d'un bonus de 5 points pour avoir trouvé un mot public void Add_Score(int val) Parameters val int Valeur à ajouter Contient(string) Test si un mot a déjà été trouvé par le joueur public bool Contient(string mot) Parameters mot string Le mot qu'on teste Returns bool vrai si le mot a déjà été trouvé, faux sinon toString() Condense les informations du joueur en une chaine de caractère public string toString() Returns string La chaîne de caractère représentant le joueur"
  },
  "api/MotsGlissés.Plateau.html": {
    "href": "api/MotsGlissés.Plateau.html",
    "title": "Class Plateau | Mots Glissés",
    "keywords": "Class Plateau Namespace MotsGlissés Assembly MotsGlissés.dll Classe représentant un plateau de jeu public class Plateau Inheritance object Plateau Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Plateau() Crée un plateau de maniere aleatoire à partir d'un fichier .txt conforme au sujet Prochaine implémentations : sélection du fichier et de la taille du plateau public Plateau() Plateau(string) Constructeur qui crée un plateau à partir d'un fichier .csv Se référer à ToRead public Plateau(string filePath) Parameters filePath string Properties NbLettres Propriété en lecture seule représentant le nombre de lettres restantes sur le plateau public int NbLettres { get; } Property Value int Methods GetScore(string) Récupère le score d'un mot en fonction des valeurs des lettres public int GetScore(string mot) Parameters mot string Mot dont on cherche le scor associé Returns int int: valeur Scrabble du mot choisi Maj_Plateau(Stack<Position>) Mise à jour de la matrice représentant le plateau selon les positions données Remplace les positions par des espaces et fait descendre les lettres Les positions sont données dans une stack pour éviter les modifications intempestives des positions public void Maj_Plateau(Stack<Extras.Position> positions) Parameters positions Stack<Extras.Position> Pile des positions à modifier Recherche_Mot(string) public (bool, Stack<Extras.Position>) Recherche_Mot(string mot) Parameters mot string Returns (bool, Stack<Extras.Position>) ToFile(string) Sauvegarde l’instance du plateau dans un fichier en respectant la structure précisée public void ToFile(string filePath) Parameters filePath string Chemin du fichier d'écriture ToRead(string) Lecture d'un fichier .csv et remplissage du plateau public void ToRead(string filePath) Parameters filePath string Chemin vers le fichier toString() Retourne une chaîne de caractères qui représente le plateau public string toString() Returns string Chaîne de caractère représentant le tableau de jeu"
  },
  "api/MotsGlissés.html": {
    "href": "api/MotsGlissés.html",
    "title": "Namespace MotsGlissés | Mots Glissés",
    "keywords": "Namespace MotsGlissés Classes Dictionnaire Classe représentant un dictionnaire. Elle ne contient que le chemin vers le fichier représentant le dictionnaire. Extras Cete classe contient des méthodes utiles pour le projet. Elles ne sont pas directement liées au jeu, mais rendent sont développement plus facile. Elles sont statiques pour pouvoir être appelées sans instancier la classe, et appelables depuis n'importe où. Jeu Classe représentant une partie de Mot Glissé Joueur Classe représentant un joueur Plateau Classe représentant un plateau de jeu Structs Extras.Position Represents a position in a two-dimensional space."
  },
  "api/YamlDotNet.Core.AnchorName.html": {
    "href": "api/YamlDotNet.Core.AnchorName.html",
    "title": "Struct AnchorName | Mots Glissés",
    "keywords": "Struct AnchorName Namespace YamlDotNet.Core Assembly YamlDotNet.dll public struct AnchorName : IEquatable<AnchorName> Implements IEquatable<AnchorName> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors AnchorName(string) public AnchorName(string value) Parameters value string Fields Empty public static readonly AnchorName Empty Field Value AnchorName Properties IsEmpty public bool IsEmpty { get; } Property Value bool Value public string Value { get; } Property Value string Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool Equals(AnchorName) public bool Equals(AnchorName other) Parameters other AnchorName Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(AnchorName, AnchorName) public static bool operator ==(AnchorName left, AnchorName right) Parameters left AnchorName right AnchorName Returns bool implicit operator AnchorName(string?) public static implicit operator AnchorName(string? value) Parameters value string Returns AnchorName operator !=(AnchorName, AnchorName) public static bool operator !=(AnchorName left, AnchorName right) Parameters left AnchorName right AnchorName Returns bool"
  },
  "api/YamlDotNet.Core.AnchorNotFoundException.html": {
    "href": "api/YamlDotNet.Core.AnchorNotFoundException.html",
    "title": "Class AnchorNotFoundException | Mots Glissés",
    "keywords": "Class AnchorNotFoundException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class AnchorNotFoundException : YamlException, ISerializable Inheritance object Exception YamlException AnchorNotFoundException Implements ISerializable Inherited Members YamlException.ToString() YamlException.Start YamlException.End Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AnchorNotFoundException(string) public AnchorNotFoundException(string message) Parameters message string AnchorNotFoundException(string, Exception) public AnchorNotFoundException(string message, Exception inner) Parameters message string inner Exception AnchorNotFoundException(in Mark, in Mark, string) public AnchorNotFoundException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string"
  },
  "api/YamlDotNet.Core.Constants.html": {
    "href": "api/YamlDotNet.Core.Constants.html",
    "title": "Class Constants | Mots Glissés",
    "keywords": "Class Constants Namespace YamlDotNet.Core Assembly YamlDotNet.dll public static class Constants Inheritance object Constants Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields DefaultTagDirectives public static readonly TagDirective[] DefaultTagDirectives Field Value TagDirective[] MajorVersion public const int MajorVersion = 1 Field Value int MinorVersion public const int MinorVersion = 3 Field Value int"
  },
  "api/YamlDotNet.Core.Cursor.html": {
    "href": "api/YamlDotNet.Core.Cursor.html",
    "title": "Class Cursor | Mots Glissés",
    "keywords": "Class Cursor Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class Cursor Inheritance object Cursor Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Cursor() public Cursor() Cursor(Cursor) public Cursor(Cursor cursor) Parameters cursor Cursor Properties Index public int Index { get; } Property Value int Line public int Line { get; } Property Value int LineOffset public int LineOffset { get; } Property Value int Methods ForceSkipLineAfterNonBreak() public void ForceSkipLineAfterNonBreak() Mark() public Mark Mark() Returns Mark Skip() public void Skip() SkipLineByOffset(int) public void SkipLineByOffset(int offset) Parameters offset int"
  },
  "api/YamlDotNet.Core.Emitter.html": {
    "href": "api/YamlDotNet.Core.Emitter.html",
    "title": "Class Emitter | Mots Glissés",
    "keywords": "Class Emitter Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class Emitter : IEmitter Inheritance object Emitter Implements IEmitter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Emitter(TextWriter) public Emitter(TextWriter output) Parameters output TextWriter Emitter(TextWriter, int) public Emitter(TextWriter output, int bestIndent) Parameters output TextWriter bestIndent int Emitter(TextWriter, int, int) public Emitter(TextWriter output, int bestIndent, int bestWidth) Parameters output TextWriter bestIndent int bestWidth int Emitter(TextWriter, int, int, bool) public Emitter(TextWriter output, int bestIndent, int bestWidth, bool isCanonical) Parameters output TextWriter bestIndent int bestWidth int isCanonical bool Emitter(TextWriter, EmitterSettings) public Emitter(TextWriter output, EmitterSettings settings) Parameters output TextWriter settings EmitterSettings Methods Emit(ParsingEvent) public void Emit(ParsingEvent @event) Parameters event ParsingEvent"
  },
  "api/YamlDotNet.Core.EmitterSettings.html": {
    "href": "api/YamlDotNet.Core.EmitterSettings.html",
    "title": "Class EmitterSettings | Mots Glissés",
    "keywords": "Class EmitterSettings Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class EmitterSettings Inheritance object EmitterSettings Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EmitterSettings() public EmitterSettings() EmitterSettings(int, int, bool, int, bool, bool, string?) public EmitterSettings(int bestIndent, int bestWidth, bool isCanonical, int maxSimpleKeyLength, bool skipAnchorName = false, bool indentSequences = false, string? newLine = null) Parameters bestIndent int bestWidth int isCanonical bool maxSimpleKeyLength int skipAnchorName bool indentSequences bool newLine string Fields Default public static readonly EmitterSettings Default Field Value EmitterSettings Properties BestIndent public int BestIndent { get; } Property Value int BestWidth public int BestWidth { get; } Property Value int IndentSequences public bool IndentSequences { get; } Property Value bool IsCanonical public bool IsCanonical { get; } Property Value bool MaxSimpleKeyLength public int MaxSimpleKeyLength { get; } Property Value int NewLine public string NewLine { get; } Property Value string SkipAnchorName public bool SkipAnchorName { get; } Property Value bool Methods Canonical() public EmitterSettings Canonical() Returns EmitterSettings WithBestIndent(int) public EmitterSettings WithBestIndent(int bestIndent) Parameters bestIndent int Returns EmitterSettings WithBestWidth(int) public EmitterSettings WithBestWidth(int bestWidth) Parameters bestWidth int Returns EmitterSettings WithIndentedSequences() public EmitterSettings WithIndentedSequences() Returns EmitterSettings WithMaxSimpleKeyLength(int) public EmitterSettings WithMaxSimpleKeyLength(int maxSimpleKeyLength) Parameters maxSimpleKeyLength int Returns EmitterSettings WithNewLine(string) public EmitterSettings WithNewLine(string newLine) Parameters newLine string Returns EmitterSettings WithoutAnchorName() public EmitterSettings WithoutAnchorName() Returns EmitterSettings"
  },
  "api/YamlDotNet.Core.Events.AnchorAlias.html": {
    "href": "api/YamlDotNet.Core.Events.AnchorAlias.html",
    "title": "Class AnchorAlias | Mots Glissés",
    "keywords": "Class AnchorAlias Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class AnchorAlias : ParsingEvent Inheritance object ParsingEvent AnchorAlias Inherited Members ParsingEvent.NestingIncrease ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AnchorAlias(AnchorName) public AnchorAlias(AnchorName value) Parameters value AnchorName AnchorAlias(AnchorName, Mark, Mark) public AnchorAlias(AnchorName value, Mark start, Mark end) Parameters value AnchorName start Mark end Mark Properties Value public AnchorName Value { get; } Property Value AnchorName Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.Comment.html": {
    "href": "api/YamlDotNet.Core.Events.Comment.html",
    "title": "Class Comment | Mots Glissés",
    "keywords": "Class Comment Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class Comment : ParsingEvent Inheritance object ParsingEvent Comment Inherited Members ParsingEvent.NestingIncrease ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Comment(string, bool) public Comment(string value, bool isInline) Parameters value string isInline bool Comment(string, bool, Mark, Mark) public Comment(string value, bool isInline, Mark start, Mark end) Parameters value string isInline bool start Mark end Mark Properties IsInline public bool IsInline { get; } Property Value bool Value public string Value { get; } Property Value string Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.DocumentEnd.html": {
    "href": "api/YamlDotNet.Core.Events.DocumentEnd.html",
    "title": "Class DocumentEnd | Mots Glissés",
    "keywords": "Class DocumentEnd Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class DocumentEnd : ParsingEvent Inheritance object ParsingEvent DocumentEnd Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DocumentEnd(bool) public DocumentEnd(bool isImplicit) Parameters isImplicit bool DocumentEnd(bool, Mark, Mark) public DocumentEnd(bool isImplicit, Mark start, Mark end) Parameters isImplicit bool start Mark end Mark Properties IsImplicit public bool IsImplicit { get; } Property Value bool NestingIncrease public override int NestingIncrease { get; } Property Value int Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.DocumentStart.html": {
    "href": "api/YamlDotNet.Core.Events.DocumentStart.html",
    "title": "Class DocumentStart | Mots Glissés",
    "keywords": "Class DocumentStart Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class DocumentStart : ParsingEvent Inheritance object ParsingEvent DocumentStart Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DocumentStart() public DocumentStart() DocumentStart(in Mark, in Mark) public DocumentStart(in Mark start, in Mark end) Parameters start Mark end Mark DocumentStart(VersionDirective?, TagDirectiveCollection?, bool) public DocumentStart(VersionDirective? version, TagDirectiveCollection? tags, bool isImplicit) Parameters version VersionDirective tags TagDirectiveCollection isImplicit bool DocumentStart(VersionDirective?, TagDirectiveCollection?, bool, Mark, Mark) public DocumentStart(VersionDirective? version, TagDirectiveCollection? tags, bool isImplicit, Mark start, Mark end) Parameters version VersionDirective tags TagDirectiveCollection isImplicit bool start Mark end Mark Properties IsImplicit public bool IsImplicit { get; } Property Value bool NestingIncrease public override int NestingIncrease { get; } Property Value int Tags public TagDirectiveCollection? Tags { get; } Property Value TagDirectiveCollection Version public VersionDirective? Version { get; } Property Value VersionDirective Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.IParsingEventVisitor.html": {
    "href": "api/YamlDotNet.Core.Events.IParsingEventVisitor.html",
    "title": "Interface IParsingEventVisitor | Mots Glissés",
    "keywords": "Interface IParsingEventVisitor Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public interface IParsingEventVisitor Methods Visit(AnchorAlias) void Visit(AnchorAlias e) Parameters e AnchorAlias Visit(Comment) void Visit(Comment e) Parameters e Comment Visit(DocumentEnd) void Visit(DocumentEnd e) Parameters e DocumentEnd Visit(DocumentStart) void Visit(DocumentStart e) Parameters e DocumentStart Visit(MappingEnd) void Visit(MappingEnd e) Parameters e MappingEnd Visit(MappingStart) void Visit(MappingStart e) Parameters e MappingStart Visit(Scalar) void Visit(Scalar e) Parameters e Scalar Visit(SequenceEnd) void Visit(SequenceEnd e) Parameters e SequenceEnd Visit(SequenceStart) void Visit(SequenceStart e) Parameters e SequenceStart Visit(StreamEnd) void Visit(StreamEnd e) Parameters e StreamEnd Visit(StreamStart) void Visit(StreamStart e) Parameters e StreamStart"
  },
  "api/YamlDotNet.Core.Events.MappingEnd.html": {
    "href": "api/YamlDotNet.Core.Events.MappingEnd.html",
    "title": "Class MappingEnd | Mots Glissés",
    "keywords": "Class MappingEnd Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public class MappingEnd : ParsingEvent Inheritance object ParsingEvent MappingEnd Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MappingEnd() public MappingEnd() MappingEnd(in Mark, in Mark) public MappingEnd(in Mark start, in Mark end) Parameters start Mark end Mark Properties NestingIncrease public override int NestingIncrease { get; } Property Value int Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.MappingStart.html": {
    "href": "api/YamlDotNet.Core.Events.MappingStart.html",
    "title": "Class MappingStart | Mots Glissés",
    "keywords": "Class MappingStart Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class MappingStart : NodeEvent Inheritance object ParsingEvent NodeEvent MappingStart Inherited Members NodeEvent.Anchor NodeEvent.Tag ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MappingStart() public MappingStart() MappingStart(AnchorName, TagName, bool, MappingStyle) public MappingStart(AnchorName anchor, TagName tag, bool isImplicit, MappingStyle style) Parameters anchor AnchorName tag TagName isImplicit bool style MappingStyle MappingStart(AnchorName, TagName, bool, MappingStyle, Mark, Mark) public MappingStart(AnchorName anchor, TagName tag, bool isImplicit, MappingStyle style, Mark start, Mark end) Parameters anchor AnchorName tag TagName isImplicit bool style MappingStyle start Mark end Mark Properties IsCanonical public override bool IsCanonical { get; } Property Value bool IsImplicit public bool IsImplicit { get; } Property Value bool NestingIncrease public override int NestingIncrease { get; } Property Value int Style public MappingStyle Style { get; } Property Value MappingStyle Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.MappingStyle.html": {
    "href": "api/YamlDotNet.Core.Events.MappingStyle.html",
    "title": "Enum MappingStyle | Mots Glissés",
    "keywords": "Enum MappingStyle Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public enum MappingStyle Fields Any = 0 Block = 1 Flow = 2"
  },
  "api/YamlDotNet.Core.Events.NodeEvent.html": {
    "href": "api/YamlDotNet.Core.Events.NodeEvent.html",
    "title": "Class NodeEvent | Mots Glissés",
    "keywords": "Class NodeEvent Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public abstract class NodeEvent : ParsingEvent Inheritance object ParsingEvent NodeEvent Derived MappingStart Scalar SequenceStart Inherited Members ParsingEvent.Accept(IParsingEventVisitor) ParsingEvent.NestingIncrease ParsingEvent.Start ParsingEvent.End object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NodeEvent(AnchorName, TagName) protected NodeEvent(AnchorName anchor, TagName tag) Parameters anchor AnchorName tag TagName NodeEvent(AnchorName, TagName, Mark, Mark) protected NodeEvent(AnchorName anchor, TagName tag, Mark start, Mark end) Parameters anchor AnchorName tag TagName start Mark end Mark Properties Anchor public AnchorName Anchor { get; } Property Value AnchorName IsCanonical public abstract bool IsCanonical { get; } Property Value bool Tag public TagName Tag { get; } Property Value TagName"
  },
  "api/YamlDotNet.Core.Events.ParsingEvent.html": {
    "href": "api/YamlDotNet.Core.Events.ParsingEvent.html",
    "title": "Class ParsingEvent | Mots Glissés",
    "keywords": "Class ParsingEvent Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public abstract class ParsingEvent Inheritance object ParsingEvent Derived AnchorAlias Comment DocumentEnd DocumentStart MappingEnd NodeEvent SequenceEnd StreamEnd StreamStart Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties End public Mark End { get; } Property Value Mark NestingIncrease public virtual int NestingIncrease { get; } Property Value int Start public Mark Start { get; } Property Value Mark Methods Accept(IParsingEventVisitor) public abstract void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor"
  },
  "api/YamlDotNet.Core.Events.Scalar.html": {
    "href": "api/YamlDotNet.Core.Events.Scalar.html",
    "title": "Class Scalar | Mots Glissés",
    "keywords": "Class Scalar Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class Scalar : NodeEvent Inheritance object ParsingEvent NodeEvent Scalar Inherited Members NodeEvent.Anchor NodeEvent.Tag ParsingEvent.NestingIncrease ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Scalar(string) public Scalar(string value) Parameters value string Scalar(AnchorName, TagName, string) public Scalar(AnchorName anchor, TagName tag, string value) Parameters anchor AnchorName tag TagName value string Scalar(AnchorName, TagName, string, ScalarStyle, bool, bool) public Scalar(AnchorName anchor, TagName tag, string value, ScalarStyle style, bool isPlainImplicit, bool isQuotedImplicit) Parameters anchor AnchorName tag TagName value string style ScalarStyle isPlainImplicit bool isQuotedImplicit bool Scalar(AnchorName, TagName, string, ScalarStyle, bool, bool, Mark, Mark, bool) public Scalar(AnchorName anchor, TagName tag, string value, ScalarStyle style, bool isPlainImplicit, bool isQuotedImplicit, Mark start, Mark end, bool isKey = false) Parameters anchor AnchorName tag TagName value string style ScalarStyle isPlainImplicit bool isQuotedImplicit bool start Mark end Mark isKey bool Scalar(TagName, string) public Scalar(TagName tag, string value) Parameters tag TagName value string Properties IsCanonical public override bool IsCanonical { get; } Property Value bool IsKey public bool IsKey { get; } Property Value bool IsPlainImplicit public bool IsPlainImplicit { get; } Property Value bool IsQuotedImplicit public bool IsQuotedImplicit { get; } Property Value bool Style public ScalarStyle Style { get; } Property Value ScalarStyle Value public string Value { get; } Property Value string Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.SequenceEnd.html": {
    "href": "api/YamlDotNet.Core.Events.SequenceEnd.html",
    "title": "Class SequenceEnd | Mots Glissés",
    "keywords": "Class SequenceEnd Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class SequenceEnd : ParsingEvent Inheritance object ParsingEvent SequenceEnd Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequenceEnd() public SequenceEnd() SequenceEnd(in Mark, in Mark) public SequenceEnd(in Mark start, in Mark end) Parameters start Mark end Mark Properties NestingIncrease public override int NestingIncrease { get; } Property Value int Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.SequenceStart.html": {
    "href": "api/YamlDotNet.Core.Events.SequenceStart.html",
    "title": "Class SequenceStart | Mots Glissés",
    "keywords": "Class SequenceStart Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class SequenceStart : NodeEvent Inheritance object ParsingEvent NodeEvent SequenceStart Inherited Members NodeEvent.Anchor NodeEvent.Tag ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequenceStart(AnchorName, TagName, bool, SequenceStyle) public SequenceStart(AnchorName anchor, TagName tag, bool isImplicit, SequenceStyle style) Parameters anchor AnchorName tag TagName isImplicit bool style SequenceStyle SequenceStart(AnchorName, TagName, bool, SequenceStyle, Mark, Mark) public SequenceStart(AnchorName anchor, TagName tag, bool isImplicit, SequenceStyle style, Mark start, Mark end) Parameters anchor AnchorName tag TagName isImplicit bool style SequenceStyle start Mark end Mark Properties IsCanonical public override bool IsCanonical { get; } Property Value bool IsImplicit public bool IsImplicit { get; } Property Value bool NestingIncrease public override int NestingIncrease { get; } Property Value int Style public SequenceStyle Style { get; } Property Value SequenceStyle Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.SequenceStyle.html": {
    "href": "api/YamlDotNet.Core.Events.SequenceStyle.html",
    "title": "Enum SequenceStyle | Mots Glissés",
    "keywords": "Enum SequenceStyle Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public enum SequenceStyle Fields Any = 0 Block = 1 Flow = 2"
  },
  "api/YamlDotNet.Core.Events.StreamEnd.html": {
    "href": "api/YamlDotNet.Core.Events.StreamEnd.html",
    "title": "Class StreamEnd | Mots Glissés",
    "keywords": "Class StreamEnd Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class StreamEnd : ParsingEvent Inheritance object ParsingEvent StreamEnd Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamEnd() public StreamEnd() StreamEnd(in Mark, in Mark) public StreamEnd(in Mark start, in Mark end) Parameters start Mark end Mark Properties NestingIncrease public override int NestingIncrease { get; } Property Value int Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.StreamStart.html": {
    "href": "api/YamlDotNet.Core.Events.StreamStart.html",
    "title": "Class StreamStart | Mots Glissés",
    "keywords": "Class StreamStart Namespace YamlDotNet.Core.Events Assembly YamlDotNet.dll public sealed class StreamStart : ParsingEvent Inheritance object ParsingEvent StreamStart Inherited Members ParsingEvent.Start ParsingEvent.End object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamStart() public StreamStart() StreamStart(in Mark, in Mark) public StreamStart(in Mark start, in Mark end) Parameters start Mark end Mark Properties NestingIncrease public override int NestingIncrease { get; } Property Value int Methods Accept(IParsingEventVisitor) public override void Accept(IParsingEventVisitor visitor) Parameters visitor IParsingEventVisitor ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Events.html": {
    "href": "api/YamlDotNet.Core.Events.html",
    "title": "Namespace YamlDotNet.Core.Events | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Core.Events Classes AnchorAlias Comment DocumentEnd DocumentStart MappingEnd MappingStart NodeEvent ParsingEvent Scalar SequenceEnd SequenceStart StreamEnd StreamStart Interfaces IParsingEventVisitor Enums MappingStyle SequenceStyle"
  },
  "api/YamlDotNet.Core.ForwardAnchorNotSupportedException.html": {
    "href": "api/YamlDotNet.Core.ForwardAnchorNotSupportedException.html",
    "title": "Class ForwardAnchorNotSupportedException | Mots Glissés",
    "keywords": "Class ForwardAnchorNotSupportedException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class ForwardAnchorNotSupportedException : YamlException, ISerializable Inheritance object Exception YamlException ForwardAnchorNotSupportedException Implements ISerializable Inherited Members YamlException.ToString() YamlException.Start YamlException.End Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ForwardAnchorNotSupportedException(string) public ForwardAnchorNotSupportedException(string message) Parameters message string ForwardAnchorNotSupportedException(string, Exception) public ForwardAnchorNotSupportedException(string message, Exception inner) Parameters message string inner Exception ForwardAnchorNotSupportedException(in Mark, in Mark, string) public ForwardAnchorNotSupportedException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string"
  },
  "api/YamlDotNet.Core.IEmitter.html": {
    "href": "api/YamlDotNet.Core.IEmitter.html",
    "title": "Interface IEmitter | Mots Glissés",
    "keywords": "Interface IEmitter Namespace YamlDotNet.Core Assembly YamlDotNet.dll public interface IEmitter Methods Emit(ParsingEvent) void Emit(ParsingEvent @event) Parameters event ParsingEvent"
  },
  "api/YamlDotNet.Core.IParser.html": {
    "href": "api/YamlDotNet.Core.IParser.html",
    "title": "Interface IParser | Mots Glissés",
    "keywords": "Interface IParser Namespace YamlDotNet.Core Assembly YamlDotNet.dll public interface IParser Extension Methods ParserExtensions.Accept<T>(IParser) ParserExtensions.Accept<T>(IParser, out T) ParserExtensions.Allow<T>(IParser) ParserExtensions.Consume<T>(IParser) ParserExtensions.Expect<T>(IParser) ParserExtensions.Peek<T>(IParser) ParserExtensions.Require<T>(IParser) ParserExtensions.SkipThisAndNestedEvents(IParser) ParserExtensions.TryConsume<T>(IParser, out T) ParserExtensions.TryFindMappingEntry(IParser, Func<Scalar, bool>, out Scalar?, out ParsingEvent?) Properties Current ParsingEvent? Current { get; } Property Value ParsingEvent Methods MoveNext() bool MoveNext() Returns bool"
  },
  "api/YamlDotNet.Core.IScanner.html": {
    "href": "api/YamlDotNet.Core.IScanner.html",
    "title": "Interface IScanner | Mots Glissés",
    "keywords": "Interface IScanner Namespace YamlDotNet.Core Assembly YamlDotNet.dll public interface IScanner Properties Current Token? Current { get; } Property Value Token CurrentPosition Mark CurrentPosition { get; } Property Value Mark Methods ConsumeCurrent() void ConsumeCurrent() MoveNext() bool MoveNext() Returns bool MoveNextWithoutConsuming() bool MoveNextWithoutConsuming() Returns bool"
  },
  "api/YamlDotNet.Core.InsertionQueue-1.html": {
    "href": "api/YamlDotNet.Core.InsertionQueue-1.html",
    "title": "Class InsertionQueue<T> | Mots Glissés",
    "keywords": "Class InsertionQueue<T> Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class InsertionQueue<T> : IEnumerable<T>, IEnumerable Type Parameters T Inheritance object InsertionQueue<T> Implements IEnumerable<T> IEnumerable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors InsertionQueue(int) public InsertionQueue(int initialCapacity = 128) Parameters initialCapacity int Properties Capacity public int Capacity { get; } Property Value int Count public int Count { get; } Property Value int Methods Dequeue() public T Dequeue() Returns T Enqueue(T) public void Enqueue(T item) Parameters item T GetEnumerator() public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> Insert(int, T) public void Insert(int index, T item) Parameters index int item T"
  },
  "api/YamlDotNet.Core.LookAheadBuffer.html": {
    "href": "api/YamlDotNet.Core.LookAheadBuffer.html",
    "title": "Class LookAheadBuffer | Mots Glissés",
    "keywords": "Class LookAheadBuffer Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class LookAheadBuffer Inheritance object LookAheadBuffer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors LookAheadBuffer(TextReader, int) public LookAheadBuffer(TextReader input, int capacity) Parameters input TextReader capacity int Properties EndOfInput public bool EndOfInput { get; } Property Value bool Methods Cache(int) public void Cache(int length) Parameters length int Peek(int) public char Peek(int offset) Parameters offset int Returns char Skip(int) public void Skip(int length) Parameters length int"
  },
  "api/YamlDotNet.Core.Mark.html": {
    "href": "api/YamlDotNet.Core.Mark.html",
    "title": "Struct Mark | Mots Glissés",
    "keywords": "Struct Mark Namespace YamlDotNet.Core Assembly YamlDotNet.dll public readonly struct Mark : IEquatable<Mark>, IComparable<Mark>, IComparable Implements IEquatable<Mark> IComparable<Mark> IComparable Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Mark(int, int, int) public Mark(int index, int line, int column) Parameters index int line int column int Fields Empty public static readonly Mark Empty Field Value Mark Properties Column public int Column { get; } Property Value int Index public int Index { get; } Property Value int Line public int Line { get; } Property Value int Methods CompareTo(object?) public int CompareTo(object? obj) Parameters obj object Returns int CompareTo(Mark) public int CompareTo(Mark other) Parameters other Mark Returns int Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool Equals(Mark) public bool Equals(Mark other) Parameters other Mark Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.MaximumRecursionLevelReachedException.html": {
    "href": "api/YamlDotNet.Core.MaximumRecursionLevelReachedException.html",
    "title": "Class MaximumRecursionLevelReachedException | Mots Glissés",
    "keywords": "Class MaximumRecursionLevelReachedException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class MaximumRecursionLevelReachedException : YamlException, ISerializable Inheritance object Exception YamlException MaximumRecursionLevelReachedException Implements ISerializable Inherited Members YamlException.ToString() YamlException.Start YamlException.End Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MaximumRecursionLevelReachedException(string) public MaximumRecursionLevelReachedException(string message) Parameters message string MaximumRecursionLevelReachedException(string, Exception) public MaximumRecursionLevelReachedException(string message, Exception inner) Parameters message string inner Exception MaximumRecursionLevelReachedException(in Mark, in Mark, string) public MaximumRecursionLevelReachedException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string"
  },
  "api/YamlDotNet.Core.MergingParser.html": {
    "href": "api/YamlDotNet.Core.MergingParser.html",
    "title": "Class MergingParser | Mots Glissés",
    "keywords": "Class MergingParser Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class MergingParser : IParser Inheritance object MergingParser Implements IParser Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ParserExtensions.Accept<T>(IParser) ParserExtensions.Accept<T>(IParser, out T) ParserExtensions.Allow<T>(IParser) ParserExtensions.Consume<T>(IParser) ParserExtensions.Expect<T>(IParser) ParserExtensions.Peek<T>(IParser) ParserExtensions.Require<T>(IParser) ParserExtensions.SkipThisAndNestedEvents(IParser) ParserExtensions.TryConsume<T>(IParser, out T) ParserExtensions.TryFindMappingEntry(IParser, Func<Scalar, bool>, out Scalar?, out ParsingEvent?) Constructors MergingParser(IParser) public MergingParser(IParser innerParser) Parameters innerParser IParser Properties Current public ParsingEvent? Current { get; } Property Value ParsingEvent Methods MoveNext() public bool MoveNext() Returns bool"
  },
  "api/YamlDotNet.Core.Parser.html": {
    "href": "api/YamlDotNet.Core.Parser.html",
    "title": "Class Parser | Mots Glissés",
    "keywords": "Class Parser Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class Parser : IParser Inheritance object Parser Implements IParser Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ParserExtensions.Accept<T>(IParser) ParserExtensions.Accept<T>(IParser, out T) ParserExtensions.Allow<T>(IParser) ParserExtensions.Consume<T>(IParser) ParserExtensions.Expect<T>(IParser) ParserExtensions.Peek<T>(IParser) ParserExtensions.Require<T>(IParser) ParserExtensions.SkipThisAndNestedEvents(IParser) ParserExtensions.TryConsume<T>(IParser, out T) ParserExtensions.TryFindMappingEntry(IParser, Func<Scalar, bool>, out Scalar?, out ParsingEvent?) Constructors Parser(TextReader) public Parser(TextReader input) Parameters input TextReader Parser(IScanner) public Parser(IScanner scanner) Parameters scanner IScanner Properties Current public ParsingEvent? Current { get; } Property Value ParsingEvent Methods MoveNext() public bool MoveNext() Returns bool"
  },
  "api/YamlDotNet.Core.ParserExtensions.html": {
    "href": "api/YamlDotNet.Core.ParserExtensions.html",
    "title": "Class ParserExtensions | Mots Glissés",
    "keywords": "Class ParserExtensions Namespace YamlDotNet.Core Assembly YamlDotNet.dll public static class ParserExtensions Inheritance object ParserExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Accept<T>(IParser) [Obsolete(\"Please use TryConsume<T>(out var evt) or Accept<T>(out var evt) instead\")] public static bool Accept<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns bool Type Parameters T Accept<T>(IParser, out T) public static bool Accept<T>(this IParser parser, out T @event) where T : ParsingEvent Parameters parser IParser event T Returns bool Type Parameters T Allow<T>(IParser) [Obsolete(\"Please use TryConsume<T>(out var evt) instead\")] public static T? Allow<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns T Type Parameters T Consume<T>(IParser) public static T Consume<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns T Type Parameters T Expect<T>(IParser) [Obsolete(\"Please use Consume<T>() instead\")] public static T Expect<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns T Type Parameters T Peek<T>(IParser) [Obsolete(\"Please use Accept<T>(out var evt) instead\")] public static T? Peek<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns T Type Parameters T Require<T>(IParser) public static T Require<T>(this IParser parser) where T : ParsingEvent Parameters parser IParser Returns T Type Parameters T SkipThisAndNestedEvents(IParser) public static void SkipThisAndNestedEvents(this IParser parser) Parameters parser IParser TryConsume<T>(IParser, out T) public static bool TryConsume<T>(this IParser parser, out T @event) where T : ParsingEvent Parameters parser IParser event T Returns bool Type Parameters T TryFindMappingEntry(IParser, Func<Scalar, bool>, out Scalar?, out ParsingEvent?) public static bool TryFindMappingEntry(this IParser parser, Func<Scalar, bool> selector, out Scalar? key, out ParsingEvent? value) Parameters parser IParser selector Func<Scalar, bool> key Scalar value ParsingEvent Returns bool"
  },
  "api/YamlDotNet.Core.ScalarStyle.html": {
    "href": "api/YamlDotNet.Core.ScalarStyle.html",
    "title": "Enum ScalarStyle | Mots Glissés",
    "keywords": "Enum ScalarStyle Namespace YamlDotNet.Core Assembly YamlDotNet.dll public enum ScalarStyle Fields Any = 0 DoubleQuoted = 3 Folded = 5 Literal = 4 Plain = 1 SingleQuoted = 2"
  },
  "api/YamlDotNet.Core.Scanner.html": {
    "href": "api/YamlDotNet.Core.Scanner.html",
    "title": "Class Scanner | Mots Glissés",
    "keywords": "Class Scanner Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class Scanner : IScanner Inheritance object Scanner Implements IScanner Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Scanner(TextReader, bool) public Scanner(TextReader input, bool skipComments = true) Parameters input TextReader skipComments bool Properties Current public Token? Current { get; } Property Value Token CurrentPosition public Mark CurrentPosition { get; } Property Value Mark SkipComments public bool SkipComments { get; } Property Value bool Methods ConsumeCurrent() public void ConsumeCurrent() MoveNext() public bool MoveNext() Returns bool MoveNextWithoutConsuming() public bool MoveNextWithoutConsuming() Returns bool"
  },
  "api/YamlDotNet.Core.SemanticErrorException.html": {
    "href": "api/YamlDotNet.Core.SemanticErrorException.html",
    "title": "Class SemanticErrorException | Mots Glissés",
    "keywords": "Class SemanticErrorException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class SemanticErrorException : YamlException, ISerializable Inheritance object Exception YamlException SemanticErrorException Implements ISerializable Inherited Members YamlException.ToString() YamlException.Start YamlException.End Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SemanticErrorException(string) public SemanticErrorException(string message) Parameters message string SemanticErrorException(string, Exception) public SemanticErrorException(string message, Exception inner) Parameters message string inner Exception SemanticErrorException(in Mark, in Mark, string) public SemanticErrorException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string"
  },
  "api/YamlDotNet.Core.SyntaxErrorException.html": {
    "href": "api/YamlDotNet.Core.SyntaxErrorException.html",
    "title": "Class SyntaxErrorException | Mots Glissés",
    "keywords": "Class SyntaxErrorException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class SyntaxErrorException : YamlException, ISerializable Inheritance object Exception YamlException SyntaxErrorException Implements ISerializable Inherited Members YamlException.ToString() YamlException.Start YamlException.End Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SyntaxErrorException(string) public SyntaxErrorException(string message) Parameters message string SyntaxErrorException(string, Exception) public SyntaxErrorException(string message, Exception inner) Parameters message string inner Exception SyntaxErrorException(in Mark, in Mark, string) public SyntaxErrorException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string"
  },
  "api/YamlDotNet.Core.TagDirectiveCollection.html": {
    "href": "api/YamlDotNet.Core.TagDirectiveCollection.html",
    "title": "Class TagDirectiveCollection | Mots Glissés",
    "keywords": "Class TagDirectiveCollection Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class TagDirectiveCollection : KeyedCollection<string, TagDirective>, IList<TagDirective>, ICollection<TagDirective>, IList, ICollection, IReadOnlyList<TagDirective>, IReadOnlyCollection<TagDirective>, IEnumerable<TagDirective>, IEnumerable Inheritance object Collection<TagDirective> KeyedCollection<string, TagDirective> TagDirectiveCollection Implements IList<TagDirective> ICollection<TagDirective> IList ICollection IReadOnlyList<TagDirective> IReadOnlyCollection<TagDirective> IEnumerable<TagDirective> IEnumerable Inherited Members KeyedCollection<string, TagDirective>.Contains(string) KeyedCollection<string, TagDirective>.TryGetValue(string, out TagDirective) KeyedCollection<string, TagDirective>.Remove(string) KeyedCollection<string, TagDirective>.Comparer KeyedCollection<string, TagDirective>.this[string] Collection<TagDirective>.Add(TagDirective) Collection<TagDirective>.Clear() Collection<TagDirective>.CopyTo(TagDirective[], int) Collection<TagDirective>.GetEnumerator() Collection<TagDirective>.IndexOf(TagDirective) Collection<TagDirective>.Insert(int, TagDirective) Collection<TagDirective>.Remove(TagDirective) Collection<TagDirective>.RemoveAt(int) Collection<TagDirective>.Count Collection<TagDirective>.this[int] object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TagDirectiveCollection() public TagDirectiveCollection() TagDirectiveCollection(IEnumerable<TagDirective>) public TagDirectiveCollection(IEnumerable<TagDirective> tagDirectives) Parameters tagDirectives IEnumerable<TagDirective> Methods Contains(TagDirective) public bool Contains(TagDirective directive) Parameters directive TagDirective Returns bool GetKeyForItem(TagDirective) protected override string GetKeyForItem(TagDirective item) Parameters item TagDirective Returns string"
  },
  "api/YamlDotNet.Core.TagName.html": {
    "href": "api/YamlDotNet.Core.TagName.html",
    "title": "Struct TagName | Mots Glissés",
    "keywords": "Struct TagName Namespace YamlDotNet.Core Assembly YamlDotNet.dll public readonly struct TagName : IEquatable<TagName> Implements IEquatable<TagName> Inherited Members object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors TagName(string) public TagName(string value) Parameters value string Fields Empty public static readonly TagName Empty Field Value TagName Properties IsEmpty public bool IsEmpty { get; } Property Value bool IsGlobal public bool IsGlobal { get; } Property Value bool IsLocal public bool IsLocal { get; } Property Value bool IsNonSpecific public bool IsNonSpecific { get; } Property Value bool Value public string Value { get; } Property Value string Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool Equals(TagName) public bool Equals(TagName other) Parameters other TagName Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(TagName, string) public static bool operator ==(TagName left, string right) Parameters left TagName right string Returns bool operator ==(TagName, TagName) public static bool operator ==(TagName left, TagName right) Parameters left TagName right TagName Returns bool implicit operator TagName(string?) public static implicit operator TagName(string? value) Parameters value string Returns TagName operator !=(TagName, string) public static bool operator !=(TagName left, string right) Parameters left TagName right string Returns bool operator !=(TagName, TagName) public static bool operator !=(TagName left, TagName right) Parameters left TagName right TagName Returns bool"
  },
  "api/YamlDotNet.Core.Tokens.Anchor.html": {
    "href": "api/YamlDotNet.Core.Tokens.Anchor.html",
    "title": "Class Anchor | Mots Glissés",
    "keywords": "Class Anchor Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public class Anchor : Token Inheritance object Token Anchor Inherited Members Token.Start Token.End object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Anchor(AnchorName) public Anchor(AnchorName value) Parameters value AnchorName Anchor(AnchorName, Mark, Mark) public Anchor(AnchorName value, Mark start, Mark end) Parameters value AnchorName start Mark end Mark Properties Value public AnchorName Value { get; } Property Value AnchorName"
  },
  "api/YamlDotNet.Core.Tokens.AnchorAlias.html": {
    "href": "api/YamlDotNet.Core.Tokens.AnchorAlias.html",
    "title": "Class AnchorAlias | Mots Glissés",
    "keywords": "Class AnchorAlias Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class AnchorAlias : Token Inheritance object Token AnchorAlias Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AnchorAlias(AnchorName) public AnchorAlias(AnchorName value) Parameters value AnchorName AnchorAlias(AnchorName, Mark, Mark) public AnchorAlias(AnchorName value, Mark start, Mark end) Parameters value AnchorName start Mark end Mark Properties Value public AnchorName Value { get; } Property Value AnchorName"
  },
  "api/YamlDotNet.Core.Tokens.BlockEnd.html": {
    "href": "api/YamlDotNet.Core.Tokens.BlockEnd.html",
    "title": "Class BlockEnd | Mots Glissés",
    "keywords": "Class BlockEnd Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class BlockEnd : Token Inheritance object Token BlockEnd Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BlockEnd() public BlockEnd() BlockEnd(in Mark, in Mark) public BlockEnd(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.BlockEntry.html": {
    "href": "api/YamlDotNet.Core.Tokens.BlockEntry.html",
    "title": "Class BlockEntry | Mots Glissés",
    "keywords": "Class BlockEntry Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class BlockEntry : Token Inheritance object Token BlockEntry Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BlockEntry() public BlockEntry() BlockEntry(in Mark, in Mark) public BlockEntry(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.BlockMappingStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.BlockMappingStart.html",
    "title": "Class BlockMappingStart | Mots Glissés",
    "keywords": "Class BlockMappingStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class BlockMappingStart : Token Inheritance object Token BlockMappingStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BlockMappingStart() public BlockMappingStart() BlockMappingStart(in Mark, in Mark) public BlockMappingStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.BlockSequenceStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.BlockSequenceStart.html",
    "title": "Class BlockSequenceStart | Mots Glissés",
    "keywords": "Class BlockSequenceStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class BlockSequenceStart : Token Inheritance object Token BlockSequenceStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors BlockSequenceStart() public BlockSequenceStart() BlockSequenceStart(in Mark, in Mark) public BlockSequenceStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.Comment.html": {
    "href": "api/YamlDotNet.Core.Tokens.Comment.html",
    "title": "Class Comment | Mots Glissés",
    "keywords": "Class Comment Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class Comment : Token Inheritance object Token Comment Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Comment(string, bool) public Comment(string value, bool isInline) Parameters value string isInline bool Comment(string, bool, Mark, Mark) public Comment(string value, bool isInline, Mark start, Mark end) Parameters value string isInline bool start Mark end Mark Properties IsInline public bool IsInline { get; } Property Value bool Value public string Value { get; } Property Value string"
  },
  "api/YamlDotNet.Core.Tokens.DocumentEnd.html": {
    "href": "api/YamlDotNet.Core.Tokens.DocumentEnd.html",
    "title": "Class DocumentEnd | Mots Glissés",
    "keywords": "Class DocumentEnd Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class DocumentEnd : Token Inheritance object Token DocumentEnd Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DocumentEnd() public DocumentEnd() DocumentEnd(in Mark, in Mark) public DocumentEnd(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.DocumentStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.DocumentStart.html",
    "title": "Class DocumentStart | Mots Glissés",
    "keywords": "Class DocumentStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class DocumentStart : Token Inheritance object Token DocumentStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DocumentStart() public DocumentStart() DocumentStart(in Mark, in Mark) public DocumentStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.Error.html": {
    "href": "api/YamlDotNet.Core.Tokens.Error.html",
    "title": "Class Error | Mots Glissés",
    "keywords": "Class Error Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public class Error : Token Inheritance object Token Error Inherited Members Token.Start Token.End object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Error(string, Mark, Mark) public Error(string value, Mark start, Mark end) Parameters value string start Mark end Mark Properties Value public string Value { get; } Property Value string"
  },
  "api/YamlDotNet.Core.Tokens.FlowEntry.html": {
    "href": "api/YamlDotNet.Core.Tokens.FlowEntry.html",
    "title": "Class FlowEntry | Mots Glissés",
    "keywords": "Class FlowEntry Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class FlowEntry : Token Inheritance object Token FlowEntry Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FlowEntry() public FlowEntry() FlowEntry(in Mark, in Mark) public FlowEntry(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.FlowMappingEnd.html": {
    "href": "api/YamlDotNet.Core.Tokens.FlowMappingEnd.html",
    "title": "Class FlowMappingEnd | Mots Glissés",
    "keywords": "Class FlowMappingEnd Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class FlowMappingEnd : Token Inheritance object Token FlowMappingEnd Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FlowMappingEnd() public FlowMappingEnd() FlowMappingEnd(in Mark, in Mark) public FlowMappingEnd(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.FlowMappingStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.FlowMappingStart.html",
    "title": "Class FlowMappingStart | Mots Glissés",
    "keywords": "Class FlowMappingStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class FlowMappingStart : Token Inheritance object Token FlowMappingStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FlowMappingStart() public FlowMappingStart() FlowMappingStart(in Mark, in Mark) public FlowMappingStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.FlowSequenceEnd.html": {
    "href": "api/YamlDotNet.Core.Tokens.FlowSequenceEnd.html",
    "title": "Class FlowSequenceEnd | Mots Glissés",
    "keywords": "Class FlowSequenceEnd Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class FlowSequenceEnd : Token Inheritance object Token FlowSequenceEnd Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FlowSequenceEnd() public FlowSequenceEnd() FlowSequenceEnd(in Mark, in Mark) public FlowSequenceEnd(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.FlowSequenceStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.FlowSequenceStart.html",
    "title": "Class FlowSequenceStart | Mots Glissés",
    "keywords": "Class FlowSequenceStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class FlowSequenceStart : Token Inheritance object Token FlowSequenceStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FlowSequenceStart() public FlowSequenceStart() FlowSequenceStart(in Mark, in Mark) public FlowSequenceStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.Key.html": {
    "href": "api/YamlDotNet.Core.Tokens.Key.html",
    "title": "Class Key | Mots Glissés",
    "keywords": "Class Key Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class Key : Token Inheritance object Token Key Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Key() public Key() Key(in Mark, in Mark) public Key(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.Scalar.html": {
    "href": "api/YamlDotNet.Core.Tokens.Scalar.html",
    "title": "Class Scalar | Mots Glissés",
    "keywords": "Class Scalar Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class Scalar : Token Inheritance object Token Scalar Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Scalar(string) public Scalar(string value) Parameters value string Scalar(string, ScalarStyle) public Scalar(string value, ScalarStyle style) Parameters value string style ScalarStyle Scalar(string, ScalarStyle, Mark, Mark) public Scalar(string value, ScalarStyle style, Mark start, Mark end) Parameters value string style ScalarStyle start Mark end Mark Properties IsKey public bool IsKey { get; set; } Property Value bool Style public ScalarStyle Style { get; } Property Value ScalarStyle Value public string Value { get; } Property Value string"
  },
  "api/YamlDotNet.Core.Tokens.StreamEnd.html": {
    "href": "api/YamlDotNet.Core.Tokens.StreamEnd.html",
    "title": "Class StreamEnd | Mots Glissés",
    "keywords": "Class StreamEnd Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class StreamEnd : Token Inheritance object Token StreamEnd Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamEnd() public StreamEnd() StreamEnd(in Mark, in Mark) public StreamEnd(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.StreamStart.html": {
    "href": "api/YamlDotNet.Core.Tokens.StreamStart.html",
    "title": "Class StreamStart | Mots Glissés",
    "keywords": "Class StreamStart Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class StreamStart : Token Inheritance object Token StreamStart Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamStart() public StreamStart() StreamStart(in Mark, in Mark) public StreamStart(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.Tag.html": {
    "href": "api/YamlDotNet.Core.Tokens.Tag.html",
    "title": "Class Tag | Mots Glissés",
    "keywords": "Class Tag Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class Tag : Token Inheritance object Token Tag Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Tag(string, string) public Tag(string handle, string suffix) Parameters handle string suffix string Tag(string, string, Mark, Mark) public Tag(string handle, string suffix, Mark start, Mark end) Parameters handle string suffix string start Mark end Mark Properties Handle public string Handle { get; } Property Value string Suffix public string Suffix { get; } Property Value string"
  },
  "api/YamlDotNet.Core.Tokens.TagDirective.html": {
    "href": "api/YamlDotNet.Core.Tokens.TagDirective.html",
    "title": "Class TagDirective | Mots Glissés",
    "keywords": "Class TagDirective Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public class TagDirective : Token Inheritance object Token TagDirective Inherited Members Token.Start Token.End object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors TagDirective(string, string) public TagDirective(string handle, string prefix) Parameters handle string prefix string TagDirective(string, string, Mark, Mark) public TagDirective(string handle, string prefix, Mark start, Mark end) Parameters handle string prefix string start Mark end Mark Properties Handle public string Handle { get; } Property Value string Prefix public string Prefix { get; } Property Value string Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.Tokens.Token.html": {
    "href": "api/YamlDotNet.Core.Tokens.Token.html",
    "title": "Class Token | Mots Glissés",
    "keywords": "Class Token Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public abstract class Token Inheritance object Token Derived Anchor AnchorAlias BlockEnd BlockEntry BlockMappingStart BlockSequenceStart Comment DocumentEnd DocumentStart Error FlowEntry FlowMappingEnd FlowMappingStart FlowSequenceEnd FlowSequenceStart Key Scalar StreamEnd StreamStart Tag TagDirective Value VersionDirective Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Token(in Mark, in Mark) protected Token(in Mark start, in Mark end) Parameters start Mark end Mark Properties End public Mark End { get; } Property Value Mark Start public Mark Start { get; } Property Value Mark"
  },
  "api/YamlDotNet.Core.Tokens.Value.html": {
    "href": "api/YamlDotNet.Core.Tokens.Value.html",
    "title": "Class Value | Mots Glissés",
    "keywords": "Class Value Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class Value : Token Inheritance object Token Value Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Value() public Value() Value(in Mark, in Mark) public Value(in Mark start, in Mark end) Parameters start Mark end Mark"
  },
  "api/YamlDotNet.Core.Tokens.VersionDirective.html": {
    "href": "api/YamlDotNet.Core.Tokens.VersionDirective.html",
    "title": "Class VersionDirective | Mots Glissés",
    "keywords": "Class VersionDirective Namespace YamlDotNet.Core.Tokens Assembly YamlDotNet.dll public sealed class VersionDirective : Token Inheritance object Token VersionDirective Inherited Members Token.Start Token.End object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors VersionDirective(Version) public VersionDirective(Version version) Parameters version Version VersionDirective(Version, Mark, Mark) public VersionDirective(Version version, Mark start, Mark end) Parameters version Version start Mark end Mark Properties Version public Version Version { get; } Property Value Version Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/YamlDotNet.Core.Tokens.html": {
    "href": "api/YamlDotNet.Core.Tokens.html",
    "title": "Namespace YamlDotNet.Core.Tokens | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Core.Tokens Classes Anchor AnchorAlias BlockEnd BlockEntry BlockMappingStart BlockSequenceStart Comment DocumentEnd DocumentStart Error FlowEntry FlowMappingEnd FlowMappingStart FlowSequenceEnd FlowSequenceStart Key Scalar StreamEnd StreamStart Tag TagDirective Token Value VersionDirective"
  },
  "api/YamlDotNet.Core.Version.html": {
    "href": "api/YamlDotNet.Core.Version.html",
    "title": "Class Version | Mots Glissés",
    "keywords": "Class Version Namespace YamlDotNet.Core Assembly YamlDotNet.dll public sealed class Version Inheritance object Version Inherited Members object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors Version(int, int) public Version(int major, int minor) Parameters major int minor int Properties Major public int Major { get; } Property Value int Minor public int Minor { get; } Property Value int Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/YamlDotNet.Core.YamlException.html": {
    "href": "api/YamlDotNet.Core.YamlException.html",
    "title": "Class YamlException | Mots Glissés",
    "keywords": "Class YamlException Namespace YamlDotNet.Core Assembly YamlDotNet.dll public class YamlException : Exception, ISerializable Inheritance object Exception YamlException Implements ISerializable Derived AnchorNotFoundException ForwardAnchorNotSupportedException MaximumRecursionLevelReachedException SemanticErrorException SyntaxErrorException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlException(string) public YamlException(string message) Parameters message string YamlException(string, Exception) public YamlException(string message, Exception inner) Parameters message string inner Exception YamlException(in Mark, in Mark, string) public YamlException(in Mark start, in Mark end, string message) Parameters start Mark end Mark message string YamlException(in Mark, in Mark, string, Exception?) public YamlException(in Mark start, in Mark end, string message, Exception? innerException) Parameters start Mark end Mark message string innerException Exception Properties End public Mark End { get; } Property Value Mark Start public Mark Start { get; } Property Value Mark Methods ToString() public override string ToString() Returns string"
  },
  "api/YamlDotNet.Core.html": {
    "href": "api/YamlDotNet.Core.html",
    "title": "Namespace YamlDotNet.Core | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Core Classes AnchorNotFoundException Constants Cursor Emitter EmitterSettings ForwardAnchorNotSupportedException InsertionQueue<T> LookAheadBuffer MaximumRecursionLevelReachedException MergingParser Parser ParserExtensions Scanner SemanticErrorException SyntaxErrorException TagDirectiveCollection Version YamlException Structs AnchorName Mark TagName Interfaces IEmitter IParser IScanner Enums ScalarStyle"
  },
  "api/YamlDotNet.Helpers.ExpressionExtensions.html": {
    "href": "api/YamlDotNet.Helpers.ExpressionExtensions.html",
    "title": "Class ExpressionExtensions | Mots Glissés",
    "keywords": "Class ExpressionExtensions Namespace YamlDotNet.Helpers Assembly YamlDotNet.dll public static class ExpressionExtensions Inheritance object ExpressionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AsProperty(LambdaExpression) public static PropertyInfo AsProperty(this LambdaExpression propertyAccessor) Parameters propertyAccessor LambdaExpression Returns PropertyInfo"
  },
  "api/YamlDotNet.Helpers.IOrderedDictionary-2.html": {
    "href": "api/YamlDotNet.Helpers.IOrderedDictionary-2.html",
    "title": "Interface IOrderedDictionary<TKey, TValue> | Mots Glissés",
    "keywords": "Interface IOrderedDictionary<TKey, TValue> Namespace YamlDotNet.Helpers Assembly YamlDotNet.dll public interface IOrderedDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable where TKey : notnull Type Parameters TKey TValue Inherited Members IDictionary<TKey, TValue>.ContainsKey(TKey) IDictionary<TKey, TValue>.Add(TKey, TValue) IDictionary<TKey, TValue>.Remove(TKey) IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue) IDictionary<TKey, TValue>.this[TKey] IDictionary<TKey, TValue>.Keys IDictionary<TKey, TValue>.Values ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>) ICollection<KeyValuePair<TKey, TValue>>.Clear() ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>) ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], int) ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>) ICollection<KeyValuePair<TKey, TValue>>.Count ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator() IEnumerable.GetEnumerator() Properties this[int] KeyValuePair<TKey, TValue> this[int index] { get; set; } Parameters index int Property Value KeyValuePair<TKey, TValue> Methods Insert(int, TKey, TValue) void Insert(int index, TKey key, TValue value) Parameters index int key TKey value TValue RemoveAt(int) void RemoveAt(int index) Parameters index int"
  },
  "api/YamlDotNet.Helpers.html": {
    "href": "api/YamlDotNet.Helpers.html",
    "title": "Namespace YamlDotNet.Helpers | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Helpers Classes ExpressionExtensions Interfaces IOrderedDictionary<TKey, TValue>"
  },
  "api/YamlDotNet.RepresentationModel.IYamlVisitor.html": {
    "href": "api/YamlDotNet.RepresentationModel.IYamlVisitor.html",
    "title": "Interface IYamlVisitor | Mots Glissés",
    "keywords": "Interface IYamlVisitor Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public interface IYamlVisitor Methods Visit(YamlDocument) void Visit(YamlDocument document) Parameters document YamlDocument Visit(YamlMappingNode) void Visit(YamlMappingNode mapping) Parameters mapping YamlMappingNode Visit(YamlScalarNode) void Visit(YamlScalarNode scalar) Parameters scalar YamlScalarNode Visit(YamlSequenceNode) void Visit(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode Visit(YamlStream) void Visit(YamlStream stream) Parameters stream YamlStream"
  },
  "api/YamlDotNet.RepresentationModel.LibYamlEventStream.html": {
    "href": "api/YamlDotNet.RepresentationModel.LibYamlEventStream.html",
    "title": "Class LibYamlEventStream | Mots Glissés",
    "keywords": "Class LibYamlEventStream Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public class LibYamlEventStream Inheritance object LibYamlEventStream Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors LibYamlEventStream(IParser) public LibYamlEventStream(IParser iParser) Parameters iParser IParser Methods WriteTo(TextWriter) public void WriteTo(TextWriter textWriter) Parameters textWriter TextWriter"
  },
  "api/YamlDotNet.RepresentationModel.YamlDocument.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlDocument.html",
    "title": "Class YamlDocument | Mots Glissés",
    "keywords": "Class YamlDocument Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public class YamlDocument Inheritance object YamlDocument Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlDocument(string) public YamlDocument(string rootNode) Parameters rootNode string YamlDocument(YamlNode) public YamlDocument(YamlNode rootNode) Parameters rootNode YamlNode Properties AllNodes public IEnumerable<YamlNode> AllNodes { get; } Property Value IEnumerable<YamlNode> RootNode public YamlNode RootNode { get; } Property Value YamlNode Methods Accept(IYamlVisitor) public void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor"
  },
  "api/YamlDotNet.RepresentationModel.YamlMappingNode.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlMappingNode.html",
    "title": "Class YamlMappingNode | Mots Glissés",
    "keywords": "Class YamlMappingNode Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public sealed class YamlMappingNode : YamlNode, IEnumerable<KeyValuePair<YamlNode, YamlNode>>, IEnumerable, IYamlConvertible Inheritance object YamlNode YamlMappingNode Implements IEnumerable<KeyValuePair<YamlNode, YamlNode>> IEnumerable IYamlConvertible Inherited Members YamlNode.ToString() YamlNode.Anchor YamlNode.Tag YamlNode.Start YamlNode.End YamlNode.AllNodes YamlNode.this[int] YamlNode.this[YamlNode] object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlMappingNode() public YamlMappingNode() YamlMappingNode(IEnumerable<KeyValuePair<YamlNode, YamlNode>>) public YamlMappingNode(IEnumerable<KeyValuePair<YamlNode, YamlNode>> children) Parameters children IEnumerable<KeyValuePair<YamlNode, YamlNode>> YamlMappingNode(IEnumerable<YamlNode>) public YamlMappingNode(IEnumerable<YamlNode> children) Parameters children IEnumerable<YamlNode> YamlMappingNode(params KeyValuePair<YamlNode, YamlNode>[]) public YamlMappingNode(params KeyValuePair<YamlNode, YamlNode>[] children) Parameters children KeyValuePair<YamlNode, YamlNode>[] YamlMappingNode(params YamlNode[]) public YamlMappingNode(params YamlNode[] children) Parameters children YamlNode[] Properties Children public IOrderedDictionary<YamlNode, YamlNode> Children { get; } Property Value IOrderedDictionary<YamlNode, YamlNode> NodeType public override YamlNodeType NodeType { get; } Property Value YamlNodeType Style public MappingStyle Style { get; set; } Property Value MappingStyle Methods Accept(IYamlVisitor) public override void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor Add(string, string) public void Add(string key, string value) Parameters key string value string Add(string, YamlNode) public void Add(string key, YamlNode value) Parameters key string value YamlNode Add(YamlNode, string) public void Add(YamlNode key, string value) Parameters key YamlNode value string Add(YamlNode, YamlNode) public void Add(YamlNode key, YamlNode value) Parameters key YamlNode value YamlNode Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool FromObject(object) public static YamlMappingNode FromObject(object mapping) Parameters mapping object Returns YamlMappingNode GetEnumerator() public IEnumerator<KeyValuePair<YamlNode, YamlNode>> GetEnumerator() Returns IEnumerator<KeyValuePair<YamlNode, YamlNode>> GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/YamlDotNet.RepresentationModel.YamlNode.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlNode.html",
    "title": "Class YamlNode | Mots Glissés",
    "keywords": "Class YamlNode Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public abstract class YamlNode Inheritance object YamlNode Derived YamlMappingNode YamlScalarNode YamlSequenceNode Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlNode() protected YamlNode() Properties AllNodes public IEnumerable<YamlNode> AllNodes { get; } Property Value IEnumerable<YamlNode> Anchor public AnchorName Anchor { get; set; } Property Value AnchorName End public Mark End { get; } Property Value Mark this[int] public YamlNode this[int index] { get; } Parameters index int Property Value YamlNode this[YamlNode] public YamlNode this[YamlNode key] { get; } Parameters key YamlNode Property Value YamlNode NodeType public abstract YamlNodeType NodeType { get; } Property Value YamlNodeType Start public Mark Start { get; } Property Value Mark Tag public TagName Tag { get; set; } Property Value TagName Methods Accept(IYamlVisitor) public abstract void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor ToString() public override string ToString() Returns string Operators explicit operator string?(YamlNode) public static explicit operator string?(YamlNode node) Parameters node YamlNode Returns string implicit operator YamlNode(string) public static implicit operator YamlNode(string value) Parameters value string Returns YamlNode implicit operator YamlNode(string[]) public static implicit operator YamlNode(string[] sequence) Parameters sequence string[] Returns YamlNode"
  },
  "api/YamlDotNet.RepresentationModel.YamlNodeIdentityEqualityComparer.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlNodeIdentityEqualityComparer.html",
    "title": "Class YamlNodeIdentityEqualityComparer | Mots Glissés",
    "keywords": "Class YamlNodeIdentityEqualityComparer Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public sealed class YamlNodeIdentityEqualityComparer : IEqualityComparer<YamlNode> Inheritance object YamlNodeIdentityEqualityComparer Implements IEqualityComparer<YamlNode> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlNodeIdentityEqualityComparer() public YamlNodeIdentityEqualityComparer() Methods Equals(YamlNode, YamlNode) public bool Equals(YamlNode x, YamlNode y) Parameters x YamlNode y YamlNode Returns bool GetHashCode(YamlNode) public int GetHashCode(YamlNode obj) Parameters obj YamlNode Returns int"
  },
  "api/YamlDotNet.RepresentationModel.YamlNodeType.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlNodeType.html",
    "title": "Enum YamlNodeType | Mots Glissés",
    "keywords": "Enum YamlNodeType Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public enum YamlNodeType Fields Alias = 0 Mapping = 1 Scalar = 2 Sequence = 3"
  },
  "api/YamlDotNet.RepresentationModel.YamlScalarNode.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlScalarNode.html",
    "title": "Class YamlScalarNode | Mots Glissés",
    "keywords": "Class YamlScalarNode Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public sealed class YamlScalarNode : YamlNode, IYamlConvertible Inheritance object YamlNode YamlScalarNode Implements IYamlConvertible Inherited Members YamlNode.ToString() YamlNode.Anchor YamlNode.Tag YamlNode.Start YamlNode.End YamlNode.AllNodes YamlNode.this[int] YamlNode.this[YamlNode] object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlScalarNode() public YamlScalarNode() YamlScalarNode(string?) public YamlScalarNode(string? value) Parameters value string Properties NodeType public override YamlNodeType NodeType { get; } Property Value YamlNodeType Style public ScalarStyle Style { get; set; } Property Value ScalarStyle Value public string? Value { get; set; } Property Value string Methods Accept(IYamlVisitor) public override void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators explicit operator string?(YamlScalarNode) public static explicit operator string?(YamlScalarNode value) Parameters value YamlScalarNode Returns string"
  },
  "api/YamlDotNet.RepresentationModel.YamlSequenceNode.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlSequenceNode.html",
    "title": "Class YamlSequenceNode | Mots Glissés",
    "keywords": "Class YamlSequenceNode Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public sealed class YamlSequenceNode : YamlNode, IEnumerable<YamlNode>, IEnumerable, IYamlConvertible Inheritance object YamlNode YamlSequenceNode Implements IEnumerable<YamlNode> IEnumerable IYamlConvertible Inherited Members YamlNode.ToString() YamlNode.Anchor YamlNode.Tag YamlNode.Start YamlNode.End YamlNode.AllNodes YamlNode.this[int] YamlNode.this[YamlNode] object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlSequenceNode() public YamlSequenceNode() YamlSequenceNode(IEnumerable<YamlNode>) public YamlSequenceNode(IEnumerable<YamlNode> children) Parameters children IEnumerable<YamlNode> YamlSequenceNode(params YamlNode[]) public YamlSequenceNode(params YamlNode[] children) Parameters children YamlNode[] Properties Children public IList<YamlNode> Children { get; } Property Value IList<YamlNode> NodeType public override YamlNodeType NodeType { get; } Property Value YamlNodeType Style public SequenceStyle Style { get; set; } Property Value SequenceStyle Methods Accept(IYamlVisitor) public override void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor Add(string) public void Add(string child) Parameters child string Add(YamlNode) public void Add(YamlNode child) Parameters child YamlNode Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetEnumerator() public IEnumerator<YamlNode> GetEnumerator() Returns IEnumerator<YamlNode> GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/YamlDotNet.RepresentationModel.YamlStream.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlStream.html",
    "title": "Class YamlStream | Mots Glissés",
    "keywords": "Class YamlStream Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public class YamlStream : IEnumerable<YamlDocument>, IEnumerable Inheritance object YamlStream Implements IEnumerable<YamlDocument> IEnumerable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlStream() public YamlStream() YamlStream(IEnumerable<YamlDocument>) public YamlStream(IEnumerable<YamlDocument> documents) Parameters documents IEnumerable<YamlDocument> YamlStream(params YamlDocument[]) public YamlStream(params YamlDocument[] documents) Parameters documents YamlDocument[] Properties Documents public IList<YamlDocument> Documents { get; } Property Value IList<YamlDocument> Methods Accept(IYamlVisitor) public void Accept(IYamlVisitor visitor) Parameters visitor IYamlVisitor Add(YamlDocument) public void Add(YamlDocument document) Parameters document YamlDocument GetEnumerator() public IEnumerator<YamlDocument> GetEnumerator() Returns IEnumerator<YamlDocument> Load(TextReader) public void Load(TextReader input) Parameters input TextReader Load(IParser) public void Load(IParser parser) Parameters parser IParser Save(TextWriter) public void Save(TextWriter output) Parameters output TextWriter Save(TextWriter, bool) public void Save(TextWriter output, bool assignAnchors) Parameters output TextWriter assignAnchors bool Save(IEmitter, bool) public void Save(IEmitter emitter, bool assignAnchors) Parameters emitter IEmitter assignAnchors bool"
  },
  "api/YamlDotNet.RepresentationModel.YamlVisitor.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlVisitor.html",
    "title": "Class YamlVisitor | Mots Glissés",
    "keywords": "Class YamlVisitor Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll [Obsolete(\"Use YamlVisitorBase\")] public abstract class YamlVisitor : IYamlVisitor Inheritance object YamlVisitor Implements IYamlVisitor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlVisitor() protected YamlVisitor() Methods Visit(YamlDocument) protected virtual void Visit(YamlDocument document) Parameters document YamlDocument Visit(YamlMappingNode) protected virtual void Visit(YamlMappingNode mapping) Parameters mapping YamlMappingNode Visit(YamlScalarNode) protected virtual void Visit(YamlScalarNode scalar) Parameters scalar YamlScalarNode Visit(YamlSequenceNode) protected virtual void Visit(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode Visit(YamlStream) protected virtual void Visit(YamlStream stream) Parameters stream YamlStream VisitChildren(YamlDocument) protected virtual void VisitChildren(YamlDocument document) Parameters document YamlDocument VisitChildren(YamlMappingNode) protected virtual void VisitChildren(YamlMappingNode mapping) Parameters mapping YamlMappingNode VisitChildren(YamlSequenceNode) protected virtual void VisitChildren(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode VisitChildren(YamlStream) protected virtual void VisitChildren(YamlStream stream) Parameters stream YamlStream Visited(YamlDocument) protected virtual void Visited(YamlDocument document) Parameters document YamlDocument Visited(YamlMappingNode) protected virtual void Visited(YamlMappingNode mapping) Parameters mapping YamlMappingNode Visited(YamlScalarNode) protected virtual void Visited(YamlScalarNode scalar) Parameters scalar YamlScalarNode Visited(YamlSequenceNode) protected virtual void Visited(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode Visited(YamlStream) protected virtual void Visited(YamlStream stream) Parameters stream YamlStream"
  },
  "api/YamlDotNet.RepresentationModel.YamlVisitorBase.html": {
    "href": "api/YamlDotNet.RepresentationModel.YamlVisitorBase.html",
    "title": "Class YamlVisitorBase | Mots Glissés",
    "keywords": "Class YamlVisitorBase Namespace YamlDotNet.RepresentationModel Assembly YamlDotNet.dll public abstract class YamlVisitorBase : IYamlVisitor Inheritance object YamlVisitorBase Implements IYamlVisitor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlVisitorBase() protected YamlVisitorBase() Methods Visit(YamlDocument) public virtual void Visit(YamlDocument document) Parameters document YamlDocument Visit(YamlMappingNode) public virtual void Visit(YamlMappingNode mapping) Parameters mapping YamlMappingNode Visit(YamlScalarNode) public virtual void Visit(YamlScalarNode scalar) Parameters scalar YamlScalarNode Visit(YamlSequenceNode) public virtual void Visit(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode Visit(YamlStream) public virtual void Visit(YamlStream stream) Parameters stream YamlStream VisitChildren(YamlDocument) protected virtual void VisitChildren(YamlDocument document) Parameters document YamlDocument VisitChildren(YamlMappingNode) protected virtual void VisitChildren(YamlMappingNode mapping) Parameters mapping YamlMappingNode VisitChildren(YamlSequenceNode) protected virtual void VisitChildren(YamlSequenceNode sequence) Parameters sequence YamlSequenceNode VisitChildren(YamlStream) protected virtual void VisitChildren(YamlStream stream) Parameters stream YamlStream VisitPair(YamlNode, YamlNode) protected virtual void VisitPair(YamlNode key, YamlNode value) Parameters key YamlNode value YamlNode"
  },
  "api/YamlDotNet.RepresentationModel.html": {
    "href": "api/YamlDotNet.RepresentationModel.html",
    "title": "Namespace YamlDotNet.RepresentationModel | Mots Glissés",
    "keywords": "Namespace YamlDotNet.RepresentationModel Classes LibYamlEventStream YamlDocument YamlMappingNode YamlNode YamlNodeIdentityEqualityComparer YamlScalarNode YamlSequenceNode YamlStream YamlVisitor YamlVisitorBase Interfaces IYamlVisitor Enums YamlNodeType"
  },
  "api/YamlDotNet.Serialization.AliasEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.AliasEventInfo.html",
    "title": "Class AliasEventInfo | Mots Glissés",
    "keywords": "Class AliasEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public class AliasEventInfo : EventInfo Inheritance object EventInfo AliasEventInfo Inherited Members EventInfo.Source object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AliasEventInfo(IObjectDescriptor, AnchorName) public AliasEventInfo(IObjectDescriptor source, AnchorName alias) Parameters source IObjectDescriptor alias AnchorName Properties Alias public AnchorName Alias { get; } Property Value AnchorName NeedsExpansion public bool NeedsExpansion { get; set; } Property Value bool"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.ITypeDiscriminatingNodeDeserializerOptions.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.ITypeDiscriminatingNodeDeserializerOptions.html",
    "title": "Interface ITypeDiscriminatingNodeDeserializerOptions | Mots Glissés",
    "keywords": "Interface ITypeDiscriminatingNodeDeserializerOptions Namespace YamlDotNet.Serialization.BufferedDeserialization Assembly YamlDotNet.dll public interface ITypeDiscriminatingNodeDeserializerOptions Methods AddKeyValueTypeDiscriminator<T>(string, IDictionary<string, Type>) void AddKeyValueTypeDiscriminator<T>(string discriminatorKey, IDictionary<string, Type> valueTypeMapping) Parameters discriminatorKey string valueTypeMapping IDictionary<string, Type> Type Parameters T AddKeyValueTypeDiscriminator<T>(string, params (string, Type)[]) void AddKeyValueTypeDiscriminator<T>(string discriminatorKey, params (string, Type)[] valueTypeMapping) Parameters discriminatorKey string valueTypeMapping (string, Type)[] Type Parameters T AddTypeDiscriminator(ITypeDiscriminator) void AddTypeDiscriminator(ITypeDiscriminator discriminator) Parameters discriminator ITypeDiscriminator AddUniqueKeyTypeDiscriminator<T>(IDictionary<string, Type>) void AddUniqueKeyTypeDiscriminator<T>(IDictionary<string, Type> uniqueKeyTypeMapping) Parameters uniqueKeyTypeMapping IDictionary<string, Type> Type Parameters T AddUniqueKeyTypeDiscriminator<T>(params (string, Type)[]) void AddUniqueKeyTypeDiscriminator<T>(params (string, Type)[] uniqueKeyTypeMapping) Parameters uniqueKeyTypeMapping (string, Type)[] Type Parameters T"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.ParserBuffer.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.ParserBuffer.html",
    "title": "Class ParserBuffer | Mots Glissés",
    "keywords": "Class ParserBuffer Namespace YamlDotNet.Serialization.BufferedDeserialization Assembly YamlDotNet.dll public class ParserBuffer : IParser Inheritance object ParserBuffer Implements IParser Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ParserExtensions.Accept<T>(IParser) ParserExtensions.Accept<T>(IParser, out T) ParserExtensions.Allow<T>(IParser) ParserExtensions.Consume<T>(IParser) ParserExtensions.Expect<T>(IParser) ParserExtensions.Peek<T>(IParser) ParserExtensions.Require<T>(IParser) ParserExtensions.SkipThisAndNestedEvents(IParser) ParserExtensions.TryConsume<T>(IParser, out T) ParserExtensions.TryFindMappingEntry(IParser, Func<Scalar, bool>, out Scalar?, out ParsingEvent?) Constructors ParserBuffer(IParser, int, int) public ParserBuffer(IParser parserToBuffer, int maxDepth, int maxLength) Parameters parserToBuffer IParser maxDepth int maxLength int Properties Current public ParsingEvent? Current { get; } Property Value ParsingEvent Methods MoveNext() public bool MoveNext() Returns bool Reset() public void Reset()"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminatingNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminatingNodeDeserializer.html",
    "title": "Class TypeDiscriminatingNodeDeserializer | Mots Glissés",
    "keywords": "Class TypeDiscriminatingNodeDeserializer Namespace YamlDotNet.Serialization.BufferedDeserialization Assembly YamlDotNet.dll public class TypeDiscriminatingNodeDeserializer : INodeDeserializer Inheritance object TypeDiscriminatingNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeDiscriminatingNodeDeserializer(IList<INodeDeserializer>, IList<ITypeDiscriminator>, int, int) public TypeDiscriminatingNodeDeserializer(IList<INodeDeserializer> innerDeserializers, IList<ITypeDiscriminator> typeDiscriminators, int maxDepthToBuffer, int maxLengthToBuffer) Parameters innerDeserializers IList<INodeDeserializer> typeDiscriminators IList<ITypeDiscriminator> maxDepthToBuffer int maxLengthToBuffer int Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters reader IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminatingNodeDeserializerOptions.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminatingNodeDeserializerOptions.html",
    "title": "Class TypeDiscriminatingNodeDeserializerOptions | Mots Glissés",
    "keywords": "Class TypeDiscriminatingNodeDeserializerOptions Namespace YamlDotNet.Serialization.BufferedDeserialization Assembly YamlDotNet.dll public class TypeDiscriminatingNodeDeserializerOptions : ITypeDiscriminatingNodeDeserializerOptions Inheritance object TypeDiscriminatingNodeDeserializerOptions Implements ITypeDiscriminatingNodeDeserializerOptions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeDiscriminatingNodeDeserializerOptions() public TypeDiscriminatingNodeDeserializerOptions() Methods AddKeyValueTypeDiscriminator<T>(string, IDictionary<string, Type>) public void AddKeyValueTypeDiscriminator<T>(string discriminatorKey, IDictionary<string, Type> valueTypeMapping) Parameters discriminatorKey string valueTypeMapping IDictionary<string, Type> Type Parameters T AddTypeDiscriminator(ITypeDiscriminator) public void AddTypeDiscriminator(ITypeDiscriminator discriminator) Parameters discriminator ITypeDiscriminator AddUniqueKeyTypeDiscriminator<T>(IDictionary<string, Type>) public void AddUniqueKeyTypeDiscriminator<T>(IDictionary<string, Type> uniqueKeyTypeMapping) Parameters uniqueKeyTypeMapping IDictionary<string, Type> Type Parameters T"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.ITypeDiscriminator.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.ITypeDiscriminator.html",
    "title": "Interface ITypeDiscriminator | Mots Glissés",
    "keywords": "Interface ITypeDiscriminator Namespace YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators Assembly YamlDotNet.dll public interface ITypeDiscriminator Properties BaseType Type BaseType { get; } Property Value Type Methods TryDiscriminate(IParser, out Type?) bool TryDiscriminate(IParser buffer, out Type? suggestedType) Parameters buffer IParser suggestedType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.KeyValueTypeDiscriminator.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.KeyValueTypeDiscriminator.html",
    "title": "Class KeyValueTypeDiscriminator | Mots Glissés",
    "keywords": "Class KeyValueTypeDiscriminator Namespace YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators Assembly YamlDotNet.dll public class KeyValueTypeDiscriminator : ITypeDiscriminator Inheritance object KeyValueTypeDiscriminator Implements ITypeDiscriminator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors KeyValueTypeDiscriminator(Type, string, IDictionary<string, Type>) public KeyValueTypeDiscriminator(Type baseType, string targetKey, IDictionary<string, Type> typeMapping) Parameters baseType Type targetKey string typeMapping IDictionary<string, Type> Properties BaseType public Type BaseType { get; } Property Value Type Methods TryDiscriminate(IParser, out Type?) public bool TryDiscriminate(IParser parser, out Type? suggestedType) Parameters parser IParser suggestedType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.UniqueKeyTypeDiscriminator.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.UniqueKeyTypeDiscriminator.html",
    "title": "Class UniqueKeyTypeDiscriminator | Mots Glissés",
    "keywords": "Class UniqueKeyTypeDiscriminator Namespace YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators Assembly YamlDotNet.dll public class UniqueKeyTypeDiscriminator : ITypeDiscriminator Inheritance object UniqueKeyTypeDiscriminator Implements ITypeDiscriminator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UniqueKeyTypeDiscriminator(Type, IDictionary<string, Type>) public UniqueKeyTypeDiscriminator(Type baseType, IDictionary<string, Type> typeMapping) Parameters baseType Type typeMapping IDictionary<string, Type> Properties BaseType public Type BaseType { get; } Property Value Type Methods TryDiscriminate(IParser, out Type?) public bool TryDiscriminate(IParser parser, out Type? suggestedType) Parameters parser IParser suggestedType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators.html",
    "title": "Namespace YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.BufferedDeserialization.TypeDiscriminators Classes KeyValueTypeDiscriminator UniqueKeyTypeDiscriminator Interfaces ITypeDiscriminator"
  },
  "api/YamlDotNet.Serialization.BufferedDeserialization.html": {
    "href": "api/YamlDotNet.Serialization.BufferedDeserialization.html",
    "title": "Namespace YamlDotNet.Serialization.BufferedDeserialization | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.BufferedDeserialization Classes ParserBuffer TypeDiscriminatingNodeDeserializer TypeDiscriminatingNodeDeserializerOptions Interfaces ITypeDiscriminatingNodeDeserializerOptions"
  },
  "api/YamlDotNet.Serialization.BuilderSkeleton-1.html": {
    "href": "api/YamlDotNet.Serialization.BuilderSkeleton-1.html",
    "title": "Class BuilderSkeleton<TBuilder> | Mots Glissés",
    "keywords": "Class BuilderSkeleton<TBuilder> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public abstract class BuilderSkeleton<TBuilder> where TBuilder : BuilderSkeleton<TBuilder> Type Parameters TBuilder Inheritance object BuilderSkeleton<TBuilder> Derived DeserializerBuilder SerializerBuilder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Self protected abstract TBuilder Self { get; } Property Value TBuilder Methods BuildTypeConverters() protected IEnumerable<IYamlTypeConverter> BuildTypeConverters() Returns IEnumerable<IYamlTypeConverter> EnablePrivateConstructors() public TBuilder EnablePrivateConstructors() Returns TBuilder IgnoreFields() public TBuilder IgnoreFields() Returns TBuilder IncludeNonPublicProperties() public TBuilder IncludeNonPublicProperties() Returns TBuilder WithAttributeOverride(Type, string, Attribute) public TBuilder WithAttributeOverride(Type type, string member, Attribute attribute) Parameters type Type member string attribute Attribute Returns TBuilder WithAttributeOverride<TClass>(Expression<Func<TClass, object>>, Attribute) public TBuilder WithAttributeOverride<TClass>(Expression<Func<TClass, object>> propertyAccessor, Attribute attribute) Parameters propertyAccessor Expression<Func<TClass, object>> attribute Attribute Returns TBuilder Type Parameters TClass WithNamingConvention(INamingConvention) public TBuilder WithNamingConvention(INamingConvention namingConvention) Parameters namingConvention INamingConvention Returns TBuilder WithTagMapping(TagName, Type) public abstract TBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns TBuilder WithTypeConverter(IYamlTypeConverter) public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter) Parameters typeConverter IYamlTypeConverter Returns TBuilder WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where) Parameters typeConverter IYamlTypeConverter where Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> Returns TBuilder WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) public TBuilder WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> typeConverterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where) where TYamlTypeConverter : IYamlTypeConverter Parameters typeConverterFactory WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> where Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>> Returns TBuilder Type Parameters TYamlTypeConverter WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory Func<ITypeInspector, TTypeInspector> Returns TBuilder Type Parameters TTypeInspector WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory Func<ITypeInspector, TTypeInspector> where Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> Returns TBuilder Type Parameters TTypeInspector WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) public TBuilder WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> typeInspectorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> where Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>> Returns TBuilder Type Parameters TTypeInspector WithTypeResolver(ITypeResolver) public TBuilder WithTypeResolver(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver Returns TBuilder WithYamlFormatter(YamlFormatter) public TBuilder WithYamlFormatter(YamlFormatter formatter) Parameters formatter YamlFormatter Returns TBuilder WithoutTypeConverter(Type) public TBuilder WithoutTypeConverter(Type converterType) Parameters converterType Type Returns TBuilder WithoutTypeConverter<TYamlTypeConverter>() public TBuilder WithoutTypeConverter<TYamlTypeConverter>() where TYamlTypeConverter : IYamlTypeConverter Returns TBuilder Type Parameters TYamlTypeConverter WithoutTypeInspector(Type) public TBuilder WithoutTypeInspector(Type inspectorType) Parameters inspectorType Type Returns TBuilder WithoutTypeInspector<TTypeInspector>() public TBuilder WithoutTypeInspector<TTypeInspector>() where TTypeInspector : ITypeInspector Returns TBuilder Type Parameters TTypeInspector"
  },
  "api/YamlDotNet.Serialization.Callbacks.OnDeserializedAttribute.html": {
    "href": "api/YamlDotNet.Serialization.Callbacks.OnDeserializedAttribute.html",
    "title": "Class OnDeserializedAttribute | Mots Glissés",
    "keywords": "Class OnDeserializedAttribute Namespace YamlDotNet.Serialization.Callbacks Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Method)] public sealed class OnDeserializedAttribute : Attribute Inheritance object Attribute OnDeserializedAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors OnDeserializedAttribute() public OnDeserializedAttribute()"
  },
  "api/YamlDotNet.Serialization.Callbacks.OnDeserializingAttribute.html": {
    "href": "api/YamlDotNet.Serialization.Callbacks.OnDeserializingAttribute.html",
    "title": "Class OnDeserializingAttribute | Mots Glissés",
    "keywords": "Class OnDeserializingAttribute Namespace YamlDotNet.Serialization.Callbacks Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Method)] public sealed class OnDeserializingAttribute : Attribute Inheritance object Attribute OnDeserializingAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors OnDeserializingAttribute() public OnDeserializingAttribute()"
  },
  "api/YamlDotNet.Serialization.Callbacks.OnSerializedAttribute.html": {
    "href": "api/YamlDotNet.Serialization.Callbacks.OnSerializedAttribute.html",
    "title": "Class OnSerializedAttribute | Mots Glissés",
    "keywords": "Class OnSerializedAttribute Namespace YamlDotNet.Serialization.Callbacks Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Method)] public sealed class OnSerializedAttribute : Attribute Inheritance object Attribute OnSerializedAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors OnSerializedAttribute() public OnSerializedAttribute()"
  },
  "api/YamlDotNet.Serialization.Callbacks.OnSerializingAttribute.html": {
    "href": "api/YamlDotNet.Serialization.Callbacks.OnSerializingAttribute.html",
    "title": "Class OnSerializingAttribute | Mots Glissés",
    "keywords": "Class OnSerializingAttribute Namespace YamlDotNet.Serialization.Callbacks Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Method)] public sealed class OnSerializingAttribute : Attribute Inheritance object Attribute OnSerializingAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors OnSerializingAttribute() public OnSerializingAttribute()"
  },
  "api/YamlDotNet.Serialization.Callbacks.html": {
    "href": "api/YamlDotNet.Serialization.Callbacks.html",
    "title": "Namespace YamlDotNet.Serialization.Callbacks | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.Callbacks Classes OnDeserializedAttribute OnDeserializingAttribute OnSerializedAttribute OnSerializingAttribute"
  },
  "api/YamlDotNet.Serialization.Converters.DateOnlyConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.DateOnlyConverter.html",
    "title": "Class DateOnlyConverter | Mots Glissés",
    "keywords": "Class DateOnlyConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class DateOnlyConverter : IYamlTypeConverter Inheritance object DateOnlyConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DateOnlyConverter(IFormatProvider?, bool, params string[]) public DateOnlyConverter(IFormatProvider? provider = null, bool doubleQuotes = false, params string[] formats) Parameters provider IFormatProvider doubleQuotes bool formats string[] Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.DateTimeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.DateTimeConverter.html",
    "title": "Class DateTimeConverter | Mots Glissés",
    "keywords": "Class DateTimeConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class DateTimeConverter : IYamlTypeConverter Inheritance object DateTimeConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DateTimeConverter(DateTimeKind, IFormatProvider?, bool, params string[]) public DateTimeConverter(DateTimeKind kind = DateTimeKind.Utc, IFormatProvider? provider = null, bool doubleQuotes = false, params string[] formats) Parameters kind DateTimeKind provider IFormatProvider doubleQuotes bool formats string[] Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.DateTimeOffsetConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.DateTimeOffsetConverter.html",
    "title": "Class DateTimeOffsetConverter | Mots Glissés",
    "keywords": "Class DateTimeOffsetConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class DateTimeOffsetConverter : IYamlTypeConverter Inheritance object DateTimeOffsetConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DateTimeOffsetConverter(IFormatProvider?, ScalarStyle, DateTimeStyles, params string[]) public DateTimeOffsetConverter(IFormatProvider? provider = null, ScalarStyle style = ScalarStyle.Any, DateTimeStyles dateStyle = DateTimeStyles.None, params string[] formats) Parameters provider IFormatProvider style ScalarStyle dateStyle DateTimeStyles formats string[] Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.GuidConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.GuidConverter.html",
    "title": "Class GuidConverter | Mots Glissés",
    "keywords": "Class GuidConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class GuidConverter : IYamlTypeConverter Inheritance object GuidConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors GuidConverter(bool) public GuidConverter(bool jsonCompatible) Parameters jsonCompatible bool Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.SystemTypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.SystemTypeConverter.html",
    "title": "Class SystemTypeConverter | Mots Glissés",
    "keywords": "Class SystemTypeConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class SystemTypeConverter : IYamlTypeConverter Inheritance object SystemTypeConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SystemTypeConverter() public SystemTypeConverter() Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.TimeOnlyConverter.html": {
    "href": "api/YamlDotNet.Serialization.Converters.TimeOnlyConverter.html",
    "title": "Class TimeOnlyConverter | Mots Glissés",
    "keywords": "Class TimeOnlyConverter Namespace YamlDotNet.Serialization.Converters Assembly YamlDotNet.dll public class TimeOnlyConverter : IYamlTypeConverter Inheritance object TimeOnlyConverter Implements IYamlTypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TimeOnlyConverter(IFormatProvider?, bool, params string[]) public TimeOnlyConverter(IFormatProvider? provider = null, bool doubleQuotes = false, params string[] formats) Parameters provider IFormatProvider doubleQuotes bool formats string[] Methods Accepts(Type) public bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) public object ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.Converters.html": {
    "href": "api/YamlDotNet.Serialization.Converters.html",
    "title": "Namespace YamlDotNet.Serialization.Converters | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.Converters Classes DateOnlyConverter DateTimeConverter DateTimeOffsetConverter GuidConverter SystemTypeConverter TimeOnlyConverter"
  },
  "api/YamlDotNet.Serialization.DefaultValuesHandling.html": {
    "href": "api/YamlDotNet.Serialization.DefaultValuesHandling.html",
    "title": "Enum DefaultValuesHandling | Mots Glissés",
    "keywords": "Enum DefaultValuesHandling Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll [Flags] public enum DefaultValuesHandling Fields OmitDefaults = 2 OmitEmptyCollections = 4 OmitNull = 1 Preserve = 0"
  },
  "api/YamlDotNet.Serialization.Deserializer.html": {
    "href": "api/YamlDotNet.Serialization.Deserializer.html",
    "title": "Class Deserializer | Mots Glissés",
    "keywords": "Class Deserializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class Deserializer : IDeserializer Inheritance object Deserializer Implements IDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Deserializer() public Deserializer() Methods Deserialize(TextReader) public object? Deserialize(TextReader input) Parameters input TextReader Returns object Deserialize(TextReader, Type) public object? Deserialize(TextReader input, Type type) Parameters input TextReader type Type Returns object Deserialize(string) public object? Deserialize(string input) Parameters input string Returns object Deserialize(string, Type) public object? Deserialize(string input, Type type) Parameters input string type Type Returns object Deserialize(IParser) public object? Deserialize(IParser parser) Parameters parser IParser Returns object Deserialize(IParser, Type) public object? Deserialize(IParser parser, Type type) Parameters parser IParser type Type Returns object Deserialize<T>(TextReader) public T Deserialize<T>(TextReader input) Parameters input TextReader Returns T Type Parameters T Deserialize<T>(string) public T Deserialize<T>(string input) Parameters input string Returns T Type Parameters T Deserialize<T>(IParser) public T Deserialize<T>(IParser parser) Parameters parser IParser Returns T Type Parameters T FromValueDeserializer(IValueDeserializer) public static Deserializer FromValueDeserializer(IValueDeserializer valueDeserializer) Parameters valueDeserializer IValueDeserializer Returns Deserializer"
  },
  "api/YamlDotNet.Serialization.DeserializerBuilder.html": {
    "href": "api/YamlDotNet.Serialization.DeserializerBuilder.html",
    "title": "Class DeserializerBuilder | Mots Glissés",
    "keywords": "Class DeserializerBuilder Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class DeserializerBuilder : BuilderSkeleton<DeserializerBuilder> Inheritance object BuilderSkeleton<DeserializerBuilder> DeserializerBuilder Inherited Members BuilderSkeleton<DeserializerBuilder>.IgnoreFields() BuilderSkeleton<DeserializerBuilder>.IncludeNonPublicProperties() BuilderSkeleton<DeserializerBuilder>.EnablePrivateConstructors() BuilderSkeleton<DeserializerBuilder>.WithNamingConvention(INamingConvention) BuilderSkeleton<DeserializerBuilder>.WithTypeResolver(ITypeResolver) BuilderSkeleton<DeserializerBuilder>.WithAttributeOverride<TClass>(Expression<Func<TClass, object>>, Attribute) BuilderSkeleton<DeserializerBuilder>.WithAttributeOverride(Type, string, Attribute) BuilderSkeleton<DeserializerBuilder>.WithTypeConverter(IYamlTypeConverter) BuilderSkeleton<DeserializerBuilder>.WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) BuilderSkeleton<DeserializerBuilder>.WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) BuilderSkeleton<DeserializerBuilder>.WithoutTypeConverter<TYamlTypeConverter>() BuilderSkeleton<DeserializerBuilder>.WithoutTypeConverter(Type) BuilderSkeleton<DeserializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) BuilderSkeleton<DeserializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) BuilderSkeleton<DeserializerBuilder>.WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) BuilderSkeleton<DeserializerBuilder>.WithoutTypeInspector<TTypeInspector>() BuilderSkeleton<DeserializerBuilder>.WithoutTypeInspector(Type) BuilderSkeleton<DeserializerBuilder>.WithYamlFormatter(YamlFormatter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DeserializerBuilder() public DeserializerBuilder() Properties Self protected override DeserializerBuilder Self { get; } Property Value DeserializerBuilder Methods Build() public IDeserializer Build() Returns IDeserializer BuildValueDeserializer() public IValueDeserializer BuildValueDeserializer() Returns IValueDeserializer IgnoreUnmatchedProperties() public DeserializerBuilder IgnoreUnmatchedProperties() Returns DeserializerBuilder WithAttemptingUnquotedStringTypeDeserialization() public DeserializerBuilder WithAttemptingUnquotedStringTypeDeserialization() Returns DeserializerBuilder WithDuplicateKeyChecking() public DeserializerBuilder WithDuplicateKeyChecking() Returns DeserializerBuilder WithNodeDeserializer(INodeDeserializer) public DeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer) Parameters nodeDeserializer INodeDeserializer Returns DeserializerBuilder WithNodeDeserializer(INodeDeserializer, Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>>) public DeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer, Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> where) Parameters nodeDeserializer INodeDeserializer where Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> Returns DeserializerBuilder WithNodeDeserializer<TNodeDeserializer>(WrapperFactory<INodeDeserializer, TNodeDeserializer>, Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>>) public DeserializerBuilder WithNodeDeserializer<TNodeDeserializer>(WrapperFactory<INodeDeserializer, TNodeDeserializer> nodeDeserializerFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>> where) where TNodeDeserializer : INodeDeserializer Parameters nodeDeserializerFactory WrapperFactory<INodeDeserializer, TNodeDeserializer> where Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>> Returns DeserializerBuilder Type Parameters TNodeDeserializer WithNodeTypeResolver(INodeTypeResolver) public DeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver) Parameters nodeTypeResolver INodeTypeResolver Returns DeserializerBuilder WithNodeTypeResolver(INodeTypeResolver, Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>>) public DeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver, Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> where) Parameters nodeTypeResolver INodeTypeResolver where Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> Returns DeserializerBuilder WithNodeTypeResolver<TNodeTypeResolver>(WrapperFactory<INodeTypeResolver, TNodeTypeResolver>, Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>>) public DeserializerBuilder WithNodeTypeResolver<TNodeTypeResolver>(WrapperFactory<INodeTypeResolver, TNodeTypeResolver> nodeTypeResolverFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>> where) where TNodeTypeResolver : INodeTypeResolver Parameters nodeTypeResolverFactory WrapperFactory<INodeTypeResolver, TNodeTypeResolver> where Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>> Returns DeserializerBuilder Type Parameters TNodeTypeResolver WithObjectFactory(Func<Type, object>) public DeserializerBuilder WithObjectFactory(Func<Type, object> objectFactory) Parameters objectFactory Func<Type, object> Returns DeserializerBuilder WithObjectFactory(IObjectFactory) public DeserializerBuilder WithObjectFactory(IObjectFactory objectFactory) Parameters objectFactory IObjectFactory Returns DeserializerBuilder WithTagMapping(TagName, Type) public override DeserializerBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns DeserializerBuilder WithTypeDiscriminatingNodeDeserializer(Action<ITypeDiscriminatingNodeDeserializerOptions>, int, int) public DeserializerBuilder WithTypeDiscriminatingNodeDeserializer(Action<ITypeDiscriminatingNodeDeserializerOptions> configureTypeDiscriminatingNodeDeserializerOptions, int maxDepth = -1, int maxLength = -1) Parameters configureTypeDiscriminatingNodeDeserializerOptions Action<ITypeDiscriminatingNodeDeserializerOptions> maxDepth int maxLength int Returns DeserializerBuilder WithTypeMapping<TInterface, TConcrete>() public DeserializerBuilder WithTypeMapping<TInterface, TConcrete>() where TConcrete : TInterface Returns DeserializerBuilder Type Parameters TInterface TConcrete WithoutNodeDeserializer(Type) public DeserializerBuilder WithoutNodeDeserializer(Type nodeDeserializerType) Parameters nodeDeserializerType Type Returns DeserializerBuilder WithoutNodeDeserializer<TNodeDeserializer>() public DeserializerBuilder WithoutNodeDeserializer<TNodeDeserializer>() where TNodeDeserializer : INodeDeserializer Returns DeserializerBuilder Type Parameters TNodeDeserializer WithoutNodeTypeResolver(Type) public DeserializerBuilder WithoutNodeTypeResolver(Type nodeTypeResolverType) Parameters nodeTypeResolverType Type Returns DeserializerBuilder WithoutNodeTypeResolver<TNodeTypeResolver>() public DeserializerBuilder WithoutNodeTypeResolver<TNodeTypeResolver>() where TNodeTypeResolver : INodeTypeResolver Returns DeserializerBuilder Type Parameters TNodeTypeResolver WithoutTagMapping(TagName) public DeserializerBuilder WithoutTagMapping(TagName tag) Parameters tag TagName Returns DeserializerBuilder"
  },
  "api/YamlDotNet.Serialization.EmissionPhaseObjectGraphVisitorArgs.html": {
    "href": "api/YamlDotNet.Serialization.EmissionPhaseObjectGraphVisitorArgs.html",
    "title": "Class EmissionPhaseObjectGraphVisitorArgs | Mots Glissés",
    "keywords": "Class EmissionPhaseObjectGraphVisitorArgs Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class EmissionPhaseObjectGraphVisitorArgs Inheritance object EmissionPhaseObjectGraphVisitorArgs Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EmissionPhaseObjectGraphVisitorArgs(IObjectGraphVisitor<IEmitter>, IEventEmitter, IEnumerable<IObjectGraphVisitor<Nothing>>, IEnumerable<IYamlTypeConverter>, ObjectSerializer) public EmissionPhaseObjectGraphVisitorArgs(IObjectGraphVisitor<IEmitter> innerVisitor, IEventEmitter eventEmitter, IEnumerable<IObjectGraphVisitor<Nothing>> preProcessingPhaseVisitors, IEnumerable<IYamlTypeConverter> typeConverters, ObjectSerializer nestedObjectSerializer) Parameters innerVisitor IObjectGraphVisitor<IEmitter> eventEmitter IEventEmitter preProcessingPhaseVisitors IEnumerable<IObjectGraphVisitor<Nothing>> typeConverters IEnumerable<IYamlTypeConverter> nestedObjectSerializer ObjectSerializer Properties EventEmitter public IEventEmitter EventEmitter { get; } Property Value IEventEmitter InnerVisitor public IObjectGraphVisitor<IEmitter> InnerVisitor { get; } Property Value IObjectGraphVisitor<IEmitter> NestedObjectSerializer public ObjectSerializer NestedObjectSerializer { get; } Property Value ObjectSerializer TypeConverters public IEnumerable<IYamlTypeConverter> TypeConverters { get; } Property Value IEnumerable<IYamlTypeConverter> Methods GetPreProcessingPhaseObjectGraphVisitor<T>() public T GetPreProcessingPhaseObjectGraphVisitor<T>() where T : IObjectGraphVisitor<Nothing> Returns T Type Parameters T"
  },
  "api/YamlDotNet.Serialization.EventEmitters.ChainedEventEmitter.html": {
    "href": "api/YamlDotNet.Serialization.EventEmitters.ChainedEventEmitter.html",
    "title": "Class ChainedEventEmitter | Mots Glissés",
    "keywords": "Class ChainedEventEmitter Namespace YamlDotNet.Serialization.EventEmitters Assembly YamlDotNet.dll public abstract class ChainedEventEmitter : IEventEmitter Inheritance object ChainedEventEmitter Implements IEventEmitter Derived JsonEventEmitter TypeAssigningEventEmitter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ChainedEventEmitter(IEventEmitter) protected ChainedEventEmitter(IEventEmitter nextEmitter) Parameters nextEmitter IEventEmitter Fields nextEmitter protected readonly IEventEmitter nextEmitter Field Value IEventEmitter Methods Emit(AliasEventInfo, IEmitter) public virtual void Emit(AliasEventInfo eventInfo, IEmitter emitter) Parameters eventInfo AliasEventInfo emitter IEmitter Emit(MappingEndEventInfo, IEmitter) public virtual void Emit(MappingEndEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingEndEventInfo emitter IEmitter Emit(MappingStartEventInfo, IEmitter) public virtual void Emit(MappingStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingStartEventInfo emitter IEmitter Emit(ScalarEventInfo, IEmitter) public virtual void Emit(ScalarEventInfo eventInfo, IEmitter emitter) Parameters eventInfo ScalarEventInfo emitter IEmitter Emit(SequenceEndEventInfo, IEmitter) public virtual void Emit(SequenceEndEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceEndEventInfo emitter IEmitter Emit(SequenceStartEventInfo, IEmitter) public virtual void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceStartEventInfo emitter IEmitter"
  },
  "api/YamlDotNet.Serialization.EventEmitters.JsonEventEmitter.html": {
    "href": "api/YamlDotNet.Serialization.EventEmitters.JsonEventEmitter.html",
    "title": "Class JsonEventEmitter | Mots Glissés",
    "keywords": "Class JsonEventEmitter Namespace YamlDotNet.Serialization.EventEmitters Assembly YamlDotNet.dll public sealed class JsonEventEmitter : ChainedEventEmitter, IEventEmitter Inheritance object ChainedEventEmitter JsonEventEmitter Implements IEventEmitter Inherited Members ChainedEventEmitter.Emit(MappingEndEventInfo, IEmitter) ChainedEventEmitter.Emit(SequenceEndEventInfo, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors JsonEventEmitter(IEventEmitter) public JsonEventEmitter(IEventEmitter nextEmitter) Parameters nextEmitter IEventEmitter JsonEventEmitter(IEventEmitter, YamlFormatter) public JsonEventEmitter(IEventEmitter nextEmitter, YamlFormatter formatter) Parameters nextEmitter IEventEmitter formatter YamlFormatter Methods Emit(AliasEventInfo, IEmitter) public override void Emit(AliasEventInfo eventInfo, IEmitter emitter) Parameters eventInfo AliasEventInfo emitter IEmitter Emit(MappingStartEventInfo, IEmitter) public override void Emit(MappingStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingStartEventInfo emitter IEmitter Emit(ScalarEventInfo, IEmitter) public override void Emit(ScalarEventInfo eventInfo, IEmitter emitter) Parameters eventInfo ScalarEventInfo emitter IEmitter Emit(SequenceStartEventInfo, IEmitter) public override void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceStartEventInfo emitter IEmitter"
  },
  "api/YamlDotNet.Serialization.EventEmitters.TypeAssigningEventEmitter.html": {
    "href": "api/YamlDotNet.Serialization.EventEmitters.TypeAssigningEventEmitter.html",
    "title": "Class TypeAssigningEventEmitter | Mots Glissés",
    "keywords": "Class TypeAssigningEventEmitter Namespace YamlDotNet.Serialization.EventEmitters Assembly YamlDotNet.dll public sealed class TypeAssigningEventEmitter : ChainedEventEmitter, IEventEmitter Inheritance object ChainedEventEmitter TypeAssigningEventEmitter Implements IEventEmitter Inherited Members ChainedEventEmitter.Emit(AliasEventInfo, IEmitter) ChainedEventEmitter.Emit(MappingEndEventInfo, IEmitter) ChainedEventEmitter.Emit(SequenceEndEventInfo, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>, bool) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings, bool quoteNecessaryStrings) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> quoteNecessaryStrings bool TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>, bool, bool) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings, bool quoteNecessaryStrings, bool quoteYaml1_1Strings) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> quoteNecessaryStrings bool quoteYaml1_1Strings bool TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>, bool, bool, ScalarStyle) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings, bool quoteNecessaryStrings, bool quoteYaml1_1Strings, ScalarStyle defaultScalarStyle) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> quoteNecessaryStrings bool quoteYaml1_1Strings bool defaultScalarStyle ScalarStyle TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>, bool, bool, ScalarStyle, YamlFormatter) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings, bool quoteNecessaryStrings, bool quoteYaml1_1Strings, ScalarStyle defaultScalarStyle, YamlFormatter formatter) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> quoteNecessaryStrings bool quoteYaml1_1Strings bool defaultScalarStyle ScalarStyle formatter YamlFormatter TypeAssigningEventEmitter(IEventEmitter, bool, IDictionary<Type, TagName>, bool, ScalarStyle) public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool requireTagWhenStaticAndActualTypesAreDifferent, IDictionary<Type, TagName> tagMappings, bool quoteNecessaryStrings, ScalarStyle defaultScalarStyle) Parameters nextEmitter IEventEmitter requireTagWhenStaticAndActualTypesAreDifferent bool tagMappings IDictionary<Type, TagName> quoteNecessaryStrings bool defaultScalarStyle ScalarStyle Methods Emit(MappingStartEventInfo, IEmitter) public override void Emit(MappingStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingStartEventInfo emitter IEmitter Emit(ScalarEventInfo, IEmitter) public override void Emit(ScalarEventInfo eventInfo, IEmitter emitter) Parameters eventInfo ScalarEventInfo emitter IEmitter Emit(SequenceStartEventInfo, IEmitter) public override void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceStartEventInfo emitter IEmitter"
  },
  "api/YamlDotNet.Serialization.EventEmitters.WriterEventEmitter.html": {
    "href": "api/YamlDotNet.Serialization.EventEmitters.WriterEventEmitter.html",
    "title": "Class WriterEventEmitter | Mots Glissés",
    "keywords": "Class WriterEventEmitter Namespace YamlDotNet.Serialization.EventEmitters Assembly YamlDotNet.dll public sealed class WriterEventEmitter : IEventEmitter Inheritance object WriterEventEmitter Implements IEventEmitter Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WriterEventEmitter() public WriterEventEmitter()"
  },
  "api/YamlDotNet.Serialization.EventEmitters.html": {
    "href": "api/YamlDotNet.Serialization.EventEmitters.html",
    "title": "Namespace YamlDotNet.Serialization.EventEmitters | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.EventEmitters Classes ChainedEventEmitter JsonEventEmitter TypeAssigningEventEmitter WriterEventEmitter"
  },
  "api/YamlDotNet.Serialization.EventInfo.html": {
    "href": "api/YamlDotNet.Serialization.EventInfo.html",
    "title": "Class EventInfo | Mots Glissés",
    "keywords": "Class EventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public abstract class EventInfo Inheritance object EventInfo Derived AliasEventInfo MappingEndEventInfo ObjectEventInfo SequenceEndEventInfo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EventInfo(IObjectDescriptor) protected EventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor Properties Source public IObjectDescriptor Source { get; } Property Value IObjectDescriptor"
  },
  "api/YamlDotNet.Serialization.IAliasProvider.html": {
    "href": "api/YamlDotNet.Serialization.IAliasProvider.html",
    "title": "Interface IAliasProvider | Mots Glissés",
    "keywords": "Interface IAliasProvider Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IAliasProvider Methods GetAlias(object) AnchorName GetAlias(object target) Parameters target object Returns AnchorName"
  },
  "api/YamlDotNet.Serialization.IDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.IDeserializer.html",
    "title": "Interface IDeserializer | Mots Glissés",
    "keywords": "Interface IDeserializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IDeserializer Methods Deserialize(TextReader) object? Deserialize(TextReader input) Parameters input TextReader Returns object Deserialize(TextReader, Type) object? Deserialize(TextReader input, Type type) Parameters input TextReader type Type Returns object Deserialize(string) object? Deserialize(string input) Parameters input string Returns object Deserialize(string, Type) object? Deserialize(string input, Type type) Parameters input string type Type Returns object Deserialize(IParser) object? Deserialize(IParser parser) Parameters parser IParser Returns object Deserialize(IParser, Type) object? Deserialize(IParser parser, Type type) Parameters parser IParser type Type Returns object Deserialize<T>(TextReader) T Deserialize<T>(TextReader input) Parameters input TextReader Returns T Type Parameters T Deserialize<T>(string) T Deserialize<T>(string input) Parameters input string Returns T Type Parameters T Deserialize<T>(IParser) T Deserialize<T>(IParser parser) Parameters parser IParser Returns T Type Parameters T"
  },
  "api/YamlDotNet.Serialization.IEventEmitter.html": {
    "href": "api/YamlDotNet.Serialization.IEventEmitter.html",
    "title": "Interface IEventEmitter | Mots Glissés",
    "keywords": "Interface IEventEmitter Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IEventEmitter Methods Emit(AliasEventInfo, IEmitter) void Emit(AliasEventInfo eventInfo, IEmitter emitter) Parameters eventInfo AliasEventInfo emitter IEmitter Emit(MappingEndEventInfo, IEmitter) void Emit(MappingEndEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingEndEventInfo emitter IEmitter Emit(MappingStartEventInfo, IEmitter) void Emit(MappingStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo MappingStartEventInfo emitter IEmitter Emit(ScalarEventInfo, IEmitter) void Emit(ScalarEventInfo eventInfo, IEmitter emitter) Parameters eventInfo ScalarEventInfo emitter IEmitter Emit(SequenceEndEventInfo, IEmitter) void Emit(SequenceEndEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceEndEventInfo emitter IEmitter Emit(SequenceStartEventInfo, IEmitter) void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter) Parameters eventInfo SequenceStartEventInfo emitter IEmitter"
  },
  "api/YamlDotNet.Serialization.INamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.INamingConvention.html",
    "title": "Interface INamingConvention | Mots Glissés",
    "keywords": "Interface INamingConvention Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface INamingConvention Methods Apply(string) string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.INodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.INodeDeserializer.html",
    "title": "Interface INodeDeserializer | Mots Glissés",
    "keywords": "Interface INodeDeserializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface INodeDeserializer Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) bool Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters reader IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.INodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.INodeTypeResolver.html",
    "title": "Interface INodeTypeResolver | Mots Glissés",
    "keywords": "Interface INodeTypeResolver Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface INodeTypeResolver Methods Resolve(NodeEvent?, ref Type) bool Resolve(NodeEvent? nodeEvent, ref Type currentType) Parameters nodeEvent NodeEvent currentType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.IObjectAccessor.html": {
    "href": "api/YamlDotNet.Serialization.IObjectAccessor.html",
    "title": "Interface IObjectAccessor | Mots Glissés",
    "keywords": "Interface IObjectAccessor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IObjectAccessor Methods Read(string, object) object? Read(string name, object target) Parameters name string target object Returns object Set(string, object, object) void Set(string name, object target, object value) Parameters name string target object value object"
  },
  "api/YamlDotNet.Serialization.IObjectDescriptor.html": {
    "href": "api/YamlDotNet.Serialization.IObjectDescriptor.html",
    "title": "Interface IObjectDescriptor | Mots Glissés",
    "keywords": "Interface IObjectDescriptor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IObjectDescriptor Extension Methods ObjectDescriptorExtensions.NonNullValue(IObjectDescriptor) Properties ScalarStyle ScalarStyle ScalarStyle { get; } Property Value ScalarStyle StaticType Type StaticType { get; } Property Value Type Type Type Type { get; } Property Value Type Value object? Value { get; } Property Value object"
  },
  "api/YamlDotNet.Serialization.IObjectFactory.html": {
    "href": "api/YamlDotNet.Serialization.IObjectFactory.html",
    "title": "Interface IObjectFactory | Mots Glissés",
    "keywords": "Interface IObjectFactory Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IObjectFactory Methods Create(Type) object Create(Type type) Parameters type Type Returns object CreatePrimitive(Type) object? CreatePrimitive(Type type) Parameters type Type Returns object ExecuteOnDeserialized(object) void ExecuteOnDeserialized(object value) Parameters value object ExecuteOnDeserializing(object) void ExecuteOnDeserializing(object value) Parameters value object ExecuteOnSerialized(object) void ExecuteOnSerialized(object value) Parameters value object ExecuteOnSerializing(object) void ExecuteOnSerializing(object value) Parameters value object GetDictionary(IObjectDescriptor, out IDictionary?, out Type[]?) bool GetDictionary(IObjectDescriptor descriptor, out IDictionary? dictionary, out Type[]? genericArguments) Parameters descriptor IObjectDescriptor dictionary IDictionary genericArguments Type[] Returns bool GetValueType(Type) Type GetValueType(Type type) Parameters type Type Returns Type"
  },
  "api/YamlDotNet.Serialization.IObjectGraphTraversalStrategy.html": {
    "href": "api/YamlDotNet.Serialization.IObjectGraphTraversalStrategy.html",
    "title": "Interface IObjectGraphTraversalStrategy | Mots Glissés",
    "keywords": "Interface IObjectGraphTraversalStrategy Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IObjectGraphTraversalStrategy Methods Traverse<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext) void Traverse<TContext>(IObjectDescriptor graph, IObjectGraphVisitor<TContext> visitor, TContext context) Parameters graph IObjectDescriptor visitor IObjectGraphVisitor<TContext> context TContext Type Parameters TContext"
  },
  "api/YamlDotNet.Serialization.IObjectGraphVisitor-1.html": {
    "href": "api/YamlDotNet.Serialization.IObjectGraphVisitor-1.html",
    "title": "Interface IObjectGraphVisitor<TContext> | Mots Glissés",
    "keywords": "Interface IObjectGraphVisitor<TContext> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IObjectGraphVisitor<TContext> Type Parameters TContext Methods Enter(IObjectDescriptor, TContext) bool Enter(IObjectDescriptor value, TContext context) Parameters value IObjectDescriptor context TContext Returns bool EnterMapping(IObjectDescriptor, IObjectDescriptor, TContext) bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, TContext context) Parameters key IObjectDescriptor value IObjectDescriptor context TContext Returns bool EnterMapping(IPropertyDescriptor, IObjectDescriptor, TContext) bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, TContext context) Parameters key IPropertyDescriptor value IObjectDescriptor context TContext Returns bool VisitMappingEnd(IObjectDescriptor, TContext) void VisitMappingEnd(IObjectDescriptor mapping, TContext context) Parameters mapping IObjectDescriptor context TContext VisitMappingStart(IObjectDescriptor, Type, Type, TContext) void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, TContext context) Parameters mapping IObjectDescriptor keyType Type valueType Type context TContext VisitScalar(IObjectDescriptor, TContext) void VisitScalar(IObjectDescriptor scalar, TContext context) Parameters scalar IObjectDescriptor context TContext VisitSequenceEnd(IObjectDescriptor, TContext) void VisitSequenceEnd(IObjectDescriptor sequence, TContext context) Parameters sequence IObjectDescriptor context TContext VisitSequenceStart(IObjectDescriptor, Type, TContext) void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, TContext context) Parameters sequence IObjectDescriptor elementType Type context TContext"
  },
  "api/YamlDotNet.Serialization.IPropertyDescriptor.html": {
    "href": "api/YamlDotNet.Serialization.IPropertyDescriptor.html",
    "title": "Interface IPropertyDescriptor | Mots Glissés",
    "keywords": "Interface IPropertyDescriptor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IPropertyDescriptor Properties CanWrite bool CanWrite { get; } Property Value bool Name string Name { get; } Property Value string Order int Order { get; set; } Property Value int ScalarStyle ScalarStyle ScalarStyle { get; set; } Property Value ScalarStyle Type Type Type { get; } Property Value Type TypeOverride Type? TypeOverride { get; set; } Property Value Type Methods GetCustomAttribute<T>() T? GetCustomAttribute<T>() where T : Attribute Returns T Type Parameters T Read(object) IObjectDescriptor Read(object target) Parameters target object Returns IObjectDescriptor Write(object, object?) void Write(object target, object? value) Parameters target object value object"
  },
  "api/YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax-1.html": {
    "href": "api/YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax-1.html",
    "title": "Interface IRegistrationLocationSelectionSyntax<TBaseRegistrationType> | Mots Glissés",
    "keywords": "Interface IRegistrationLocationSelectionSyntax<TBaseRegistrationType> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IRegistrationLocationSelectionSyntax<TBaseRegistrationType> Type Parameters TBaseRegistrationType Methods After<TRegistrationType>() void After<TRegistrationType>() where TRegistrationType : TBaseRegistrationType Type Parameters TRegistrationType Before<TRegistrationType>() void Before<TRegistrationType>() where TRegistrationType : TBaseRegistrationType Type Parameters TRegistrationType InsteadOf<TRegistrationType>() void InsteadOf<TRegistrationType>() where TRegistrationType : TBaseRegistrationType Type Parameters TRegistrationType OnBottom() void OnBottom() OnTop() void OnTop()"
  },
  "api/YamlDotNet.Serialization.ISerializer.html": {
    "href": "api/YamlDotNet.Serialization.ISerializer.html",
    "title": "Interface ISerializer | Mots Glissés",
    "keywords": "Interface ISerializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface ISerializer Methods Serialize(TextWriter, object?) void Serialize(TextWriter writer, object? graph) Parameters writer TextWriter graph object Serialize(TextWriter, object?, Type) void Serialize(TextWriter writer, object? graph, Type type) Parameters writer TextWriter graph object type Type Serialize(object?) string Serialize(object? graph) Parameters graph object Returns string Serialize(object?, Type) string Serialize(object? graph, Type type) Parameters graph object type Type Returns string Serialize(IEmitter, object?) void Serialize(IEmitter emitter, object? graph) Parameters emitter IEmitter graph object Serialize(IEmitter, object?, Type) void Serialize(IEmitter emitter, object? graph, Type type) Parameters emitter IEmitter graph object type Type"
  },
  "api/YamlDotNet.Serialization.ITrackingRegistrationLocationSelectionSyntax-1.html": {
    "href": "api/YamlDotNet.Serialization.ITrackingRegistrationLocationSelectionSyntax-1.html",
    "title": "Interface ITrackingRegistrationLocationSelectionSyntax<TBaseRegistrationType> | Mots Glissés",
    "keywords": "Interface ITrackingRegistrationLocationSelectionSyntax<TBaseRegistrationType> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface ITrackingRegistrationLocationSelectionSyntax<TBaseRegistrationType> Type Parameters TBaseRegistrationType Methods InsteadOf<TRegistrationType>() void InsteadOf<TRegistrationType>() where TRegistrationType : TBaseRegistrationType Type Parameters TRegistrationType"
  },
  "api/YamlDotNet.Serialization.ITypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.ITypeInspector.html",
    "title": "Interface ITypeInspector | Mots Glissés",
    "keywords": "Interface ITypeInspector Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface ITypeInspector Methods GetProperties(Type, object?) IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor> GetProperty(Type, object?, string, bool) IPropertyDescriptor GetProperty(Type type, object? container, string name, bool ignoreUnmatched) Parameters type Type container object name string ignoreUnmatched bool Returns IPropertyDescriptor"
  },
  "api/YamlDotNet.Serialization.ITypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.ITypeResolver.html",
    "title": "Interface ITypeResolver | Mots Glissés",
    "keywords": "Interface ITypeResolver Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface ITypeResolver Methods Resolve(Type, object?) Type Resolve(Type staticType, object? actualValue) Parameters staticType Type actualValue object Returns Type"
  },
  "api/YamlDotNet.Serialization.IValueDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.IValueDeserializer.html",
    "title": "Interface IValueDeserializer | Mots Glissés",
    "keywords": "Interface IValueDeserializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IValueDeserializer Methods DeserializeValue(IParser, Type, SerializerState, IValueDeserializer) object? DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer) Parameters parser IParser expectedType Type state SerializerState nestedObjectDeserializer IValueDeserializer Returns object"
  },
  "api/YamlDotNet.Serialization.IValuePromise.html": {
    "href": "api/YamlDotNet.Serialization.IValuePromise.html",
    "title": "Interface IValuePromise | Mots Glissés",
    "keywords": "Interface IValuePromise Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IValuePromise Events ValueAvailable event Action<object?> ValueAvailable Event Type Action<object>"
  },
  "api/YamlDotNet.Serialization.IValueSerializer.html": {
    "href": "api/YamlDotNet.Serialization.IValueSerializer.html",
    "title": "Interface IValueSerializer | Mots Glissés",
    "keywords": "Interface IValueSerializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IValueSerializer Methods SerializeValue(IEmitter, object?, Type?) void SerializeValue(IEmitter emitter, object? value, Type? type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.IYamlConvertible.html": {
    "href": "api/YamlDotNet.Serialization.IYamlConvertible.html",
    "title": "Interface IYamlConvertible | Mots Glissés",
    "keywords": "Interface IYamlConvertible Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IYamlConvertible Methods Read(IParser, Type, ObjectDeserializer) void Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer) Parameters parser IParser expectedType Type nestedObjectDeserializer ObjectDeserializer Write(IEmitter, ObjectSerializer) void Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer) Parameters emitter IEmitter nestedObjectSerializer ObjectSerializer"
  },
  "api/YamlDotNet.Serialization.IYamlSerializable.html": {
    "href": "api/YamlDotNet.Serialization.IYamlSerializable.html",
    "title": "Interface IYamlSerializable | Mots Glissés",
    "keywords": "Interface IYamlSerializable Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll [Obsolete(\"Please use IYamlConvertible instead\")] public interface IYamlSerializable Methods ReadYaml(IParser) void ReadYaml(IParser parser) Parameters parser IParser WriteYaml(IEmitter) void WriteYaml(IEmitter emitter) Parameters emitter IEmitter"
  },
  "api/YamlDotNet.Serialization.IYamlTypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.IYamlTypeConverter.html",
    "title": "Interface IYamlTypeConverter | Mots Glissés",
    "keywords": "Interface IYamlTypeConverter Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public interface IYamlTypeConverter Methods Accepts(Type) bool Accepts(Type type) Parameters type Type Returns bool ReadYaml(IParser, Type) object? ReadYaml(IParser parser, Type type) Parameters parser IParser type Type Returns object WriteYaml(IEmitter, object?, Type) void WriteYaml(IEmitter emitter, object? value, Type type) Parameters emitter IEmitter value object type Type"
  },
  "api/YamlDotNet.Serialization.MappingEndEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.MappingEndEventInfo.html",
    "title": "Class MappingEndEventInfo | Mots Glissés",
    "keywords": "Class MappingEndEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class MappingEndEventInfo : EventInfo Inheritance object EventInfo MappingEndEventInfo Inherited Members EventInfo.Source object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MappingEndEventInfo(IObjectDescriptor) public MappingEndEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor"
  },
  "api/YamlDotNet.Serialization.MappingStartEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.MappingStartEventInfo.html",
    "title": "Class MappingStartEventInfo | Mots Glissés",
    "keywords": "Class MappingStartEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class MappingStartEventInfo : ObjectEventInfo Inheritance object EventInfo ObjectEventInfo MappingStartEventInfo Inherited Members ObjectEventInfo.Anchor ObjectEventInfo.Tag EventInfo.Source object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MappingStartEventInfo(IObjectDescriptor) public MappingStartEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor Properties IsImplicit public bool IsImplicit { get; set; } Property Value bool Style public MappingStyle Style { get; set; } Property Value MappingStyle"
  },
  "api/YamlDotNet.Serialization.NamingConventions.CamelCaseNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.CamelCaseNamingConvention.html",
    "title": "Class CamelCaseNamingConvention | Mots Glissés",
    "keywords": "Class CamelCaseNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class CamelCaseNamingConvention : INamingConvention Inheritance object CamelCaseNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CamelCaseNamingConvention() [Obsolete(\"Use the Instance static field instead of creating new instances\")] public CamelCaseNamingConvention() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.HyphenatedNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.HyphenatedNamingConvention.html",
    "title": "Class HyphenatedNamingConvention | Mots Glissés",
    "keywords": "Class HyphenatedNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class HyphenatedNamingConvention : INamingConvention Inheritance object HyphenatedNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors HyphenatedNamingConvention() [Obsolete(\"Use the Instance static field instead of creating new instances\")] public HyphenatedNamingConvention() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.LowerCaseNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.LowerCaseNamingConvention.html",
    "title": "Class LowerCaseNamingConvention | Mots Glissés",
    "keywords": "Class LowerCaseNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class LowerCaseNamingConvention : INamingConvention Inheritance object LowerCaseNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.NullNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.NullNamingConvention.html",
    "title": "Class NullNamingConvention | Mots Glissés",
    "keywords": "Class NullNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class NullNamingConvention : INamingConvention Inheritance object NullNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NullNamingConvention() [Obsolete(\"Use the Instance static field instead of creating new instances\")] public NullNamingConvention() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.PascalCaseNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.PascalCaseNamingConvention.html",
    "title": "Class PascalCaseNamingConvention | Mots Glissés",
    "keywords": "Class PascalCaseNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class PascalCaseNamingConvention : INamingConvention Inheritance object PascalCaseNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PascalCaseNamingConvention() [Obsolete(\"Use the Instance static field instead of creating new instances\")] public PascalCaseNamingConvention() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.UnderscoredNamingConvention.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.UnderscoredNamingConvention.html",
    "title": "Class UnderscoredNamingConvention | Mots Glissés",
    "keywords": "Class UnderscoredNamingConvention Namespace YamlDotNet.Serialization.NamingConventions Assembly YamlDotNet.dll public sealed class UnderscoredNamingConvention : INamingConvention Inheritance object UnderscoredNamingConvention Implements INamingConvention Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UnderscoredNamingConvention() [Obsolete(\"Use the Instance static field instead of creating new instances\")] public UnderscoredNamingConvention() Fields Instance public static readonly INamingConvention Instance Field Value INamingConvention Methods Apply(string) public string Apply(string value) Parameters value string Returns string"
  },
  "api/YamlDotNet.Serialization.NamingConventions.html": {
    "href": "api/YamlDotNet.Serialization.NamingConventions.html",
    "title": "Namespace YamlDotNet.Serialization.NamingConventions | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.NamingConventions Classes CamelCaseNamingConvention HyphenatedNamingConvention LowerCaseNamingConvention NullNamingConvention PascalCaseNamingConvention UnderscoredNamingConvention"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.ArrayNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.ArrayNodeDeserializer.html",
    "title": "Class ArrayNodeDeserializer | Mots Glissés",
    "keywords": "Class ArrayNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class ArrayNodeDeserializer : INodeDeserializer Inheritance object ArrayNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ArrayNodeDeserializer() public ArrayNodeDeserializer() Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.CollectionDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.CollectionDeserializer.html",
    "title": "Class CollectionDeserializer | Mots Glissés",
    "keywords": "Class CollectionDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public abstract class CollectionDeserializer Inheritance object CollectionDeserializer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CollectionDeserializer() protected CollectionDeserializer() Methods DeserializeHelper(Type, IParser, Func<IParser, Type, object?>, IList, bool, IObjectFactory) protected static void DeserializeHelper(Type tItem, IParser parser, Func<IParser, Type, object?> nestedObjectDeserializer, IList result, bool canUpdate, IObjectFactory objectFactory) Parameters tItem Type parser IParser nestedObjectDeserializer Func<IParser, Type, object> result IList canUpdate bool objectFactory IObjectFactory"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.CollectionNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.CollectionNodeDeserializer.html",
    "title": "Class CollectionNodeDeserializer | Mots Glissés",
    "keywords": "Class CollectionNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class CollectionNodeDeserializer : INodeDeserializer Inheritance object CollectionNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CollectionNodeDeserializer(IObjectFactory) public CollectionNodeDeserializer(IObjectFactory objectFactory) Parameters objectFactory IObjectFactory Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.DictionaryDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.DictionaryDeserializer.html",
    "title": "Class DictionaryDeserializer | Mots Glissés",
    "keywords": "Class DictionaryDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public abstract class DictionaryDeserializer Inheritance object DictionaryDeserializer Derived DictionaryNodeDeserializer StaticDictionaryNodeDeserializer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DictionaryDeserializer(bool) public DictionaryDeserializer(bool duplicateKeyChecking) Parameters duplicateKeyChecking bool Methods Deserialize(Type, Type, IParser, Func<IParser, Type, object?>, IDictionary) protected virtual void Deserialize(Type tKey, Type tValue, IParser parser, Func<IParser, Type, object?> nestedObjectDeserializer, IDictionary result) Parameters tKey Type tValue Type parser IParser nestedObjectDeserializer Func<IParser, Type, object> result IDictionary"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.DictionaryNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.DictionaryNodeDeserializer.html",
    "title": "Class DictionaryNodeDeserializer | Mots Glissés",
    "keywords": "Class DictionaryNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public class DictionaryNodeDeserializer : DictionaryDeserializer, INodeDeserializer Inheritance object DictionaryDeserializer DictionaryNodeDeserializer Implements INodeDeserializer Inherited Members DictionaryDeserializer.Deserialize(Type, Type, IParser, Func<IParser, Type, object>, IDictionary) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DictionaryNodeDeserializer(IObjectFactory, bool) public DictionaryNodeDeserializer(IObjectFactory objectFactory, bool duplicateKeyChecking) Parameters objectFactory IObjectFactory duplicateKeyChecking bool Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.EnumerableNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.EnumerableNodeDeserializer.html",
    "title": "Class EnumerableNodeDeserializer | Mots Glissés",
    "keywords": "Class EnumerableNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class EnumerableNodeDeserializer : INodeDeserializer Inheritance object EnumerableNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EnumerableNodeDeserializer() public EnumerableNodeDeserializer() Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.NullNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.NullNodeDeserializer.html",
    "title": "Class NullNodeDeserializer | Mots Glissés",
    "keywords": "Class NullNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class NullNodeDeserializer : INodeDeserializer Inheritance object NullNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NullNodeDeserializer() public NullNodeDeserializer() Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.ObjectNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.ObjectNodeDeserializer.html",
    "title": "Class ObjectNodeDeserializer | Mots Glissés",
    "keywords": "Class ObjectNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class ObjectNodeDeserializer : INodeDeserializer Inheritance object ObjectNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ObjectNodeDeserializer(IObjectFactory, ITypeInspector, bool, bool, ITypeConverter) public ObjectNodeDeserializer(IObjectFactory objectFactory, ITypeInspector typeDescriptor, bool ignoreUnmatched, bool duplicateKeyChecking, ITypeConverter typeConverter) Parameters objectFactory IObjectFactory typeDescriptor ITypeInspector ignoreUnmatched bool duplicateKeyChecking bool typeConverter ITypeConverter Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.ScalarNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.ScalarNodeDeserializer.html",
    "title": "Class ScalarNodeDeserializer | Mots Glissés",
    "keywords": "Class ScalarNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class ScalarNodeDeserializer : INodeDeserializer Inheritance object ScalarNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ScalarNodeDeserializer(bool, ITypeConverter, YamlFormatter) public ScalarNodeDeserializer(bool attemptUnknownTypeDeserialization, ITypeConverter typeConverter, YamlFormatter formatter) Parameters attemptUnknownTypeDeserialization bool typeConverter ITypeConverter formatter YamlFormatter Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.StaticArrayNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.StaticArrayNodeDeserializer.html",
    "title": "Class StaticArrayNodeDeserializer | Mots Glissés",
    "keywords": "Class StaticArrayNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class StaticArrayNodeDeserializer : INodeDeserializer Inheritance object StaticArrayNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticArrayNodeDeserializer(StaticObjectFactory) public StaticArrayNodeDeserializer(StaticObjectFactory factory) Parameters factory StaticObjectFactory Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.StaticCollectionNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.StaticCollectionNodeDeserializer.html",
    "title": "Class StaticCollectionNodeDeserializer | Mots Glissés",
    "keywords": "Class StaticCollectionNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class StaticCollectionNodeDeserializer : INodeDeserializer Inheritance object StaticCollectionNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticCollectionNodeDeserializer(StaticObjectFactory) public StaticCollectionNodeDeserializer(StaticObjectFactory factory) Parameters factory StaticObjectFactory Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.StaticDictionaryNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.StaticDictionaryNodeDeserializer.html",
    "title": "Class StaticDictionaryNodeDeserializer | Mots Glissés",
    "keywords": "Class StaticDictionaryNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public class StaticDictionaryNodeDeserializer : DictionaryDeserializer, INodeDeserializer Inheritance object DictionaryDeserializer StaticDictionaryNodeDeserializer Implements INodeDeserializer Inherited Members DictionaryDeserializer.Deserialize(Type, Type, IParser, Func<IParser, Type, object>, IDictionary) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticDictionaryNodeDeserializer(StaticObjectFactory, bool) public StaticDictionaryNodeDeserializer(StaticObjectFactory objectFactory, bool duplicateKeyChecking) Parameters objectFactory StaticObjectFactory duplicateKeyChecking bool Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters reader IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.TypeConverterNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.TypeConverterNodeDeserializer.html",
    "title": "Class TypeConverterNodeDeserializer | Mots Glissés",
    "keywords": "Class TypeConverterNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class TypeConverterNodeDeserializer : INodeDeserializer Inheritance object TypeConverterNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeConverterNodeDeserializer(IEnumerable<IYamlTypeConverter>) public TypeConverterNodeDeserializer(IEnumerable<IYamlTypeConverter> converters) Parameters converters IEnumerable<IYamlTypeConverter> Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.YamlConvertibleNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.YamlConvertibleNodeDeserializer.html",
    "title": "Class YamlConvertibleNodeDeserializer | Mots Glissés",
    "keywords": "Class YamlConvertibleNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class YamlConvertibleNodeDeserializer : INodeDeserializer Inheritance object YamlConvertibleNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlConvertibleNodeDeserializer(IObjectFactory) public YamlConvertibleNodeDeserializer(IObjectFactory objectFactory) Parameters objectFactory IObjectFactory Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.YamlSerializableNodeDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.YamlSerializableNodeDeserializer.html",
    "title": "Class YamlSerializableNodeDeserializer | Mots Glissés",
    "keywords": "Class YamlSerializableNodeDeserializer Namespace YamlDotNet.Serialization.NodeDeserializers Assembly YamlDotNet.dll public sealed class YamlSerializableNodeDeserializer : INodeDeserializer Inheritance object YamlSerializableNodeDeserializer Implements INodeDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlSerializableNodeDeserializer(IObjectFactory) public YamlSerializableNodeDeserializer(IObjectFactory objectFactory) Parameters objectFactory IObjectFactory Methods Deserialize(IParser, Type, Func<IParser, Type, object?>, out object?) public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object?> nestedObjectDeserializer, out object? value) Parameters parser IParser expectedType Type nestedObjectDeserializer Func<IParser, Type, object> value object Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeDeserializers.html": {
    "href": "api/YamlDotNet.Serialization.NodeDeserializers.html",
    "title": "Namespace YamlDotNet.Serialization.NodeDeserializers | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.NodeDeserializers Classes ArrayNodeDeserializer CollectionDeserializer CollectionNodeDeserializer DictionaryDeserializer DictionaryNodeDeserializer EnumerableNodeDeserializer NullNodeDeserializer ObjectNodeDeserializer ScalarNodeDeserializer StaticArrayNodeDeserializer StaticCollectionNodeDeserializer StaticDictionaryNodeDeserializer TypeConverterNodeDeserializer YamlConvertibleNodeDeserializer YamlSerializableNodeDeserializer"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.DefaultContainersNodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.DefaultContainersNodeTypeResolver.html",
    "title": "Class DefaultContainersNodeTypeResolver | Mots Glissés",
    "keywords": "Class DefaultContainersNodeTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public sealed class DefaultContainersNodeTypeResolver : INodeTypeResolver Inheritance object DefaultContainersNodeTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultContainersNodeTypeResolver() public DefaultContainersNodeTypeResolver()"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.MappingNodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.MappingNodeTypeResolver.html",
    "title": "Class MappingNodeTypeResolver | Mots Glissés",
    "keywords": "Class MappingNodeTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public class MappingNodeTypeResolver : INodeTypeResolver Inheritance object MappingNodeTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MappingNodeTypeResolver(IDictionary<Type, Type>) public MappingNodeTypeResolver(IDictionary<Type, Type> mappings) Parameters mappings IDictionary<Type, Type> Methods Resolve(NodeEvent?, ref Type) public bool Resolve(NodeEvent? nodeEvent, ref Type currentType) Parameters nodeEvent NodeEvent currentType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.PreventUnknownTagsNodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.PreventUnknownTagsNodeTypeResolver.html",
    "title": "Class PreventUnknownTagsNodeTypeResolver | Mots Glissés",
    "keywords": "Class PreventUnknownTagsNodeTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public class PreventUnknownTagsNodeTypeResolver : INodeTypeResolver Inheritance object PreventUnknownTagsNodeTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PreventUnknownTagsNodeTypeResolver() public PreventUnknownTagsNodeTypeResolver()"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.TagNodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.TagNodeTypeResolver.html",
    "title": "Class TagNodeTypeResolver | Mots Glissés",
    "keywords": "Class TagNodeTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public sealed class TagNodeTypeResolver : INodeTypeResolver Inheritance object TagNodeTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TagNodeTypeResolver(IDictionary<TagName, Type>) public TagNodeTypeResolver(IDictionary<TagName, Type> tagMappings) Parameters tagMappings IDictionary<TagName, Type>"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.TypeNameInTagNodeTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.TypeNameInTagNodeTypeResolver.html",
    "title": "Class TypeNameInTagNodeTypeResolver | Mots Glissés",
    "keywords": "Class TypeNameInTagNodeTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll [Obsolete(\"The mechanism that this class uses to specify type names is non-standard. Register the tags explicitly instead of using this convention.\")] public sealed class TypeNameInTagNodeTypeResolver : INodeTypeResolver Inheritance object TypeNameInTagNodeTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeNameInTagNodeTypeResolver() public TypeNameInTagNodeTypeResolver()"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.YamlConvertibleTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.YamlConvertibleTypeResolver.html",
    "title": "Class YamlConvertibleTypeResolver | Mots Glissés",
    "keywords": "Class YamlConvertibleTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public sealed class YamlConvertibleTypeResolver : INodeTypeResolver Inheritance object YamlConvertibleTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlConvertibleTypeResolver() public YamlConvertibleTypeResolver() Methods Resolve(NodeEvent?, ref Type) public bool Resolve(NodeEvent? nodeEvent, ref Type currentType) Parameters nodeEvent NodeEvent currentType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.YamlSerializableTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.YamlSerializableTypeResolver.html",
    "title": "Class YamlSerializableTypeResolver | Mots Glissés",
    "keywords": "Class YamlSerializableTypeResolver Namespace YamlDotNet.Serialization.NodeTypeResolvers Assembly YamlDotNet.dll public sealed class YamlSerializableTypeResolver : INodeTypeResolver Inheritance object YamlSerializableTypeResolver Implements INodeTypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlSerializableTypeResolver() public YamlSerializableTypeResolver() Methods Resolve(NodeEvent?, ref Type) public bool Resolve(NodeEvent? nodeEvent, ref Type currentType) Parameters nodeEvent NodeEvent currentType Type Returns bool"
  },
  "api/YamlDotNet.Serialization.NodeTypeResolvers.html": {
    "href": "api/YamlDotNet.Serialization.NodeTypeResolvers.html",
    "title": "Namespace YamlDotNet.Serialization.NodeTypeResolvers | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.NodeTypeResolvers Classes DefaultContainersNodeTypeResolver MappingNodeTypeResolver PreventUnknownTagsNodeTypeResolver TagNodeTypeResolver TypeNameInTagNodeTypeResolver YamlConvertibleTypeResolver YamlSerializableTypeResolver"
  },
  "api/YamlDotNet.Serialization.Nothing.html": {
    "href": "api/YamlDotNet.Serialization.Nothing.html",
    "title": "Struct Nothing | Mots Glissés",
    "keywords": "Struct Nothing Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public struct Nothing Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object)"
  },
  "api/YamlDotNet.Serialization.ObjectDescriptor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectDescriptor.html",
    "title": "Class ObjectDescriptor | Mots Glissés",
    "keywords": "Class ObjectDescriptor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class ObjectDescriptor : IObjectDescriptor Inheritance object ObjectDescriptor Implements IObjectDescriptor Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectDescriptorExtensions.NonNullValue(IObjectDescriptor) Constructors ObjectDescriptor(object?, Type, Type) public ObjectDescriptor(object? value, Type type, Type staticType) Parameters value object type Type staticType Type ObjectDescriptor(object?, Type, Type, ScalarStyle) public ObjectDescriptor(object? value, Type type, Type staticType, ScalarStyle scalarStyle) Parameters value object type Type staticType Type scalarStyle ScalarStyle Properties ScalarStyle public ScalarStyle ScalarStyle { get; } Property Value ScalarStyle StaticType public Type StaticType { get; } Property Value Type Type public Type Type { get; } Property Value Type Value public object? Value { get; } Property Value object"
  },
  "api/YamlDotNet.Serialization.ObjectDescriptorExtensions.html": {
    "href": "api/YamlDotNet.Serialization.ObjectDescriptorExtensions.html",
    "title": "Class ObjectDescriptorExtensions | Mots Glissés",
    "keywords": "Class ObjectDescriptorExtensions Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public static class ObjectDescriptorExtensions Inheritance object ObjectDescriptorExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods NonNullValue(IObjectDescriptor) public static object NonNullValue(this IObjectDescriptor objectDescriptor) Parameters objectDescriptor IObjectDescriptor Returns object"
  },
  "api/YamlDotNet.Serialization.ObjectDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.ObjectDeserializer.html",
    "title": "Delegate ObjectDeserializer | Mots Glissés",
    "keywords": "Delegate ObjectDeserializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public delegate object? ObjectDeserializer(Type type) Parameters type Type Returns object Constructors ObjectDeserializer(object, nint) public ObjectDeserializer(object @object, nint method) Parameters object object method nint Methods BeginInvoke(Type, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Type type, AsyncCallback callback, object @object) Parameters type Type callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual object? EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns object Invoke(Type) public virtual object? Invoke(Type type) Parameters type Type Returns object"
  },
  "api/YamlDotNet.Serialization.ObjectEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.ObjectEventInfo.html",
    "title": "Class ObjectEventInfo | Mots Glissés",
    "keywords": "Class ObjectEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public class ObjectEventInfo : EventInfo Inheritance object EventInfo ObjectEventInfo Derived MappingStartEventInfo ScalarEventInfo SequenceStartEventInfo Inherited Members EventInfo.Source object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ObjectEventInfo(IObjectDescriptor) protected ObjectEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor Properties Anchor public AnchorName Anchor { get; set; } Property Value AnchorName Tag public TagName Tag { get; set; } Property Value TagName"
  },
  "api/YamlDotNet.Serialization.ObjectFactories.DefaultObjectFactory.html": {
    "href": "api/YamlDotNet.Serialization.ObjectFactories.DefaultObjectFactory.html",
    "title": "Class DefaultObjectFactory | Mots Glissés",
    "keywords": "Class DefaultObjectFactory Namespace YamlDotNet.Serialization.ObjectFactories Assembly YamlDotNet.dll public sealed class DefaultObjectFactory : ObjectFactoryBase, IObjectFactory Inheritance object ObjectFactoryBase DefaultObjectFactory Implements IObjectFactory Inherited Members ObjectFactoryBase.CreatePrimitive(Type) ObjectFactoryBase.GetDictionary(IObjectDescriptor, out IDictionary, out Type[]) ObjectFactoryBase.GetValueType(Type) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultObjectFactory() public DefaultObjectFactory() DefaultObjectFactory(IDictionary<Type, Type>) public DefaultObjectFactory(IDictionary<Type, Type> mappings) Parameters mappings IDictionary<Type, Type> DefaultObjectFactory(IDictionary<Type, Type>, Settings) public DefaultObjectFactory(IDictionary<Type, Type> mappings, Settings settings) Parameters mappings IDictionary<Type, Type> settings Settings Methods Create(Type) public override object Create(Type type) Parameters type Type Returns object ExecuteOnDeserialized(object) public override void ExecuteOnDeserialized(object value) Parameters value object ExecuteOnDeserializing(object) public override void ExecuteOnDeserializing(object value) Parameters value object ExecuteOnSerialized(object) public override void ExecuteOnSerialized(object value) Parameters value object ExecuteOnSerializing(object) public override void ExecuteOnSerializing(object value) Parameters value object"
  },
  "api/YamlDotNet.Serialization.ObjectFactories.LambdaObjectFactory.html": {
    "href": "api/YamlDotNet.Serialization.ObjectFactories.LambdaObjectFactory.html",
    "title": "Class LambdaObjectFactory | Mots Glissés",
    "keywords": "Class LambdaObjectFactory Namespace YamlDotNet.Serialization.ObjectFactories Assembly YamlDotNet.dll public sealed class LambdaObjectFactory : ObjectFactoryBase, IObjectFactory Inheritance object ObjectFactoryBase LambdaObjectFactory Implements IObjectFactory Inherited Members ObjectFactoryBase.CreatePrimitive(Type) ObjectFactoryBase.ExecuteOnDeserialized(object) ObjectFactoryBase.ExecuteOnDeserializing(object) ObjectFactoryBase.ExecuteOnSerialized(object) ObjectFactoryBase.ExecuteOnSerializing(object) ObjectFactoryBase.GetDictionary(IObjectDescriptor, out IDictionary, out Type[]) ObjectFactoryBase.GetValueType(Type) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors LambdaObjectFactory(Func<Type, object>) public LambdaObjectFactory(Func<Type, object> factory) Parameters factory Func<Type, object> Methods Create(Type) public override object Create(Type type) Parameters type Type Returns object"
  },
  "api/YamlDotNet.Serialization.ObjectFactories.ObjectFactoryBase.html": {
    "href": "api/YamlDotNet.Serialization.ObjectFactories.ObjectFactoryBase.html",
    "title": "Class ObjectFactoryBase | Mots Glissés",
    "keywords": "Class ObjectFactoryBase Namespace YamlDotNet.Serialization.ObjectFactories Assembly YamlDotNet.dll public abstract class ObjectFactoryBase : IObjectFactory Inheritance object ObjectFactoryBase Implements IObjectFactory Derived DefaultObjectFactory LambdaObjectFactory Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ObjectFactoryBase() protected ObjectFactoryBase() Methods Create(Type) public abstract object Create(Type type) Parameters type Type Returns object CreatePrimitive(Type) public virtual object? CreatePrimitive(Type type) Parameters type Type Returns object ExecuteOnDeserialized(object) public virtual void ExecuteOnDeserialized(object value) Parameters value object ExecuteOnDeserializing(object) public virtual void ExecuteOnDeserializing(object value) Parameters value object ExecuteOnSerialized(object) public virtual void ExecuteOnSerialized(object value) Parameters value object ExecuteOnSerializing(object) public virtual void ExecuteOnSerializing(object value) Parameters value object GetDictionary(IObjectDescriptor, out IDictionary?, out Type[]?) public virtual bool GetDictionary(IObjectDescriptor descriptor, out IDictionary? dictionary, out Type[]? genericArguments) Parameters descriptor IObjectDescriptor dictionary IDictionary genericArguments Type[] Returns bool GetValueType(Type) public virtual Type GetValueType(Type type) Parameters type Type Returns Type"
  },
  "api/YamlDotNet.Serialization.ObjectFactories.StaticObjectFactory.html": {
    "href": "api/YamlDotNet.Serialization.ObjectFactories.StaticObjectFactory.html",
    "title": "Class StaticObjectFactory | Mots Glissés",
    "keywords": "Class StaticObjectFactory Namespace YamlDotNet.Serialization.ObjectFactories Assembly YamlDotNet.dll public abstract class StaticObjectFactory : IObjectFactory Inheritance object StaticObjectFactory Implements IObjectFactory Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticObjectFactory() protected StaticObjectFactory() Methods Create(Type) public abstract object Create(Type type) Parameters type Type Returns object CreateArray(Type, int) public abstract Array CreateArray(Type type, int count) Parameters type Type count int Returns Array CreatePrimitive(Type) public virtual object? CreatePrimitive(Type type) Parameters type Type Returns object ExecuteOnDeserialized(object) public abstract void ExecuteOnDeserialized(object value) Parameters value object ExecuteOnDeserializing(object) public abstract void ExecuteOnDeserializing(object value) Parameters value object ExecuteOnSerialized(object) public abstract void ExecuteOnSerialized(object value) Parameters value object ExecuteOnSerializing(object) public abstract void ExecuteOnSerializing(object value) Parameters value object GetDictionary(IObjectDescriptor, out IDictionary?, out Type[]?) public bool GetDictionary(IObjectDescriptor descriptor, out IDictionary? dictionary, out Type[]? genericArguments) Parameters descriptor IObjectDescriptor dictionary IDictionary genericArguments Type[] Returns bool GetKeyType(Type) public abstract Type GetKeyType(Type type) Parameters type Type Returns Type GetValueType(Type) public abstract Type GetValueType(Type type) Parameters type Type Returns Type IsArray(Type) public abstract bool IsArray(Type type) Parameters type Type Returns bool IsDictionary(Type) public abstract bool IsDictionary(Type type) Parameters type Type Returns bool IsList(Type) public abstract bool IsList(Type type) Parameters type Type Returns bool"
  },
  "api/YamlDotNet.Serialization.ObjectFactories.html": {
    "href": "api/YamlDotNet.Serialization.ObjectFactories.html",
    "title": "Namespace YamlDotNet.Serialization.ObjectFactories | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.ObjectFactories Classes DefaultObjectFactory LambdaObjectFactory ObjectFactoryBase StaticObjectFactory"
  },
  "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.ObjectPathSegment.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.ObjectPathSegment.html",
    "title": "Struct FullObjectGraphTraversalStrategy.ObjectPathSegment | Mots Glissés",
    "keywords": "Struct FullObjectGraphTraversalStrategy.ObjectPathSegment Namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies Assembly YamlDotNet.dll protected struct FullObjectGraphTraversalStrategy.ObjectPathSegment Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors ObjectPathSegment(object, IObjectDescriptor) public ObjectPathSegment(object name, IObjectDescriptor value) Parameters name object value IObjectDescriptor Fields Name public readonly object Name Field Value object Value public readonly IObjectDescriptor Value Field Value IObjectDescriptor"
  },
  "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.FullObjectGraphTraversalStrategy.html",
    "title": "Class FullObjectGraphTraversalStrategy | Mots Glissés",
    "keywords": "Class FullObjectGraphTraversalStrategy Namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies Assembly YamlDotNet.dll public class FullObjectGraphTraversalStrategy : IObjectGraphTraversalStrategy Inheritance object FullObjectGraphTraversalStrategy Implements IObjectGraphTraversalStrategy Derived RoundtripObjectGraphTraversalStrategy Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FullObjectGraphTraversalStrategy(ITypeInspector, ITypeResolver, int, INamingConvention, IObjectFactory) public FullObjectGraphTraversalStrategy(ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion, INamingConvention namingConvention, IObjectFactory objectFactory) Parameters typeDescriptor ITypeInspector typeResolver ITypeResolver maxRecursion int namingConvention INamingConvention objectFactory IObjectFactory Methods TraverseDictionary<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Type, Type, TContext, Stack<ObjectPathSegment>) protected virtual void TraverseDictionary<TContext>(IObjectDescriptor dictionary, IObjectGraphVisitor<TContext> visitor, Type keyType, Type valueType, TContext context, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> path) Parameters dictionary IObjectDescriptor visitor IObjectGraphVisitor<TContext> keyType Type valueType Type context TContext path Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> Type Parameters TContext TraverseObject<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<ObjectPathSegment>) protected virtual void TraverseObject<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, TContext context, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> path) Parameters value IObjectDescriptor visitor IObjectGraphVisitor<TContext> context TContext path Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> Type Parameters TContext TraverseProperties<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<ObjectPathSegment>) protected virtual void TraverseProperties<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, TContext context, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> path) Parameters value IObjectDescriptor visitor IObjectGraphVisitor<TContext> context TContext path Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> Type Parameters TContext Traverse<TContext>(object, IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<ObjectPathSegment>) protected virtual void Traverse<TContext>(object name, IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, TContext context, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> path) Parameters name object value IObjectDescriptor visitor IObjectGraphVisitor<TContext> context TContext path Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> Type Parameters TContext"
  },
  "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.RoundtripObjectGraphTraversalStrategy.html",
    "title": "Class RoundtripObjectGraphTraversalStrategy | Mots Glissés",
    "keywords": "Class RoundtripObjectGraphTraversalStrategy Namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies Assembly YamlDotNet.dll public class RoundtripObjectGraphTraversalStrategy : FullObjectGraphTraversalStrategy, IObjectGraphTraversalStrategy Inheritance object FullObjectGraphTraversalStrategy RoundtripObjectGraphTraversalStrategy Implements IObjectGraphTraversalStrategy Inherited Members FullObjectGraphTraversalStrategy.Traverse<TContext>(object, IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment>) FullObjectGraphTraversalStrategy.TraverseObject<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment>) FullObjectGraphTraversalStrategy.TraverseDictionary<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, Type, Type, TContext, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment>) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RoundtripObjectGraphTraversalStrategy(IEnumerable<IYamlTypeConverter>, ITypeInspector, ITypeResolver, int, INamingConvention, Settings, IObjectFactory) public RoundtripObjectGraphTraversalStrategy(IEnumerable<IYamlTypeConverter> converters, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion, INamingConvention namingConvention, Settings settings, IObjectFactory factory) Parameters converters IEnumerable<IYamlTypeConverter> typeDescriptor ITypeInspector typeResolver ITypeResolver maxRecursion int namingConvention INamingConvention settings Settings factory IObjectFactory Methods TraverseProperties<TContext>(IObjectDescriptor, IObjectGraphVisitor<TContext>, TContext, Stack<ObjectPathSegment>) protected override void TraverseProperties<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, TContext context, Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> path) Parameters value IObjectDescriptor visitor IObjectGraphVisitor<TContext> context TContext path Stack<FullObjectGraphTraversalStrategy.ObjectPathSegment> Type Parameters TContext"
  },
  "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategies.html",
    "title": "Namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies Classes FullObjectGraphTraversalStrategy RoundtripObjectGraphTraversalStrategy Structs FullObjectGraphTraversalStrategy.ObjectPathSegment"
  },
  "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategyFactory.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphTraversalStrategyFactory.html",
    "title": "Delegate ObjectGraphTraversalStrategyFactory | Mots Glissés",
    "keywords": "Delegate ObjectGraphTraversalStrategyFactory Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public delegate IObjectGraphTraversalStrategy ObjectGraphTraversalStrategyFactory(ITypeInspector typeInspector, ITypeResolver typeResolver, IEnumerable<IYamlTypeConverter> typeConverters, int maximumRecursion) Parameters typeInspector ITypeInspector typeResolver ITypeResolver typeConverters IEnumerable<IYamlTypeConverter> maximumRecursion int Returns IObjectGraphTraversalStrategy Constructors ObjectGraphTraversalStrategyFactory(object, nint) public ObjectGraphTraversalStrategyFactory(object @object, nint method) Parameters object object method nint Methods BeginInvoke(ITypeInspector, ITypeResolver, IEnumerable<IYamlTypeConverter>, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(ITypeInspector typeInspector, ITypeResolver typeResolver, IEnumerable<IYamlTypeConverter> typeConverters, int maximumRecursion, AsyncCallback callback, object @object) Parameters typeInspector ITypeInspector typeResolver ITypeResolver typeConverters IEnumerable<IYamlTypeConverter> maximumRecursion int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual IObjectGraphTraversalStrategy EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns IObjectGraphTraversalStrategy Invoke(ITypeInspector, ITypeResolver, IEnumerable<IYamlTypeConverter>, int) public virtual IObjectGraphTraversalStrategy Invoke(ITypeInspector typeInspector, ITypeResolver typeResolver, IEnumerable<IYamlTypeConverter> typeConverters, int maximumRecursion) Parameters typeInspector ITypeInspector typeResolver ITypeResolver typeConverters IEnumerable<IYamlTypeConverter> maximumRecursion int Returns IObjectGraphTraversalStrategy"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.AnchorAssigner.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.AnchorAssigner.html",
    "title": "Class AnchorAssigner | Mots Glissés",
    "keywords": "Class AnchorAssigner Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class AnchorAssigner : PreProcessingPhaseObjectGraphVisitorSkeleton, IObjectGraphVisitor<Nothing>, IAliasProvider Inheritance object PreProcessingPhaseObjectGraphVisitorSkeleton AnchorAssigner Implements IObjectGraphVisitor<Nothing> IAliasProvider Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AnchorAssigner(IEnumerable<IYamlTypeConverter>) public AnchorAssigner(IEnumerable<IYamlTypeConverter> typeConverters) Parameters typeConverters IEnumerable<IYamlTypeConverter> Methods Enter(IObjectDescriptor) protected override bool Enter(IObjectDescriptor value) Parameters value IObjectDescriptor Returns bool EnterMapping(IObjectDescriptor, IObjectDescriptor) protected override bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value) Parameters key IObjectDescriptor value IObjectDescriptor Returns bool EnterMapping(IPropertyDescriptor, IObjectDescriptor) protected override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value) Parameters key IPropertyDescriptor value IObjectDescriptor Returns bool VisitMappingEnd(IObjectDescriptor) protected override void VisitMappingEnd(IObjectDescriptor mapping) Parameters mapping IObjectDescriptor VisitMappingStart(IObjectDescriptor, Type, Type) protected override void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType) Parameters mapping IObjectDescriptor keyType Type valueType Type VisitScalar(IObjectDescriptor) protected override void VisitScalar(IObjectDescriptor scalar) Parameters scalar IObjectDescriptor VisitSequenceEnd(IObjectDescriptor) protected override void VisitSequenceEnd(IObjectDescriptor sequence) Parameters sequence IObjectDescriptor VisitSequenceStart(IObjectDescriptor, Type) protected override void VisitSequenceStart(IObjectDescriptor sequence, Type elementType) Parameters sequence IObjectDescriptor elementType Type"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.AnchorAssigningObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.AnchorAssigningObjectGraphVisitor.html",
    "title": "Class AnchorAssigningObjectGraphVisitor | Mots Glissés",
    "keywords": "Class AnchorAssigningObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class AnchorAssigningObjectGraphVisitor : ChainedObjectGraphVisitor, IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor AnchorAssigningObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members ChainedObjectGraphVisitor.EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitMappingEnd(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitSequenceEnd(IObjectDescriptor, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AnchorAssigningObjectGraphVisitor(IObjectGraphVisitor<IEmitter>, IEventEmitter, IAliasProvider) public AnchorAssigningObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor, IEventEmitter eventEmitter, IAliasProvider aliasProvider) Parameters nextVisitor IObjectGraphVisitor<IEmitter> eventEmitter IEventEmitter aliasProvider IAliasProvider Methods Enter(IObjectDescriptor, IEmitter) public override bool Enter(IObjectDescriptor value, IEmitter context) Parameters value IObjectDescriptor context IEmitter Returns bool VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) public override void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, IEmitter context) Parameters mapping IObjectDescriptor keyType Type valueType Type context IEmitter VisitScalar(IObjectDescriptor, IEmitter) public override void VisitScalar(IObjectDescriptor scalar, IEmitter context) Parameters scalar IObjectDescriptor context IEmitter VisitSequenceStart(IObjectDescriptor, Type, IEmitter) public override void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, IEmitter context) Parameters sequence IObjectDescriptor elementType Type context IEmitter"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.ChainedObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.ChainedObjectGraphVisitor.html",
    "title": "Class ChainedObjectGraphVisitor | Mots Glissés",
    "keywords": "Class ChainedObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public abstract class ChainedObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Derived AnchorAssigningObjectGraphVisitor CommentsObjectGraphVisitor CustomSerializationObjectGraphVisitor DefaultExclusiveObjectGraphVisitor DefaultValuesObjectGraphVisitor Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ChainedObjectGraphVisitor(IObjectGraphVisitor<IEmitter>) protected ChainedObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor) Parameters nextVisitor IObjectGraphVisitor<IEmitter> Methods Enter(IObjectDescriptor, IEmitter) public virtual bool Enter(IObjectDescriptor value, IEmitter context) Parameters value IObjectDescriptor context IEmitter Returns bool EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) public virtual bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IObjectDescriptor value IObjectDescriptor context IEmitter Returns bool EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) public virtual bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IPropertyDescriptor value IObjectDescriptor context IEmitter Returns bool VisitMappingEnd(IObjectDescriptor, IEmitter) public virtual void VisitMappingEnd(IObjectDescriptor mapping, IEmitter context) Parameters mapping IObjectDescriptor context IEmitter VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) public virtual void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, IEmitter context) Parameters mapping IObjectDescriptor keyType Type valueType Type context IEmitter VisitScalar(IObjectDescriptor, IEmitter) public virtual void VisitScalar(IObjectDescriptor scalar, IEmitter context) Parameters scalar IObjectDescriptor context IEmitter VisitSequenceEnd(IObjectDescriptor, IEmitter) public virtual void VisitSequenceEnd(IObjectDescriptor sequence, IEmitter context) Parameters sequence IObjectDescriptor context IEmitter VisitSequenceStart(IObjectDescriptor, Type, IEmitter) public virtual void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, IEmitter context) Parameters sequence IObjectDescriptor elementType Type context IEmitter"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.CommentsObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.CommentsObjectGraphVisitor.html",
    "title": "Class CommentsObjectGraphVisitor | Mots Glissés",
    "keywords": "Class CommentsObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class CommentsObjectGraphVisitor : ChainedObjectGraphVisitor, IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor CommentsObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members ChainedObjectGraphVisitor.Enter(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitScalar(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) ChainedObjectGraphVisitor.VisitMappingEnd(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitSequenceStart(IObjectDescriptor, Type, IEmitter) ChainedObjectGraphVisitor.VisitSequenceEnd(IObjectDescriptor, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter>) public CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor) Parameters nextVisitor IObjectGraphVisitor<IEmitter> Methods EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IPropertyDescriptor value IObjectDescriptor context IEmitter Returns bool"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.CustomSerializationObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.CustomSerializationObjectGraphVisitor.html",
    "title": "Class CustomSerializationObjectGraphVisitor | Mots Glissés",
    "keywords": "Class CustomSerializationObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class CustomSerializationObjectGraphVisitor : ChainedObjectGraphVisitor, IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor CustomSerializationObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members ChainedObjectGraphVisitor.EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitScalar(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) ChainedObjectGraphVisitor.VisitMappingEnd(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitSequenceStart(IObjectDescriptor, Type, IEmitter) ChainedObjectGraphVisitor.VisitSequenceEnd(IObjectDescriptor, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CustomSerializationObjectGraphVisitor(IObjectGraphVisitor<IEmitter>, IEnumerable<IYamlTypeConverter>, ObjectSerializer) public CustomSerializationObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor, IEnumerable<IYamlTypeConverter> typeConverters, ObjectSerializer nestedObjectSerializer) Parameters nextVisitor IObjectGraphVisitor<IEmitter> typeConverters IEnumerable<IYamlTypeConverter> nestedObjectSerializer ObjectSerializer Methods Enter(IObjectDescriptor, IEmitter) public override bool Enter(IObjectDescriptor value, IEmitter context) Parameters value IObjectDescriptor context IEmitter Returns bool"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.DefaultExclusiveObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.DefaultExclusiveObjectGraphVisitor.html",
    "title": "Class DefaultExclusiveObjectGraphVisitor | Mots Glissés",
    "keywords": "Class DefaultExclusiveObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class DefaultExclusiveObjectGraphVisitor : ChainedObjectGraphVisitor, IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor DefaultExclusiveObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members ChainedObjectGraphVisitor.Enter(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitScalar(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) ChainedObjectGraphVisitor.VisitMappingEnd(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitSequenceStart(IObjectDescriptor, Type, IEmitter) ChainedObjectGraphVisitor.VisitSequenceEnd(IObjectDescriptor, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultExclusiveObjectGraphVisitor(IObjectGraphVisitor<IEmitter>) public DefaultExclusiveObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor) Parameters nextVisitor IObjectGraphVisitor<IEmitter> Methods EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) public override bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IObjectDescriptor value IObjectDescriptor context IEmitter Returns bool EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IPropertyDescriptor value IObjectDescriptor context IEmitter Returns bool"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.DefaultValuesObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.DefaultValuesObjectGraphVisitor.html",
    "title": "Class DefaultValuesObjectGraphVisitor | Mots Glissés",
    "keywords": "Class DefaultValuesObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class DefaultValuesObjectGraphVisitor : ChainedObjectGraphVisitor, IObjectGraphVisitor<IEmitter> Inheritance object ChainedObjectGraphVisitor DefaultValuesObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members ChainedObjectGraphVisitor.Enter(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.EnterMapping(IObjectDescriptor, IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitScalar(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitMappingStart(IObjectDescriptor, Type, Type, IEmitter) ChainedObjectGraphVisitor.VisitMappingEnd(IObjectDescriptor, IEmitter) ChainedObjectGraphVisitor.VisitSequenceStart(IObjectDescriptor, Type, IEmitter) ChainedObjectGraphVisitor.VisitSequenceEnd(IObjectDescriptor, IEmitter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultValuesObjectGraphVisitor(DefaultValuesHandling, IObjectGraphVisitor<IEmitter>, IObjectFactory) public DefaultValuesObjectGraphVisitor(DefaultValuesHandling handling, IObjectGraphVisitor<IEmitter> nextVisitor, IObjectFactory factory) Parameters handling DefaultValuesHandling nextVisitor IObjectGraphVisitor<IEmitter> factory IObjectFactory Methods EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters key IPropertyDescriptor value IObjectDescriptor context IEmitter Returns bool"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.EmittingObjectGraphVisitor.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.EmittingObjectGraphVisitor.html",
    "title": "Class EmittingObjectGraphVisitor | Mots Glissés",
    "keywords": "Class EmittingObjectGraphVisitor Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public sealed class EmittingObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Inheritance object EmittingObjectGraphVisitor Implements IObjectGraphVisitor<IEmitter> Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors EmittingObjectGraphVisitor(IEventEmitter) public EmittingObjectGraphVisitor(IEventEmitter eventEmitter) Parameters eventEmitter IEventEmitter"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.PreProcessingPhaseObjectGraphVisitorSkeleton.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.PreProcessingPhaseObjectGraphVisitorSkeleton.html",
    "title": "Class PreProcessingPhaseObjectGraphVisitorSkeleton | Mots Glissés",
    "keywords": "Class PreProcessingPhaseObjectGraphVisitorSkeleton Namespace YamlDotNet.Serialization.ObjectGraphVisitors Assembly YamlDotNet.dll public abstract class PreProcessingPhaseObjectGraphVisitorSkeleton : IObjectGraphVisitor<Nothing> Inheritance object PreProcessingPhaseObjectGraphVisitorSkeleton Implements IObjectGraphVisitor<Nothing> Derived AnchorAssigner Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PreProcessingPhaseObjectGraphVisitorSkeleton(IEnumerable<IYamlTypeConverter>) public PreProcessingPhaseObjectGraphVisitorSkeleton(IEnumerable<IYamlTypeConverter> typeConverters) Parameters typeConverters IEnumerable<IYamlTypeConverter> Fields typeConverters protected readonly IEnumerable<IYamlTypeConverter> typeConverters Field Value IEnumerable<IYamlTypeConverter> Methods Enter(IObjectDescriptor) protected abstract bool Enter(IObjectDescriptor value) Parameters value IObjectDescriptor Returns bool EnterMapping(IObjectDescriptor, IObjectDescriptor) protected abstract bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value) Parameters key IObjectDescriptor value IObjectDescriptor Returns bool EnterMapping(IPropertyDescriptor, IObjectDescriptor) protected abstract bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value) Parameters key IPropertyDescriptor value IObjectDescriptor Returns bool VisitMappingEnd(IObjectDescriptor) protected abstract void VisitMappingEnd(IObjectDescriptor mapping) Parameters mapping IObjectDescriptor VisitMappingStart(IObjectDescriptor, Type, Type) protected abstract void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType) Parameters mapping IObjectDescriptor keyType Type valueType Type VisitScalar(IObjectDescriptor) protected abstract void VisitScalar(IObjectDescriptor scalar) Parameters scalar IObjectDescriptor VisitSequenceEnd(IObjectDescriptor) protected abstract void VisitSequenceEnd(IObjectDescriptor sequence) Parameters sequence IObjectDescriptor VisitSequenceStart(IObjectDescriptor, Type) protected abstract void VisitSequenceStart(IObjectDescriptor sequence, Type elementType) Parameters sequence IObjectDescriptor elementType Type"
  },
  "api/YamlDotNet.Serialization.ObjectGraphVisitors.html": {
    "href": "api/YamlDotNet.Serialization.ObjectGraphVisitors.html",
    "title": "Namespace YamlDotNet.Serialization.ObjectGraphVisitors | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.ObjectGraphVisitors Classes AnchorAssigner AnchorAssigningObjectGraphVisitor ChainedObjectGraphVisitor CommentsObjectGraphVisitor CustomSerializationObjectGraphVisitor DefaultExclusiveObjectGraphVisitor DefaultValuesObjectGraphVisitor EmittingObjectGraphVisitor PreProcessingPhaseObjectGraphVisitorSkeleton"
  },
  "api/YamlDotNet.Serialization.ObjectSerializer.html": {
    "href": "api/YamlDotNet.Serialization.ObjectSerializer.html",
    "title": "Delegate ObjectSerializer | Mots Glissés",
    "keywords": "Delegate ObjectSerializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public delegate void ObjectSerializer(object? value, Type? type = null) Parameters value object type Type Constructors ObjectSerializer(object, nint) public ObjectSerializer(object @object, nint method) Parameters object object method nint Methods BeginInvoke(object?, Type?, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(object? value, Type? type, AsyncCallback callback, object @object) Parameters value object type Type callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(object?, Type?) public virtual void Invoke(object? value, Type? type = null) Parameters value object type Type"
  },
  "api/YamlDotNet.Serialization.PropertyDescriptor.html": {
    "href": "api/YamlDotNet.Serialization.PropertyDescriptor.html",
    "title": "Class PropertyDescriptor | Mots Glissés",
    "keywords": "Class PropertyDescriptor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class PropertyDescriptor : IPropertyDescriptor Inheritance object PropertyDescriptor Implements IPropertyDescriptor Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PropertyDescriptor(IPropertyDescriptor) public PropertyDescriptor(IPropertyDescriptor baseDescriptor) Parameters baseDescriptor IPropertyDescriptor Properties CanWrite public bool CanWrite { get; } Property Value bool Name public string Name { get; set; } Property Value string Order public int Order { get; set; } Property Value int ScalarStyle public ScalarStyle ScalarStyle { get; set; } Property Value ScalarStyle Type public Type Type { get; } Property Value Type TypeOverride public Type? TypeOverride { get; set; } Property Value Type Methods GetCustomAttribute<T>() public T? GetCustomAttribute<T>() where T : Attribute Returns T Type Parameters T Read(object) public IObjectDescriptor Read(object target) Parameters target object Returns IObjectDescriptor Write(object, object?) public void Write(object target, object? value) Parameters target object value object"
  },
  "api/YamlDotNet.Serialization.ScalarEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.ScalarEventInfo.html",
    "title": "Class ScalarEventInfo | Mots Glissés",
    "keywords": "Class ScalarEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class ScalarEventInfo : ObjectEventInfo Inheritance object EventInfo ObjectEventInfo ScalarEventInfo Inherited Members ObjectEventInfo.Anchor ObjectEventInfo.Tag EventInfo.Source object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ScalarEventInfo(IObjectDescriptor) public ScalarEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor Properties IsPlainImplicit public bool IsPlainImplicit { get; set; } Property Value bool IsQuotedImplicit public bool IsQuotedImplicit { get; set; } Property Value bool RenderedValue public string RenderedValue { get; set; } Property Value string Style public ScalarStyle Style { get; set; } Property Value ScalarStyle"
  },
  "api/YamlDotNet.Serialization.Schemas.CoreSchema.Tags.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.CoreSchema.Tags.html",
    "title": "Class CoreSchema.Tags | Mots Glissés",
    "keywords": "Class CoreSchema.Tags Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public static class CoreSchema.Tags Inheritance object CoreSchema.Tags Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode()"
  },
  "api/YamlDotNet.Serialization.Schemas.CoreSchema.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.CoreSchema.html",
    "title": "Class CoreSchema | Mots Glissés",
    "keywords": "Class CoreSchema Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public sealed class CoreSchema Inheritance object CoreSchema Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CoreSchema() public CoreSchema()"
  },
  "api/YamlDotNet.Serialization.Schemas.DefaultSchema.Tags.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.DefaultSchema.Tags.html",
    "title": "Class DefaultSchema.Tags | Mots Glissés",
    "keywords": "Class DefaultSchema.Tags Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public static class DefaultSchema.Tags Inheritance object DefaultSchema.Tags Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Timestamp public static readonly TagName Timestamp Field Value TagName"
  },
  "api/YamlDotNet.Serialization.Schemas.DefaultSchema.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.DefaultSchema.html",
    "title": "Class DefaultSchema | Mots Glissés",
    "keywords": "Class DefaultSchema Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public sealed class DefaultSchema Inheritance object DefaultSchema Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DefaultSchema() public DefaultSchema()"
  },
  "api/YamlDotNet.Serialization.Schemas.FailsafeSchema.Tags.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.FailsafeSchema.Tags.html",
    "title": "Class FailsafeSchema.Tags | Mots Glissés",
    "keywords": "Class FailsafeSchema.Tags Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public static class FailsafeSchema.Tags Inheritance object FailsafeSchema.Tags Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Map public static readonly TagName Map Field Value TagName Seq public static readonly TagName Seq Field Value TagName Str public static readonly TagName Str Field Value TagName"
  },
  "api/YamlDotNet.Serialization.Schemas.FailsafeSchema.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.FailsafeSchema.html",
    "title": "Class FailsafeSchema | Mots Glissés",
    "keywords": "Class FailsafeSchema Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public sealed class FailsafeSchema Inheritance object FailsafeSchema Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors FailsafeSchema() public FailsafeSchema()"
  },
  "api/YamlDotNet.Serialization.Schemas.JsonSchema.Tags.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.JsonSchema.Tags.html",
    "title": "Class JsonSchema.Tags | Mots Glissés",
    "keywords": "Class JsonSchema.Tags Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public static class JsonSchema.Tags Inheritance object JsonSchema.Tags Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Bool public static readonly TagName Bool Field Value TagName Float public static readonly TagName Float Field Value TagName Int public static readonly TagName Int Field Value TagName Null public static readonly TagName Null Field Value TagName"
  },
  "api/YamlDotNet.Serialization.Schemas.JsonSchema.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.JsonSchema.html",
    "title": "Class JsonSchema | Mots Glissés",
    "keywords": "Class JsonSchema Namespace YamlDotNet.Serialization.Schemas Assembly YamlDotNet.dll public sealed class JsonSchema Inheritance object JsonSchema Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors JsonSchema() public JsonSchema()"
  },
  "api/YamlDotNet.Serialization.Schemas.html": {
    "href": "api/YamlDotNet.Serialization.Schemas.html",
    "title": "Namespace YamlDotNet.Serialization.Schemas | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.Schemas Classes CoreSchema CoreSchema.Tags DefaultSchema DefaultSchema.Tags FailsafeSchema FailsafeSchema.Tags JsonSchema JsonSchema.Tags"
  },
  "api/YamlDotNet.Serialization.SequenceEndEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.SequenceEndEventInfo.html",
    "title": "Class SequenceEndEventInfo | Mots Glissés",
    "keywords": "Class SequenceEndEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class SequenceEndEventInfo : EventInfo Inheritance object EventInfo SequenceEndEventInfo Inherited Members EventInfo.Source object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequenceEndEventInfo(IObjectDescriptor) public SequenceEndEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor"
  },
  "api/YamlDotNet.Serialization.SequenceStartEventInfo.html": {
    "href": "api/YamlDotNet.Serialization.SequenceStartEventInfo.html",
    "title": "Class SequenceStartEventInfo | Mots Glissés",
    "keywords": "Class SequenceStartEventInfo Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class SequenceStartEventInfo : ObjectEventInfo Inheritance object EventInfo ObjectEventInfo SequenceStartEventInfo Inherited Members ObjectEventInfo.Anchor ObjectEventInfo.Tag EventInfo.Source object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SequenceStartEventInfo(IObjectDescriptor) public SequenceStartEventInfo(IObjectDescriptor source) Parameters source IObjectDescriptor Properties IsImplicit public bool IsImplicit { get; set; } Property Value bool Style public SequenceStyle Style { get; set; } Property Value SequenceStyle"
  },
  "api/YamlDotNet.Serialization.Serializer.html": {
    "href": "api/YamlDotNet.Serialization.Serializer.html",
    "title": "Class Serializer | Mots Glissés",
    "keywords": "Class Serializer Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class Serializer : ISerializer Inheritance object Serializer Implements ISerializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Serializer() public Serializer() Methods FromValueSerializer(IValueSerializer, EmitterSettings) public static Serializer FromValueSerializer(IValueSerializer valueSerializer, EmitterSettings emitterSettings) Parameters valueSerializer IValueSerializer emitterSettings EmitterSettings Returns Serializer Serialize(TextWriter, object?) public void Serialize(TextWriter writer, object? graph) Parameters writer TextWriter graph object Serialize(TextWriter, object?, Type) public void Serialize(TextWriter writer, object? graph, Type type) Parameters writer TextWriter graph object type Type Serialize(object?) public string Serialize(object? graph) Parameters graph object Returns string Serialize(object?, Type) public string Serialize(object? graph, Type type) Parameters graph object type Type Returns string Serialize(IEmitter, object?) public void Serialize(IEmitter emitter, object? graph) Parameters emitter IEmitter graph object Serialize(IEmitter, object?, Type) public void Serialize(IEmitter emitter, object? graph, Type type) Parameters emitter IEmitter graph object type Type"
  },
  "api/YamlDotNet.Serialization.SerializerBuilder.html": {
    "href": "api/YamlDotNet.Serialization.SerializerBuilder.html",
    "title": "Class SerializerBuilder | Mots Glissés",
    "keywords": "Class SerializerBuilder Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class SerializerBuilder : BuilderSkeleton<SerializerBuilder> Inheritance object BuilderSkeleton<SerializerBuilder> SerializerBuilder Inherited Members BuilderSkeleton<SerializerBuilder>.IgnoreFields() BuilderSkeleton<SerializerBuilder>.IncludeNonPublicProperties() BuilderSkeleton<SerializerBuilder>.EnablePrivateConstructors() BuilderSkeleton<SerializerBuilder>.WithNamingConvention(INamingConvention) BuilderSkeleton<SerializerBuilder>.WithTypeResolver(ITypeResolver) BuilderSkeleton<SerializerBuilder>.WithAttributeOverride<TClass>(Expression<Func<TClass, object>>, Attribute) BuilderSkeleton<SerializerBuilder>.WithAttributeOverride(Type, string, Attribute) BuilderSkeleton<SerializerBuilder>.WithTypeConverter(IYamlTypeConverter) BuilderSkeleton<SerializerBuilder>.WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) BuilderSkeleton<SerializerBuilder>.WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) BuilderSkeleton<SerializerBuilder>.WithoutTypeConverter<TYamlTypeConverter>() BuilderSkeleton<SerializerBuilder>.WithoutTypeConverter(Type) BuilderSkeleton<SerializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) BuilderSkeleton<SerializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) BuilderSkeleton<SerializerBuilder>.WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) BuilderSkeleton<SerializerBuilder>.WithoutTypeInspector<TTypeInspector>() BuilderSkeleton<SerializerBuilder>.WithoutTypeInspector(Type) BuilderSkeleton<SerializerBuilder>.WithYamlFormatter(YamlFormatter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SerializerBuilder() public SerializerBuilder() Properties Self protected override SerializerBuilder Self { get; } Property Value SerializerBuilder Methods Build() public ISerializer Build() Returns ISerializer BuildValueSerializer() public IValueSerializer BuildValueSerializer() Returns IValueSerializer ConfigureDefaultValuesHandling(DefaultValuesHandling) public SerializerBuilder ConfigureDefaultValuesHandling(DefaultValuesHandling configuration) Parameters configuration DefaultValuesHandling Returns SerializerBuilder DisableAliases() public SerializerBuilder DisableAliases() Returns SerializerBuilder EmitDefaults() [Obsolete(\"The default behavior is now to always emit default values, thefore calling this method has no effect. This behavior is now controlled by ConfigureDefaultValuesHandling.\", true)] public SerializerBuilder EmitDefaults() Returns SerializerBuilder EnsureRoundtrip() public SerializerBuilder EnsureRoundtrip() Returns SerializerBuilder JsonCompatible() public SerializerBuilder JsonCompatible() Returns SerializerBuilder WithDefaultScalarStyle(ScalarStyle) public SerializerBuilder WithDefaultScalarStyle(ScalarStyle style) Parameters style ScalarStyle Returns SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor>) public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor>, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>>) public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> where Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor>, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>>) public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> where Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter>) public SerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory Func<IEventEmitter, TEventEmitter> Returns SerializerBuilder Type Parameters TEventEmitter WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter>, Action<IRegistrationLocationSelectionSyntax<IEventEmitter>>) public SerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory, Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory Func<IEventEmitter, TEventEmitter> where Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> Returns SerializerBuilder Type Parameters TEventEmitter WithEventEmitter<TEventEmitter>(WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter>, Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>>) public SerializerBuilder WithEventEmitter<TEventEmitter>(WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> eventEmitterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> where Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>> Returns SerializerBuilder Type Parameters TEventEmitter WithIndentedSequences() public SerializerBuilder WithIndentedSequences() Returns SerializerBuilder WithMaximumRecursion(int) public SerializerBuilder WithMaximumRecursion(int maximumRecursion) Parameters maximumRecursion int Returns SerializerBuilder WithNewLine(string) public SerializerBuilder WithNewLine(string newLine) Parameters newLine string Returns SerializerBuilder WithObjectGraphTraversalStrategyFactory(ObjectGraphTraversalStrategyFactory) public SerializerBuilder WithObjectGraphTraversalStrategyFactory(ObjectGraphTraversalStrategyFactory objectGraphTraversalStrategyFactory) Parameters objectGraphTraversalStrategyFactory ObjectGraphTraversalStrategyFactory Returns SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor>, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>>) public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitorFactory WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> where Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor) public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitor TObjectGraphVisitor Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>>) public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitor TObjectGraphVisitor where Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithQuotingNecessaryStrings(bool) public SerializerBuilder WithQuotingNecessaryStrings(bool quoteYaml1_1Strings = false) Parameters quoteYaml1_1Strings bool Returns SerializerBuilder WithTagMapping(TagName, Type) public override SerializerBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor(Type) public SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor(Type objectGraphVisitorType) Parameters objectGraphVisitorType Type Returns SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>() public SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithoutEventEmitter(Type) public SerializerBuilder WithoutEventEmitter(Type eventEmitterType) Parameters eventEmitterType Type Returns SerializerBuilder WithoutEventEmitter<TEventEmitter>() public SerializerBuilder WithoutEventEmitter<TEventEmitter>() where TEventEmitter : IEventEmitter Returns SerializerBuilder Type Parameters TEventEmitter WithoutPreProcessingPhaseObjectGraphVisitor(Type) public SerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor(Type objectGraphVisitorType) Parameters objectGraphVisitorType Type Returns SerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>() public SerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Returns SerializerBuilder Type Parameters TObjectGraphVisitor WithoutTagMapping(Type) public SerializerBuilder WithoutTagMapping(Type type) Parameters type Type Returns SerializerBuilder"
  },
  "api/YamlDotNet.Serialization.Settings.html": {
    "href": "api/YamlDotNet.Serialization.Settings.html",
    "title": "Class Settings | Mots Glissés",
    "keywords": "Class Settings Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public class Settings Inheritance object Settings Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Settings() public Settings() Properties AllowPrivateConstructors public bool AllowPrivateConstructors { get; set; } Property Value bool"
  },
  "api/YamlDotNet.Serialization.StaticBuilderSkeleton-1.html": {
    "href": "api/YamlDotNet.Serialization.StaticBuilderSkeleton-1.html",
    "title": "Class StaticBuilderSkeleton<TBuilder> | Mots Glissés",
    "keywords": "Class StaticBuilderSkeleton<TBuilder> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public abstract class StaticBuilderSkeleton<TBuilder> where TBuilder : StaticBuilderSkeleton<TBuilder> Type Parameters TBuilder Inheritance object StaticBuilderSkeleton<TBuilder> Derived StaticDeserializerBuilder StaticSerializerBuilder Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Self protected abstract TBuilder Self { get; } Property Value TBuilder Methods BuildTypeConverters() protected IEnumerable<IYamlTypeConverter> BuildTypeConverters() Returns IEnumerable<IYamlTypeConverter> WithNamingConvention(INamingConvention) public TBuilder WithNamingConvention(INamingConvention namingConvention) Parameters namingConvention INamingConvention Returns TBuilder WithTagMapping(TagName, Type) public abstract TBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns TBuilder WithTypeConverter(IYamlTypeConverter) public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter) Parameters typeConverter IYamlTypeConverter Returns TBuilder WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where) Parameters typeConverter IYamlTypeConverter where Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> Returns TBuilder WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) public TBuilder WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> typeConverterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where) where TYamlTypeConverter : IYamlTypeConverter Parameters typeConverterFactory WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> where Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>> Returns TBuilder Type Parameters TYamlTypeConverter WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory Func<ITypeInspector, TTypeInspector> Returns TBuilder Type Parameters TTypeInspector WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory Func<ITypeInspector, TTypeInspector> where Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> Returns TBuilder Type Parameters TTypeInspector WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) public TBuilder WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> typeInspectorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector Parameters typeInspectorFactory WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> where Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>> Returns TBuilder Type Parameters TTypeInspector WithTypeResolver(ITypeResolver) public TBuilder WithTypeResolver(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver Returns TBuilder WithYamlFormatter(YamlFormatter) public TBuilder WithYamlFormatter(YamlFormatter formatter) Parameters formatter YamlFormatter Returns TBuilder WithoutTypeConverter(Type) public TBuilder WithoutTypeConverter(Type converterType) Parameters converterType Type Returns TBuilder WithoutTypeConverter<TYamlTypeConverter>() public TBuilder WithoutTypeConverter<TYamlTypeConverter>() where TYamlTypeConverter : IYamlTypeConverter Returns TBuilder Type Parameters TYamlTypeConverter WithoutTypeInspector(Type) public TBuilder WithoutTypeInspector(Type inspectorType) Parameters inspectorType Type Returns TBuilder WithoutTypeInspector<TTypeInspector>() public TBuilder WithoutTypeInspector<TTypeInspector>() where TTypeInspector : ITypeInspector Returns TBuilder Type Parameters TTypeInspector"
  },
  "api/YamlDotNet.Serialization.StaticContext.html": {
    "href": "api/YamlDotNet.Serialization.StaticContext.html",
    "title": "Class StaticContext | Mots Glissés",
    "keywords": "Class StaticContext Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public abstract class StaticContext Inheritance object StaticContext Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticContext() protected StaticContext() Methods GetFactory() public virtual StaticObjectFactory GetFactory() Returns StaticObjectFactory GetTypeInspector() public virtual ITypeInspector GetTypeInspector() Returns ITypeInspector GetTypeResolver() public virtual ITypeResolver GetTypeResolver() Returns ITypeResolver IsKnownType(Type) public virtual bool IsKnownType(Type type) Parameters type Type Returns bool"
  },
  "api/YamlDotNet.Serialization.StaticDeserializerBuilder.html": {
    "href": "api/YamlDotNet.Serialization.StaticDeserializerBuilder.html",
    "title": "Class StaticDeserializerBuilder | Mots Glissés",
    "keywords": "Class StaticDeserializerBuilder Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class StaticDeserializerBuilder : StaticBuilderSkeleton<StaticDeserializerBuilder> Inheritance object StaticBuilderSkeleton<StaticDeserializerBuilder> StaticDeserializerBuilder Inherited Members StaticBuilderSkeleton<StaticDeserializerBuilder>.WithNamingConvention(INamingConvention) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeResolver(ITypeResolver) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeConverter(IYamlTypeConverter) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithoutTypeConverter<TYamlTypeConverter>() StaticBuilderSkeleton<StaticDeserializerBuilder>.WithoutTypeConverter(Type) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithoutTypeInspector<TTypeInspector>() StaticBuilderSkeleton<StaticDeserializerBuilder>.WithoutTypeInspector(Type) StaticBuilderSkeleton<StaticDeserializerBuilder>.WithYamlFormatter(YamlFormatter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticDeserializerBuilder(StaticContext) public StaticDeserializerBuilder(StaticContext context) Parameters context StaticContext Properties Self protected override StaticDeserializerBuilder Self { get; } Property Value StaticDeserializerBuilder Methods Build() public IDeserializer Build() Returns IDeserializer BuildValueDeserializer() public IValueDeserializer BuildValueDeserializer() Returns IValueDeserializer IgnoreUnmatchedProperties() public StaticDeserializerBuilder IgnoreUnmatchedProperties() Returns StaticDeserializerBuilder WithAttemptingUnquotedStringTypeDeserialization() public StaticDeserializerBuilder WithAttemptingUnquotedStringTypeDeserialization() Returns StaticDeserializerBuilder WithDuplicateKeyChecking() public StaticDeserializerBuilder WithDuplicateKeyChecking() Returns StaticDeserializerBuilder WithNodeDeserializer(INodeDeserializer) public StaticDeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer) Parameters nodeDeserializer INodeDeserializer Returns StaticDeserializerBuilder WithNodeDeserializer(INodeDeserializer, Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>>) public StaticDeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer, Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> where) Parameters nodeDeserializer INodeDeserializer where Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> Returns StaticDeserializerBuilder WithNodeDeserializer<TNodeDeserializer>(WrapperFactory<INodeDeserializer, TNodeDeserializer>, Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>>) public StaticDeserializerBuilder WithNodeDeserializer<TNodeDeserializer>(WrapperFactory<INodeDeserializer, TNodeDeserializer> nodeDeserializerFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>> where) where TNodeDeserializer : INodeDeserializer Parameters nodeDeserializerFactory WrapperFactory<INodeDeserializer, TNodeDeserializer> where Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>> Returns StaticDeserializerBuilder Type Parameters TNodeDeserializer WithNodeTypeResolver(INodeTypeResolver) public StaticDeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver) Parameters nodeTypeResolver INodeTypeResolver Returns StaticDeserializerBuilder WithNodeTypeResolver(INodeTypeResolver, Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>>) public StaticDeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver, Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> where) Parameters nodeTypeResolver INodeTypeResolver where Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> Returns StaticDeserializerBuilder WithNodeTypeResolver<TNodeTypeResolver>(WrapperFactory<INodeTypeResolver, TNodeTypeResolver>, Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>>) public StaticDeserializerBuilder WithNodeTypeResolver<TNodeTypeResolver>(WrapperFactory<INodeTypeResolver, TNodeTypeResolver> nodeTypeResolverFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>> where) where TNodeTypeResolver : INodeTypeResolver Parameters nodeTypeResolverFactory WrapperFactory<INodeTypeResolver, TNodeTypeResolver> where Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>> Returns StaticDeserializerBuilder Type Parameters TNodeTypeResolver WithTagMapping(TagName, Type) public override StaticDeserializerBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns StaticDeserializerBuilder WithTypeDiscriminatingNodeDeserializer(Action<ITypeDiscriminatingNodeDeserializerOptions>, int, int) public StaticDeserializerBuilder WithTypeDiscriminatingNodeDeserializer(Action<ITypeDiscriminatingNodeDeserializerOptions> configureTypeDiscriminatingNodeDeserializerOptions, int maxDepth = -1, int maxLength = -1) Parameters configureTypeDiscriminatingNodeDeserializerOptions Action<ITypeDiscriminatingNodeDeserializerOptions> maxDepth int maxLength int Returns StaticDeserializerBuilder WithTypeMapping<TInterface, TConcrete>() public StaticDeserializerBuilder WithTypeMapping<TInterface, TConcrete>() where TConcrete : TInterface Returns StaticDeserializerBuilder Type Parameters TInterface TConcrete WithoutNodeDeserializer(Type) public StaticDeserializerBuilder WithoutNodeDeserializer(Type nodeDeserializerType) Parameters nodeDeserializerType Type Returns StaticDeserializerBuilder WithoutNodeDeserializer<TNodeDeserializer>() public StaticDeserializerBuilder WithoutNodeDeserializer<TNodeDeserializer>() where TNodeDeserializer : INodeDeserializer Returns StaticDeserializerBuilder Type Parameters TNodeDeserializer WithoutNodeTypeResolver(Type) public StaticDeserializerBuilder WithoutNodeTypeResolver(Type nodeTypeResolverType) Parameters nodeTypeResolverType Type Returns StaticDeserializerBuilder WithoutNodeTypeResolver<TNodeTypeResolver>() public StaticDeserializerBuilder WithoutNodeTypeResolver<TNodeTypeResolver>() where TNodeTypeResolver : INodeTypeResolver Returns StaticDeserializerBuilder Type Parameters TNodeTypeResolver WithoutTagMapping(TagName) public StaticDeserializerBuilder WithoutTagMapping(TagName tag) Parameters tag TagName Returns StaticDeserializerBuilder"
  },
  "api/YamlDotNet.Serialization.StaticSerializerBuilder.html": {
    "href": "api/YamlDotNet.Serialization.StaticSerializerBuilder.html",
    "title": "Class StaticSerializerBuilder | Mots Glissés",
    "keywords": "Class StaticSerializerBuilder Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class StaticSerializerBuilder : StaticBuilderSkeleton<StaticSerializerBuilder> Inheritance object StaticBuilderSkeleton<StaticSerializerBuilder> StaticSerializerBuilder Inherited Members StaticBuilderSkeleton<StaticSerializerBuilder>.WithNamingConvention(INamingConvention) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeResolver(ITypeResolver) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeConverter(IYamlTypeConverter) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeConverter(IYamlTypeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter>, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>>) StaticBuilderSkeleton<StaticSerializerBuilder>.WithoutTypeConverter<TYamlTypeConverter>() StaticBuilderSkeleton<StaticSerializerBuilder>.WithoutTypeConverter(Type) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector>, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>>) StaticBuilderSkeleton<StaticSerializerBuilder>.WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector>, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>>) StaticBuilderSkeleton<StaticSerializerBuilder>.WithoutTypeInspector<TTypeInspector>() StaticBuilderSkeleton<StaticSerializerBuilder>.WithoutTypeInspector(Type) StaticBuilderSkeleton<StaticSerializerBuilder>.WithYamlFormatter(YamlFormatter) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticSerializerBuilder(StaticContext) public StaticSerializerBuilder(StaticContext context) Parameters context StaticContext Properties Self protected override StaticSerializerBuilder Self { get; } Property Value StaticSerializerBuilder Methods Build() public ISerializer Build() Returns ISerializer BuildValueSerializer() public IValueSerializer BuildValueSerializer() Returns IValueSerializer ConfigureDefaultValuesHandling(DefaultValuesHandling) public StaticSerializerBuilder ConfigureDefaultValuesHandling(DefaultValuesHandling configuration) Parameters configuration DefaultValuesHandling Returns StaticSerializerBuilder DisableAliases() public StaticSerializerBuilder DisableAliases() Returns StaticSerializerBuilder EmitDefaults() [Obsolete(\"The default behavior is now to always emit default values, thefore calling this method has no effect. This behavior is now controlled by ConfigureDefaultValuesHandling.\", true)] public StaticSerializerBuilder EmitDefaults() Returns StaticSerializerBuilder EnsureRoundtrip() public StaticSerializerBuilder EnsureRoundtrip() Returns StaticSerializerBuilder JsonCompatible() public StaticSerializerBuilder JsonCompatible() Returns StaticSerializerBuilder WithDefaultScalarStyle(ScalarStyle) public StaticSerializerBuilder WithDefaultScalarStyle(ScalarStyle style) Parameters style ScalarStyle Returns StaticSerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor>) public StaticSerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor>, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>>) public StaticSerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> where Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor>, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>>) public StaticSerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Parameters objectGraphVisitorFactory WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> where Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter>) public StaticSerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory Func<IEventEmitter, TEventEmitter> Returns StaticSerializerBuilder Type Parameters TEventEmitter WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter>, Action<IRegistrationLocationSelectionSyntax<IEventEmitter>>) public StaticSerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory, Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory Func<IEventEmitter, TEventEmitter> where Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> Returns StaticSerializerBuilder Type Parameters TEventEmitter WithEventEmitter<TEventEmitter>(WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter>, Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>>) public StaticSerializerBuilder WithEventEmitter<TEventEmitter>(WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> eventEmitterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter Parameters eventEmitterFactory WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> where Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>> Returns StaticSerializerBuilder Type Parameters TEventEmitter WithIndentedSequences() public StaticSerializerBuilder WithIndentedSequences() Returns StaticSerializerBuilder WithMaximumRecursion(int) public StaticSerializerBuilder WithMaximumRecursion(int maximumRecursion) Parameters maximumRecursion int Returns StaticSerializerBuilder WithNewLine(string) public StaticSerializerBuilder WithNewLine(string newLine) Parameters newLine string Returns StaticSerializerBuilder WithObjectGraphTraversalStrategyFactory(ObjectGraphTraversalStrategyFactory) public StaticSerializerBuilder WithObjectGraphTraversalStrategyFactory(ObjectGraphTraversalStrategyFactory objectGraphTraversalStrategyFactory) Parameters objectGraphTraversalStrategyFactory ObjectGraphTraversalStrategyFactory Returns StaticSerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor>, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>>) public StaticSerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitorFactory WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> where Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor) public StaticSerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitor TObjectGraphVisitor Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>>) public StaticSerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Parameters objectGraphVisitor TObjectGraphVisitor where Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithQuotingNecessaryStrings() public StaticSerializerBuilder WithQuotingNecessaryStrings() Returns StaticSerializerBuilder WithQuotingNecessaryStrings(bool) public StaticSerializerBuilder WithQuotingNecessaryStrings(bool quoteYaml1_1Strings = false) Parameters quoteYaml1_1Strings bool Returns StaticSerializerBuilder WithTagMapping(TagName, Type) public override StaticSerializerBuilder WithTagMapping(TagName tag, Type type) Parameters tag TagName type Type Returns StaticSerializerBuilder WithoutEmissionPhaseObjectGraphVisitor(Type) public StaticSerializerBuilder WithoutEmissionPhaseObjectGraphVisitor(Type objectGraphVisitorType) Parameters objectGraphVisitorType Type Returns StaticSerializerBuilder WithoutEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>() public StaticSerializerBuilder WithoutEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithoutEventEmitter(Type) public StaticSerializerBuilder WithoutEventEmitter(Type eventEmitterType) Parameters eventEmitterType Type Returns StaticSerializerBuilder WithoutEventEmitter<TEventEmitter>() public StaticSerializerBuilder WithoutEventEmitter<TEventEmitter>() where TEventEmitter : IEventEmitter Returns StaticSerializerBuilder Type Parameters TEventEmitter WithoutPreProcessingPhaseObjectGraphVisitor(Type) public StaticSerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor(Type objectGraphVisitorType) Parameters objectGraphVisitorType Type Returns StaticSerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>() public StaticSerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<Nothing> Returns StaticSerializerBuilder Type Parameters TObjectGraphVisitor WithoutTagMapping(Type) public StaticSerializerBuilder WithoutTagMapping(Type type) Parameters type Type Returns StaticSerializerBuilder"
  },
  "api/YamlDotNet.Serialization.StreamFragment.html": {
    "href": "api/YamlDotNet.Serialization.StreamFragment.html",
    "title": "Class StreamFragment | Mots Glissés",
    "keywords": "Class StreamFragment Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class StreamFragment : IYamlConvertible Inheritance object StreamFragment Implements IYamlConvertible Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StreamFragment() public StreamFragment() Properties Events public IList<ParsingEvent> Events { get; } Property Value IList<ParsingEvent>"
  },
  "api/YamlDotNet.Serialization.TagMappings.html": {
    "href": "api/YamlDotNet.Serialization.TagMappings.html",
    "title": "Class TagMappings | Mots Glissés",
    "keywords": "Class TagMappings Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class TagMappings Inheritance object TagMappings Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TagMappings() public TagMappings() TagMappings(IDictionary<string, Type>) public TagMappings(IDictionary<string, Type> mappings) Parameters mappings IDictionary<string, Type> Methods Add(string, Type) public void Add(string tag, Type mapping) Parameters tag string mapping Type"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.CachedTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.CachedTypeInspector.html",
    "title": "Class CachedTypeInspector | Mots Glissés",
    "keywords": "Class CachedTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class CachedTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton CachedTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CachedTypeInspector(ITypeInspector) public CachedTypeInspector(ITypeInspector innerTypeDescriptor) Parameters innerTypeDescriptor ITypeInspector Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.CompositeTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.CompositeTypeInspector.html",
    "title": "Class CompositeTypeInspector | Mots Glissés",
    "keywords": "Class CompositeTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class CompositeTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton CompositeTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CompositeTypeInspector(IEnumerable<ITypeInspector>) public CompositeTypeInspector(IEnumerable<ITypeInspector> typeInspectors) Parameters typeInspectors IEnumerable<ITypeInspector> CompositeTypeInspector(params ITypeInspector[]) public CompositeTypeInspector(params ITypeInspector[] typeInspectors) Parameters typeInspectors ITypeInspector[] Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.NamingConventionTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.NamingConventionTypeInspector.html",
    "title": "Class NamingConventionTypeInspector | Mots Glissés",
    "keywords": "Class NamingConventionTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class NamingConventionTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton NamingConventionTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NamingConventionTypeInspector(ITypeInspector, INamingConvention) public NamingConventionTypeInspector(ITypeInspector innerTypeDescriptor, INamingConvention namingConvention) Parameters innerTypeDescriptor ITypeInspector namingConvention INamingConvention Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.ReadableAndWritablePropertiesTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.ReadableAndWritablePropertiesTypeInspector.html",
    "title": "Class ReadableAndWritablePropertiesTypeInspector | Mots Glissés",
    "keywords": "Class ReadableAndWritablePropertiesTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class ReadableAndWritablePropertiesTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton ReadableAndWritablePropertiesTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReadableAndWritablePropertiesTypeInspector(ITypeInspector) public ReadableAndWritablePropertiesTypeInspector(ITypeInspector innerTypeDescriptor) Parameters innerTypeDescriptor ITypeInspector Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.ReadableFieldsTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.ReadableFieldsTypeInspector.html",
    "title": "Class ReadableFieldsTypeInspector | Mots Glissés",
    "keywords": "Class ReadableFieldsTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class ReadableFieldsTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton ReadableFieldsTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReadableFieldsTypeInspector(ITypeResolver) public ReadableFieldsTypeInspector(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.ReadablePropertiesTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.ReadablePropertiesTypeInspector.html",
    "title": "Class ReadablePropertiesTypeInspector | Mots Glissés",
    "keywords": "Class ReadablePropertiesTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class ReadablePropertiesTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton ReadablePropertiesTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReadablePropertiesTypeInspector(ITypeResolver) public ReadablePropertiesTypeInspector(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver ReadablePropertiesTypeInspector(ITypeResolver, bool) public ReadablePropertiesTypeInspector(ITypeResolver typeResolver, bool includeNonPublicProperties) Parameters typeResolver ITypeResolver includeNonPublicProperties bool Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.TypeInspectorSkeleton.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.TypeInspectorSkeleton.html",
    "title": "Class TypeInspectorSkeleton | Mots Glissés",
    "keywords": "Class TypeInspectorSkeleton Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public abstract class TypeInspectorSkeleton : ITypeInspector Inheritance object TypeInspectorSkeleton Implements ITypeInspector Derived CachedTypeInspector CompositeTypeInspector NamingConventionTypeInspector ReadableAndWritablePropertiesTypeInspector ReadableFieldsTypeInspector ReadablePropertiesTypeInspector WritablePropertiesTypeInspector YamlAttributeOverridesInspector YamlAttributesTypeInspector Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TypeInspectorSkeleton() protected TypeInspectorSkeleton() Methods GetProperties(Type, object?) public abstract IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor> GetProperty(Type, object?, string, bool) public IPropertyDescriptor GetProperty(Type type, object? container, string name, bool ignoreUnmatched) Parameters type Type container object name string ignoreUnmatched bool Returns IPropertyDescriptor"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.WritablePropertiesTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.WritablePropertiesTypeInspector.html",
    "title": "Class WritablePropertiesTypeInspector | Mots Glissés",
    "keywords": "Class WritablePropertiesTypeInspector Namespace YamlDotNet.Serialization.TypeInspectors Assembly YamlDotNet.dll public sealed class WritablePropertiesTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton WritablePropertiesTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors WritablePropertiesTypeInspector(ITypeResolver) public WritablePropertiesTypeInspector(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver WritablePropertiesTypeInspector(ITypeResolver, bool) public WritablePropertiesTypeInspector(ITypeResolver typeResolver, bool includeNonPublicProperties) Parameters typeResolver ITypeResolver includeNonPublicProperties bool Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.TypeInspectors.html": {
    "href": "api/YamlDotNet.Serialization.TypeInspectors.html",
    "title": "Namespace YamlDotNet.Serialization.TypeInspectors | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.TypeInspectors Classes CachedTypeInspector CompositeTypeInspector NamingConventionTypeInspector ReadableAndWritablePropertiesTypeInspector ReadableFieldsTypeInspector ReadablePropertiesTypeInspector TypeInspectorSkeleton WritablePropertiesTypeInspector"
  },
  "api/YamlDotNet.Serialization.TypeResolvers.DynamicTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.TypeResolvers.DynamicTypeResolver.html",
    "title": "Class DynamicTypeResolver | Mots Glissés",
    "keywords": "Class DynamicTypeResolver Namespace YamlDotNet.Serialization.TypeResolvers Assembly YamlDotNet.dll public sealed class DynamicTypeResolver : ITypeResolver Inheritance object DynamicTypeResolver Implements ITypeResolver Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DynamicTypeResolver() public DynamicTypeResolver() Methods Resolve(Type, object?) public Type Resolve(Type staticType, object? actualValue) Parameters staticType Type actualValue object Returns Type"
  },
  "api/YamlDotNet.Serialization.TypeResolvers.StaticTypeResolver.html": {
    "href": "api/YamlDotNet.Serialization.TypeResolvers.StaticTypeResolver.html",
    "title": "Class StaticTypeResolver | Mots Glissés",
    "keywords": "Class StaticTypeResolver Namespace YamlDotNet.Serialization.TypeResolvers Assembly YamlDotNet.dll public class StaticTypeResolver : ITypeResolver Inheritance object StaticTypeResolver Implements ITypeResolver Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors StaticTypeResolver() public StaticTypeResolver() Methods Resolve(Type, object?) public virtual Type Resolve(Type staticType, object? actualValue) Parameters staticType Type actualValue object Returns Type"
  },
  "api/YamlDotNet.Serialization.TypeResolvers.html": {
    "href": "api/YamlDotNet.Serialization.TypeResolvers.html",
    "title": "Namespace YamlDotNet.Serialization.TypeResolvers | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.TypeResolvers Classes DynamicTypeResolver StaticTypeResolver"
  },
  "api/YamlDotNet.Serialization.Utilities.IPostDeserializationCallback.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.IPostDeserializationCallback.html",
    "title": "Interface IPostDeserializationCallback | Mots Glissés",
    "keywords": "Interface IPostDeserializationCallback Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public interface IPostDeserializationCallback Methods OnDeserialization() void OnDeserialization()"
  },
  "api/YamlDotNet.Serialization.Utilities.ITypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.ITypeConverter.html",
    "title": "Interface ITypeConverter | Mots Glissés",
    "keywords": "Interface ITypeConverter Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public interface ITypeConverter Methods ChangeType(object?, Type) object? ChangeType(object? value, Type expectedType) Parameters value object expectedType Type Returns object"
  },
  "api/YamlDotNet.Serialization.Utilities.NullTypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.NullTypeConverter.html",
    "title": "Class NullTypeConverter | Mots Glissés",
    "keywords": "Class NullTypeConverter Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public class NullTypeConverter : ITypeConverter Inheritance object NullTypeConverter Implements ITypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NullTypeConverter() public NullTypeConverter() Methods ChangeType(object?, Type) public object? ChangeType(object? value, Type expectedType) Parameters value object expectedType Type Returns object"
  },
  "api/YamlDotNet.Serialization.Utilities.ReflectionTypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.ReflectionTypeConverter.html",
    "title": "Class ReflectionTypeConverter | Mots Glissés",
    "keywords": "Class ReflectionTypeConverter Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public class ReflectionTypeConverter : ITypeConverter Inheritance object ReflectionTypeConverter Implements ITypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ReflectionTypeConverter() public ReflectionTypeConverter() Methods ChangeType(object?, Type) public object? ChangeType(object? value, Type expectedType) Parameters value object expectedType Type Returns object"
  },
  "api/YamlDotNet.Serialization.Utilities.SerializerState.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.SerializerState.html",
    "title": "Class SerializerState | Mots Glissés",
    "keywords": "Class SerializerState Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public sealed class SerializerState : IDisposable Inheritance object SerializerState Implements IDisposable Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SerializerState() public SerializerState() Methods Dispose() public void Dispose() Get<T>() public T Get<T>() where T : class, new() Returns T Type Parameters T OnDeserialization() public void OnDeserialization()"
  },
  "api/YamlDotNet.Serialization.Utilities.TypeConverter.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.TypeConverter.html",
    "title": "Class TypeConverter | Mots Glissés",
    "keywords": "Class TypeConverter Namespace YamlDotNet.Serialization.Utilities Assembly YamlDotNet.dll public static class TypeConverter Inheritance object TypeConverter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ChangeType(object?, Type) public static object? ChangeType(object? value, Type destinationType) Parameters value object destinationType Type Returns object ChangeType(object?, Type, CultureInfo) public static object? ChangeType(object? value, Type destinationType, CultureInfo culture) Parameters value object destinationType Type culture CultureInfo Returns object ChangeType(object?, Type, IFormatProvider) public static object? ChangeType(object? value, Type destinationType, IFormatProvider provider) Parameters value object destinationType Type provider IFormatProvider Returns object ChangeType<T>(object?) public static T ChangeType<T>(object? value) Parameters value object Returns T Type Parameters T ChangeType<T>(object?, CultureInfo) public static T ChangeType<T>(object? value, CultureInfo culture) Parameters value object culture CultureInfo Returns T Type Parameters T ChangeType<T>(object?, IFormatProvider) public static T ChangeType<T>(object? value, IFormatProvider provider) Parameters value object provider IFormatProvider Returns T Type Parameters T RegisterTypeConverter<TConvertible, TConverter>() public static void RegisterTypeConverter<TConvertible, TConverter>() where TConverter : TypeConverter Type Parameters TConvertible TConverter"
  },
  "api/YamlDotNet.Serialization.Utilities.html": {
    "href": "api/YamlDotNet.Serialization.Utilities.html",
    "title": "Namespace YamlDotNet.Serialization.Utilities | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.Utilities Classes NullTypeConverter ReflectionTypeConverter SerializerState TypeConverter Interfaces IPostDeserializationCallback ITypeConverter"
  },
  "api/YamlDotNet.Serialization.ValueDeserializers.AliasValueDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.ValueDeserializers.AliasValueDeserializer.html",
    "title": "Class AliasValueDeserializer | Mots Glissés",
    "keywords": "Class AliasValueDeserializer Namespace YamlDotNet.Serialization.ValueDeserializers Assembly YamlDotNet.dll public sealed class AliasValueDeserializer : IValueDeserializer Inheritance object AliasValueDeserializer Implements IValueDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AliasValueDeserializer(IValueDeserializer) public AliasValueDeserializer(IValueDeserializer innerDeserializer) Parameters innerDeserializer IValueDeserializer Methods DeserializeValue(IParser, Type, SerializerState, IValueDeserializer) public object? DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer) Parameters parser IParser expectedType Type state SerializerState nestedObjectDeserializer IValueDeserializer Returns object"
  },
  "api/YamlDotNet.Serialization.ValueDeserializers.NodeValueDeserializer.html": {
    "href": "api/YamlDotNet.Serialization.ValueDeserializers.NodeValueDeserializer.html",
    "title": "Class NodeValueDeserializer | Mots Glissés",
    "keywords": "Class NodeValueDeserializer Namespace YamlDotNet.Serialization.ValueDeserializers Assembly YamlDotNet.dll public sealed class NodeValueDeserializer : IValueDeserializer Inheritance object NodeValueDeserializer Implements IValueDeserializer Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors NodeValueDeserializer(IList<INodeDeserializer>, IList<INodeTypeResolver>, ITypeConverter) public NodeValueDeserializer(IList<INodeDeserializer> deserializers, IList<INodeTypeResolver> typeResolvers, ITypeConverter typeConverter) Parameters deserializers IList<INodeDeserializer> typeResolvers IList<INodeTypeResolver> typeConverter ITypeConverter Methods DeserializeValue(IParser, Type, SerializerState, IValueDeserializer) public object? DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer) Parameters parser IParser expectedType Type state SerializerState nestedObjectDeserializer IValueDeserializer Returns object"
  },
  "api/YamlDotNet.Serialization.ValueDeserializers.html": {
    "href": "api/YamlDotNet.Serialization.ValueDeserializers.html",
    "title": "Namespace YamlDotNet.Serialization.ValueDeserializers | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization.ValueDeserializers Classes AliasValueDeserializer NodeValueDeserializer"
  },
  "api/YamlDotNet.Serialization.WrapperFactory-2.html": {
    "href": "api/YamlDotNet.Serialization.WrapperFactory-2.html",
    "title": "Delegate WrapperFactory<TComponentBase, TComponent> | Mots Glissés",
    "keywords": "Delegate WrapperFactory<TComponentBase, TComponent> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public delegate TComponent WrapperFactory<TComponentBase, TComponent>(TComponentBase wrapped) where TComponent : TComponentBase Parameters wrapped TComponentBase Returns TComponent Type Parameters TComponentBase TComponent Constructors WrapperFactory(object, nint) public WrapperFactory(object @object, nint method) Parameters object object method nint Methods BeginInvoke(TComponentBase, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(TComponentBase wrapped, AsyncCallback callback, object @object) Parameters wrapped TComponentBase callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual TComponent EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns TComponent Invoke(TComponentBase) public virtual TComponent Invoke(TComponentBase wrapped) Parameters wrapped TComponentBase Returns TComponent"
  },
  "api/YamlDotNet.Serialization.WrapperFactory-3.html": {
    "href": "api/YamlDotNet.Serialization.WrapperFactory-3.html",
    "title": "Delegate WrapperFactory<TArgument, TComponentBase, TComponent> | Mots Glissés",
    "keywords": "Delegate WrapperFactory<TArgument, TComponentBase, TComponent> Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public delegate TComponent WrapperFactory<TArgument, TComponentBase, TComponent>(TComponentBase wrapped, TArgument argument) where TComponent : TComponentBase Parameters wrapped TComponentBase argument TArgument Returns TComponent Type Parameters TArgument TComponentBase TComponent Constructors WrapperFactory(object, nint) public WrapperFactory(object @object, nint method) Parameters object object method nint Methods BeginInvoke(TComponentBase, TArgument, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(TComponentBase wrapped, TArgument argument, AsyncCallback callback, object @object) Parameters wrapped TComponentBase argument TArgument callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual TComponent EndInvoke(IAsyncResult result) Parameters result IAsyncResult Returns TComponent Invoke(TComponentBase, TArgument) public virtual TComponent Invoke(TComponentBase wrapped, TArgument argument) Parameters wrapped TComponentBase argument TArgument Returns TComponent"
  },
  "api/YamlDotNet.Serialization.YamlAttributeOverrides.html": {
    "href": "api/YamlDotNet.Serialization.YamlAttributeOverrides.html",
    "title": "Class YamlAttributeOverrides | Mots Glissés",
    "keywords": "Class YamlAttributeOverrides Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class YamlAttributeOverrides Inheritance object YamlAttributeOverrides Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlAttributeOverrides() public YamlAttributeOverrides() Methods Add(Type, string, Attribute) public void Add(Type type, string member, Attribute attribute) Parameters type Type member string attribute Attribute Add<TClass>(Expression<Func<TClass, object>>, Attribute) public void Add<TClass>(Expression<Func<TClass, object>> propertyAccessor, Attribute attribute) Parameters propertyAccessor Expression<Func<TClass, object>> attribute Attribute Type Parameters TClass Clone() public YamlAttributeOverrides Clone() Returns YamlAttributeOverrides GetAttribute<T>(Type, string) public T GetAttribute<T>(Type type, string member) where T : Attribute Parameters type Type member string Returns T Type Parameters T"
  },
  "api/YamlDotNet.Serialization.YamlAttributeOverridesInspector.OverridePropertyDescriptor.html": {
    "href": "api/YamlDotNet.Serialization.YamlAttributeOverridesInspector.OverridePropertyDescriptor.html",
    "title": "Class YamlAttributeOverridesInspector.OverridePropertyDescriptor | Mots Glissés",
    "keywords": "Class YamlAttributeOverridesInspector.OverridePropertyDescriptor Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class YamlAttributeOverridesInspector.OverridePropertyDescriptor : IPropertyDescriptor Inheritance object YamlAttributeOverridesInspector.OverridePropertyDescriptor Implements IPropertyDescriptor Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors OverridePropertyDescriptor(IPropertyDescriptor, YamlAttributeOverrides, Type) public OverridePropertyDescriptor(IPropertyDescriptor baseDescriptor, YamlAttributeOverrides overrides, Type classType) Parameters baseDescriptor IPropertyDescriptor overrides YamlAttributeOverrides classType Type Properties CanWrite public bool CanWrite { get; } Property Value bool Name public string Name { get; } Property Value string Order public int Order { get; set; } Property Value int ScalarStyle public ScalarStyle ScalarStyle { get; set; } Property Value ScalarStyle Type public Type Type { get; } Property Value Type TypeOverride public Type? TypeOverride { get; set; } Property Value Type Methods GetCustomAttribute<T>() public T? GetCustomAttribute<T>() where T : Attribute Returns T Type Parameters T Read(object) public IObjectDescriptor Read(object target) Parameters target object Returns IObjectDescriptor Write(object, object?) public void Write(object target, object? value) Parameters target object value object"
  },
  "api/YamlDotNet.Serialization.YamlAttributeOverridesInspector.html": {
    "href": "api/YamlDotNet.Serialization.YamlAttributeOverridesInspector.html",
    "title": "Class YamlAttributeOverridesInspector | Mots Glissés",
    "keywords": "Class YamlAttributeOverridesInspector Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class YamlAttributeOverridesInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton YamlAttributeOverridesInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlAttributeOverridesInspector(ITypeInspector, YamlAttributeOverrides) public YamlAttributeOverridesInspector(ITypeInspector innerTypeDescriptor, YamlAttributeOverrides overrides) Parameters innerTypeDescriptor ITypeInspector overrides YamlAttributeOverrides Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.YamlAttributesTypeInspector.html": {
    "href": "api/YamlDotNet.Serialization.YamlAttributesTypeInspector.html",
    "title": "Class YamlAttributesTypeInspector | Mots Glissés",
    "keywords": "Class YamlAttributesTypeInspector Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class YamlAttributesTypeInspector : TypeInspectorSkeleton, ITypeInspector Inheritance object TypeInspectorSkeleton YamlAttributesTypeInspector Implements ITypeInspector Inherited Members TypeInspectorSkeleton.GetProperty(Type, object, string, bool) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlAttributesTypeInspector(ITypeInspector) public YamlAttributesTypeInspector(ITypeInspector innerTypeDescriptor) Parameters innerTypeDescriptor ITypeInspector Methods GetProperties(Type, object?) public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object? container) Parameters type Type container object Returns IEnumerable<IPropertyDescriptor>"
  },
  "api/YamlDotNet.Serialization.YamlFormatter.html": {
    "href": "api/YamlDotNet.Serialization.YamlFormatter.html",
    "title": "Class YamlFormatter | Mots Glissés",
    "keywords": "Class YamlFormatter Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public class YamlFormatter Inheritance object YamlFormatter Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors YamlFormatter() public YamlFormatter() Properties Default public static YamlFormatter Default { get; } Property Value YamlFormatter NumberFormat public NumberFormatInfo NumberFormat { get; set; } Property Value NumberFormatInfo Methods FormatBoolean(object) public string FormatBoolean(object boolean) Parameters boolean object Returns string FormatDateTime(object) public string FormatDateTime(object dateTime) Parameters dateTime object Returns string FormatNumber(double) public string FormatNumber(double number) Parameters number double Returns string FormatNumber(object) public string FormatNumber(object number) Parameters number object Returns string FormatNumber(float) public string FormatNumber(float number) Parameters number float Returns string FormatTimeSpan(object) public string FormatTimeSpan(object timeSpan) Parameters timeSpan object Returns string"
  },
  "api/YamlDotNet.Serialization.YamlIgnoreAttribute.html": {
    "href": "api/YamlDotNet.Serialization.YamlIgnoreAttribute.html",
    "title": "Class YamlIgnoreAttribute | Mots Glissés",
    "keywords": "Class YamlIgnoreAttribute Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class YamlIgnoreAttribute : Attribute Inheritance object Attribute YamlIgnoreAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlIgnoreAttribute() public YamlIgnoreAttribute()"
  },
  "api/YamlDotNet.Serialization.YamlMemberAttribute.html": {
    "href": "api/YamlDotNet.Serialization.YamlMemberAttribute.html",
    "title": "Class YamlMemberAttribute | Mots Glissés",
    "keywords": "Class YamlMemberAttribute Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class YamlMemberAttribute : Attribute Inheritance object Attribute YamlMemberAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlMemberAttribute() public YamlMemberAttribute() YamlMemberAttribute(Type) public YamlMemberAttribute(Type serializeAs) Parameters serializeAs Type Properties Alias public string? Alias { get; set; } Property Value string ApplyNamingConventions public bool ApplyNamingConventions { get; set; } Property Value bool DefaultValuesHandling public DefaultValuesHandling DefaultValuesHandling { get; set; } Property Value DefaultValuesHandling Description public string? Description { get; set; } Property Value string IsDefaultValuesHandlingSpecified public bool IsDefaultValuesHandlingSpecified { get; } Property Value bool Order public int Order { get; set; } Property Value int ScalarStyle public ScalarStyle ScalarStyle { get; set; } Property Value ScalarStyle SerializeAs public Type? SerializeAs { get; set; } Property Value Type"
  },
  "api/YamlDotNet.Serialization.YamlSerializableAttribute.html": {
    "href": "api/YamlDotNet.Serialization.YamlSerializableAttribute.html",
    "title": "Class YamlSerializableAttribute | Mots Glissés",
    "keywords": "Class YamlSerializableAttribute Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)] public sealed class YamlSerializableAttribute : Attribute Inheritance object Attribute YamlSerializableAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlSerializableAttribute() public YamlSerializableAttribute() YamlSerializableAttribute(Type) public YamlSerializableAttribute(Type serializableType) Parameters serializableType Type"
  },
  "api/YamlDotNet.Serialization.YamlStaticContextAttribute.html": {
    "href": "api/YamlDotNet.Serialization.YamlStaticContextAttribute.html",
    "title": "Class YamlStaticContextAttribute | Mots Glissés",
    "keywords": "Class YamlStaticContextAttribute Namespace YamlDotNet.Serialization Assembly YamlDotNet.dll public sealed class YamlStaticContextAttribute : Attribute Inheritance object Attribute YamlStaticContextAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors YamlStaticContextAttribute() public YamlStaticContextAttribute()"
  },
  "api/YamlDotNet.Serialization.html": {
    "href": "api/YamlDotNet.Serialization.html",
    "title": "Namespace YamlDotNet.Serialization | Mots Glissés",
    "keywords": "Namespace YamlDotNet.Serialization Classes AliasEventInfo BuilderSkeleton<TBuilder> Deserializer DeserializerBuilder EmissionPhaseObjectGraphVisitorArgs EventInfo MappingEndEventInfo MappingStartEventInfo ObjectDescriptor ObjectDescriptorExtensions ObjectEventInfo PropertyDescriptor ScalarEventInfo SequenceEndEventInfo SequenceStartEventInfo Serializer SerializerBuilder Settings StaticBuilderSkeleton<TBuilder> StaticContext StaticDeserializerBuilder StaticSerializerBuilder StreamFragment TagMappings YamlAttributeOverrides YamlAttributeOverridesInspector YamlAttributeOverridesInspector.OverridePropertyDescriptor YamlAttributesTypeInspector YamlFormatter YamlIgnoreAttribute YamlMemberAttribute YamlSerializableAttribute YamlStaticContextAttribute Structs Nothing Interfaces IAliasProvider IDeserializer IEventEmitter INamingConvention INodeDeserializer INodeTypeResolver IObjectAccessor IObjectDescriptor IObjectFactory IObjectGraphTraversalStrategy IObjectGraphVisitor<TContext> IPropertyDescriptor IRegistrationLocationSelectionSyntax<TBaseRegistrationType> ISerializer ITrackingRegistrationLocationSelectionSyntax<TBaseRegistrationType> ITypeInspector ITypeResolver IValueDeserializer IValuePromise IValueSerializer IYamlConvertible IYamlSerializable IYamlTypeConverter Enums DefaultValuesHandling Delegates ObjectDeserializer ObjectGraphTraversalStrategyFactory ObjectSerializer WrapperFactory<TComponentBase, TComponent> WrapperFactory<TArgument, TComponentBase, TComponent>"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Mots Glissés",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Mots Glissés",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Mots Glissés",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}